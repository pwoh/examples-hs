name: accelerate
version: 2.0.0.0
id: accelerate-2.0.0.0-H6SVdIe0K6B5OObFdUZBOL
key: H6SVdIe0K6B5OObFdUZBOL
license: BSD3
maintainer: Manuel M T Chakravarty <chak@cse.unsw.edu.au>
stability: Experimental
homepage: https://github.com/AccelerateHS/accelerate/
synopsis: An embedded language for accelerated array processing
description:
    @Data.Array.Accelerate@ defines an embedded array language for computations
    for high-performance computing in Haskell. Computations on multi-dimensional,
    regular arrays are expressed in the form of parameterised collective
    operations, such as maps, reductions, and permutations. These computations may
    then be online compiled and executed on a range of architectures.
    .
    [/A simple example/]
    .
    As a simple example, consider the computation of a dot product of two vectors
    of floating point numbers:
    .
    > dotp :: Acc (Vector Float) -> Acc (Vector Float) -> Acc (Scalar Float)
    > dotp xs ys = fold (+) 0 (zipWith (*) xs ys)
    .
    Except for the type, this code is almost the same as the corresponding Haskell
    code on lists of floats. The types indicate that the computation may be
    online-compiled for performance - for example, using
    @Data.Array.Accelerate.CUDA@ it may be on-the-fly off-loaded to the GPU.
    .
    [/Additional components/]
    .
    The following supported add-ons are available as separate packages. Install
    them from Hackage with @cabal install \<package\>@
    .
    * @accelerate-cuda@: Backend targeting CUDA-enabled NVIDIA GPUs. Requires
    the NVIDIA CUDA SDK and, for full functionality, hardware with compute
    compatibility 1.1 or greater. See the following table for supported GPUs:
    <http://en.wikipedia.org/wiki/CUDA#Supported_GPUs>
    .
    * @accelerate-examples@: Computational kernels and applications showcasing
    the use of Accelerate as well as a regression test suite, supporting
    function and performance testing.
    .
    * @accelerate-io@: Fast conversions between Accelerate arrays and other
    array formats (including vector and repa).
    .
    * @accelerate-fft@: Discrete Fourier transforms, with optimised
    implementation for the CUDA backend.
    .
    The following components are experimental and/or incomplete. Please contact us if
    you are interested in helping to work on or test them!
    .
    * @accelerate-llvm@: A framework for constructing backends targeting LLVM
    IR, with concrete backends for multicore CPUs and NVIDIA GPUs.
    .
    Additionally, the following libraries can be used with Accelerate:
    .
    * @colour-accelerate@: Colour representations in Accelerate (RGB, sRGB, HSV,
    and HSL).
    .
    * @gloss-accelerate@: Generate gloss pictures from Accelerate.
    .
    * @gloss-raster-accelerate@: Parallel rendering of raster images and
    animations.
    .
    * @lens-accelerate@: Lens operators for Accelerate types.
    .
    * @linear-accelerate@: Linear vector spaces in Accelerate.
    .
    * @mwc-random-accelerate@: Generate Accelerate arrays filled with high
    quality pseudorandom numbers.
    .
    * @numeric-prelude-accelerate@: Lifting numeric-prelude to Accelerate.
    .
    [/Examples and documentation/]
    .
    Haddock documentation is included in the package, and a tutorial is available
    on the GitHub wiki: <https://github.com/AccelerateHS/accelerate/wiki>
    .
    The @accelerate-examples@ package demonstrates a range of computational
    kernels and several complete applications, including:
    .
    * An implementation of the Canny edge detection algorithm
    .
    * An interactive Mandelbrot set generator
    .
    * A particle-based simulation of stable fluid flows
    .
    * An /n/-body simulation of gravitational attraction between solid particles
    .
    * A cellular automata simulation
    .
    * A \"password recovery\" tool, for dictionary lookup of MD5 hashes
    .
    * A simple interactive ray tracer
    .
    [/Mailing list and contacts/]
    .
    * Mailing list: <accelerate-haskell@googlegroups.com> (discussion of both
    use and development welcome).
    .
    * Sign up for the mailing list here:
    <http://groups.google.com/group/accelerate-haskell>
    .
    * Bug reports and issue tracking:
    <https://github.com/AccelerateHS/accelerate/issues>
    .
    [/Hackage note/]
    .
    The module documentation list generated by Hackage is incorrect. The only
    exposed modules should be:
    .
    * "Data.Array.Accelerate"
    .
    * "Data.Array.Accelerate.Interpreter"
    .
    * "Data.Array.Accelerate.Data.Bits"
    .
    * "Data.Array.Accelerate.Data.Complex"
    .
    * "Data.Array.Accelerate.Data.Fold"
    .
    * "Data.Array.Accelerate.Data.Monoid"
    .
category: Compilers/Interpreters, Concurrency, Data, Parallelism
author: Manuel M T Chakravarty,
        Robert Clifton-Everest,
        Gabriele Keller,
        Sean Lee,
        Ben Lever,
        Trevor L. McDonell,
        Ryan Newtown,
        Sean Seefried
exposed: True
exposed-modules:
    Data.Array.Accelerate Data.Array.Accelerate.Interpreter
    Data.Array.Accelerate.Data.Bits Data.Array.Accelerate.Data.Complex
    Data.Array.Accelerate.Data.Fold Data.Array.Accelerate.Data.Monoid
    Data.Array.Accelerate.AST Data.Array.Accelerate.Analysis.Match
    Data.Array.Accelerate.Analysis.Shape
    Data.Array.Accelerate.Analysis.Stencil
    Data.Array.Accelerate.Analysis.Type
    Data.Array.Accelerate.Array.Data Data.Array.Accelerate.Array.Remote
    Data.Array.Accelerate.Array.Remote.Class
    Data.Array.Accelerate.Array.Remote.LRU
    Data.Array.Accelerate.Array.Remote.Table
    Data.Array.Accelerate.Array.Representation
    Data.Array.Accelerate.Array.Sugar
    Data.Array.Accelerate.Array.Unique Data.Array.Accelerate.Async
    Data.Array.Accelerate.Debug Data.Array.Accelerate.Error
    Data.Array.Accelerate.FullList Data.Array.Accelerate.Lifetime
    Data.Array.Accelerate.Pretty Data.Array.Accelerate.Product
    Data.Array.Accelerate.Smart Data.Array.Accelerate.Trafo
    Data.Array.Accelerate.Type
hidden-modules: Data.Atomic Data.Array.Accelerate.Array.Lifted
                Data.Array.Accelerate.Array.Remote.Nursery
                Data.Array.Accelerate.Classes Data.Array.Accelerate.Classes.Bounded
                Data.Array.Accelerate.Classes.Enum Data.Array.Accelerate.Classes.Eq
                Data.Array.Accelerate.Classes.Floating
                Data.Array.Accelerate.Classes.Fractional
                Data.Array.Accelerate.Classes.FromIntegral
                Data.Array.Accelerate.Classes.Integral
                Data.Array.Accelerate.Classes.Num Data.Array.Accelerate.Classes.Ord
                Data.Array.Accelerate.Classes.Real
                Data.Array.Accelerate.Classes.RealFloat
                Data.Array.Accelerate.Classes.RealFrac
                Data.Array.Accelerate.Classes.ToFloating
                Data.Array.Accelerate.Debug.Flags
                Data.Array.Accelerate.Debug.Monitoring
                Data.Array.Accelerate.Debug.Stats Data.Array.Accelerate.Debug.Timed
                Data.Array.Accelerate.Debug.Trace Data.Array.Accelerate.Language
                Data.Array.Accelerate.Lift Data.Array.Accelerate.Prelude
                Data.Array.Accelerate.Pretty.Graphviz
                Data.Array.Accelerate.Pretty.Graphviz.Monad
                Data.Array.Accelerate.Pretty.Graphviz.Type
                Data.Array.Accelerate.Pretty.Print
                Data.Array.Accelerate.Trafo.Algebra
                Data.Array.Accelerate.Trafo.Base Data.Array.Accelerate.Trafo.Fusion
                Data.Array.Accelerate.Trafo.Rewrite
                Data.Array.Accelerate.Trafo.Sharing
                Data.Array.Accelerate.Trafo.Shrink
                Data.Array.Accelerate.Trafo.Simplify
                Data.Array.Accelerate.Trafo.Substitution
                Data.Array.Accelerate.Trafo.Vectorise
trusted: False
import-dirs: /home/pwoh/Dropbox/Thesis/notes/examples-hs/.stack-work/install/x86_64-linux/ghc-7.10.3/7.10.3/lib/x86_64-linux-ghc-7.10.3/accelerate-2.0.0.0-H6SVdIe0K6B5OObFdUZBOL
library-dirs: /home/pwoh/Dropbox/Thesis/notes/examples-hs/.stack-work/install/x86_64-linux/ghc-7.10.3/7.10.3/lib/x86_64-linux-ghc-7.10.3/accelerate-2.0.0.0-H6SVdIe0K6B5OObFdUZBOL
data-dir: /home/pwoh/Dropbox/Thesis/notes/examples-hs/.stack-work/install/x86_64-linux/ghc-7.10.3/7.10.3/share/x86_64-linux-ghc-7.10.3/accelerate-2.0.0.0
hs-libraries: HSaccelerate-2.0.0.0-H6SVdIe0K6B5OObFdUZBOL
depends:
    array-0.5.1.0-960bf9ae8875cc30355e086f8853a049
    base-4.8.2.0-0d6d1084fbc041e1cded9228e80e264d
    base-orphans-0.5.4-KOTuhQR8R9IE5njByiFjsk
    containers-0.5.6.2-59326c33e30ec8f6afd574cbac625bbb
    deepseq-1.4.1.1-614b63b36dd6e29d2b35afff57c25311
    directory-1.2.2.0-660a7a83a753ed85c8a374c15dae2b97
    exceptions-0.8.3-IcStABhIH6p7xN4Zese04
    fclabels-2.0.3.2-AKSm13q8hy6IfeajhhiTHQ
    filepath-1.4.0.0-f97d1e4aebfd7a03be6980454fe31d6e
    ghc-prim-0.4.0.0-6cdc86811872333585fa98756aa7c51e
    hashable-1.2.5.0-JoeaJ86VQLkKgRy2f7apkO
    hashtables-1.2.1.0-5c7pokIkbR19G5YylDBVyE
    mtl-2.2.1-8momq8BEamE2D2td4EjbI6
    pretty-1.1.2.0-5cc412214ea63f61ee84c4fbabdbe0ec
    template-haskell-2.10.0.0-3c4cb52230f347282af9b2817f013181
    time-1.5.0.1-1b9a502bb07a3e6f4d6935fbf9db7181
    transformers-0.4.2.0-81450cd8f86b36eaa8fa0cbaf6efc3a3
    unique-0-2FNUgyyrAmYKdbrqn3mvvo
    unix-2.7.1.0-bb54ee8f9f6b2600aae7a748eb88a610
    unordered-containers-0.2.7.2-7kpSaNdPzsRLLb5cmzUyDm
haddock-interfaces: /home/pwoh/Dropbox/Thesis/notes/examples-hs/.stack-work/install/x86_64-linux/ghc-7.10.3/7.10.3/doc/accelerate-2.0.0.0/accelerate.haddock
haddock-html: /home/pwoh/Dropbox/Thesis/notes/examples-hs/.stack-work/install/x86_64-linux/ghc-7.10.3/7.10.3/doc/accelerate-2.0.0.0
