
==================== FINAL INTERFACE ====================
2017-02-22 08:36:16.77502 UTC

interface 4L77jDB8vjdHgiqyCVhmEO:Dotp 7103
  interface hash: fd99d4369e15381ac4a009d537e0f826
  ABI hash: df170f5f12a515f2a557e4807b61c612
  export-list hash: 93aed0e0c2be138dc63c2046415676ad
  orphan hash: 8e40da3cbcef89752f0c90f1a23a7e0d
  flag hash: f9ec85c04fddb45d55ed35ca2738c771
  sig of: Nothing
  used TH splices: False
  where
exports:
  Dotp.dotp
  Dotp.dotpRandom
module dependencies: ExampleUtil
package dependencies: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb
                      unique-0@2FNUgyyrAmYKdbrqn3mvvo
                      SafeSemaphore-0.10.1@4VzDb4ntLXUJnFUrtJ7GGv
                      hashtables-1.2.1.0@5c7pokIkbR19G5YylDBVyE
                      cryptonite-0.21@6ag21kspMrFL11QdYwhhfG
                      safe-0.3.14@7f0vrWinAgM1T5X3bG8j80
                      unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm
                      vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj
                      mtl-2.2.1@8momq8BEamE2D2td4EjbI6
                      th-lift-0.7.6@9xi3Mz64ymEJ1vZD0wlTOv
                      fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ
                      primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr
                      cryptohash-0.11.9@BsOj25FkNUsB2WCYOURHjm
                      th-lift-instances-0.1.11@CAPyKpnnJW01iJEIF59PP6
                      stm-2.4.4.1@ChXYRyvniZhC9Q8D3M7IoM
                      text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1
                      th-reify-many-0.1.6@DnV1gYvK1Sa9GNLWSZ9jnm
                      cuda-0.7.5.2@DpZzjWAVMxWIXIVfVw3Wnw
                      srcloc-0.5.1.0@E34IWRSNMMvAUXGE7eKwOu
                      exception-transformers-0.4.0.5@EFOF3mYZPV1B50sqUgvYGc
                      memory-0.14.1@EsLu564AenE6JFSh3lOntv
                      language-c-quote-0.11.7.1@EztlsnltaU96sTZzaRwW8b
                      random-1.1@FDxw8MeZdq3EsvcqVWcvl2
                      th-orphans-0.13.3@GLg6YvDwYjk9ZfbaXwOd0F
                      accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL
                      th-expand-syns-0.4.2.0@HlXlBCX6OId3xMvrbx2dSb
                      hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO
                      exceptions-0.8.3@JojInh7ceKU543yZfg90bc
                      base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk
                      haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M
                      symbol-0.2.4@LNcZ3H35KMR1al3flLfwIv
                      mainland-pretty-0.4.1.4@LQuDLP9sEyU5ScH60oerOj
                      haskell-src-meta-0.7.0.1@LpLuN4V0u3aKg53Ovcg4WG
                      syb-0.6@LpfDN7WBV29Iko8aejtimy
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      template-haskell-2.10.0.0 time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Remote
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.CodeGen.Monad
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Execute.Event
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Persistent
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
         th-lift-0.7.6@9xi3Mz64ymEJ1vZD0wlTOv:Language.Haskell.TH.Lift
         fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ:Data.Label.Point
         th-lift-instances-0.1.11@CAPyKpnnJW01iJEIF59PP6:Instances.TH.Lift
         stm-2.4.4.1@ChXYRyvniZhC9Q8D3M7IoM:Control.Monad.STM
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Show
         language-c-quote-0.11.7.1@EztlsnltaU96sTZzaRwW8b:Language.C.Pretty
         th-orphans-0.13.3@GLg6YvDwYjk9ZfbaXwOd0F:Language.Haskell.TH.Instances
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Bounded
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Enum
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Floating
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Fractional
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Integral
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Real
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFloat
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFrac
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Pretty
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo
         hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO:Data.Hashable.Generic
         base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk:Data.Orphans
         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.Parser
         syb-0.6@LpfDN7WBV29Iko8aejtimy:Data.Generics.Instances
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Prim
                         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Remote
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashMap.Base
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashSet
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Primitive
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Storable
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed.Base
                         primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr:Control.Monad.Primitive
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Data
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Lifted
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Representation
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Product
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Base
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Sharing
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Vectorise
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Type
                         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.Syntax
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA c73cf0bfd3c7967bdb35657ce55da9ba
import  -/  ExampleUtil 5dbb16959abc490234a87eac49fac989
  exports: 3dae30cc8d0c2c55f1dc666b42195119
  randomlist aebe3f7dbd8ea40e0dcfdf63479620fa
  toAccVector f4863ef8b5c1c3d91443b0c8057ea068
import  -/  random-1.1@FDxw8MeZdq3EsvcqVWcvl2:System.Random db7980e946ff6b1eec7dfc3cb2f36882
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate 66e0d97f271003a24ae7f909e33d3218
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar 18f3ec99b0068a9f53866f3c514a462e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Language 577d8aa034409d525b9837ad21e2923b
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart 65badb76028b0d4b0c0643ecbaf1c413
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
03543f3545f3da90f10aaab20dd2bbfa
  $s$fArraysArray ::
    Data.Array.Accelerate.Array.Sugar.Arrays
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Array
                       Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double)
                  Dotp.$s$fArraysArray1
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <Data.Array.Accelerate.Array.Sugar.Array
                               Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double>_N))
                  Dotp.$s$fArraysArray1
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                 <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Double>_N)))
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$carrays
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Double
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double>_N))
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  Dotp.$s$fArraysArray_$s$fArraysArray_$cflavour
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$ctoArr
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Double
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double>_N))
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$cfromArr
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Double
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double>_N))
                     Dotp.$s$fArraysArray1
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
c61fb2da81ea990875a78b47d518d5f2
  $s$fArraysArray1 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Array
                                Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double) ->
                 Dotp.$s$fArraysArray2) -}
fdd0a203677c2f49b78b007c26119e28
  $s$fArraysArray10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
931ad416f8ff41bb78bf8f62cad8685c
  $s$fArraysArray11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
2e4e763c7b37d9848aec48134f8bf3d8
  $s$fArraysArray12 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   Dotp.$s$fArraysArray13
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e4a270f8368abef6771f2953ba8b4cc5
  $s$fArraysArray13 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 18079619739210634038
                   __word 13272276217628883993
                   Dotp.$s$fArraysArray14
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
f0bc813abe4faf5b9d45002c1c8796a2
  $s$fArraysArray14 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 18079619739210634038
                   __word 13272276217628883993
                   Dotp.$s$fArraysArray_ww3
                   Dotp.$s$fArraysArray_ww1
                   Dotp.$s$fArraysArray15) -}
60f2d0fad0241afb4540580930c09a6b
  $s$fArraysArray15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Z"#) -}
6819f44e45897834d3ba29faa3c389d3
  $s$fArraysArray2 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Dotp.$s$fArraysArray_w1 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             Dotp.$s$fArraysArray6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                Dotp.$s$fArraysArray_ww3
                                Dotp.$s$fArraysArray_ww1
                                Dotp.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z1 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z1
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                Dotp.$s$fArraysArray_ww3
                                Dotp.$s$fArraysArray_ww1
                                Dotp.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             Dotp.$s$fArraysArray3 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             Dotp.$s$fArraysArray6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                Dotp.$s$fArraysArray_ww3
                                Dotp.$s$fArraysArray_ww1
                                Dotp.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z1 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z1
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                Dotp.$s$fArraysArray_ww3
                                Dotp.$s$fArraysArray_ww1
                                Dotp.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
296e0a1115bdf3ad934933cd26258591
  $s$fArraysArray3 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   Dotp.$s$fArraysArray5
                   Dotp.$s$fArraysArray4) -}
65adc5a46e07ad5723720ce9be630b9c
  $s$fArraysArray4 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (Dotp.$s$fArraysArray_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
3336ac69fc7cdf846891f68e12e9e433
  $s$fArraysArray5 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 8044828400323168594
                   __word 13765680496363839762) -}
4b2489bfcc81f63c46027909f4d03b56
  $s$fArraysArray6 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   Dotp.$s$fArraysArray7
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
8cc8757e7f7c4bcda11908add96e9a35
  $s$fArraysArray7 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Dotp.$s$fArraysArray8
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
25fc46928fabe065a452a352fadbc798
  $s$fArraysArray8 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   Dotp.$s$fArraysArray11
                   Dotp.$s$fArraysArray10
                   Dotp.$s$fArraysArray9) -}
e11364d5c1794c305b91d7bd7c4c44ed
  $s$fArraysArray9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
8a85a82aa87923538746bf0ff91e4c97
  $s$fArraysArray_$s$fArraysArray_$cflavour ::
    Data.Array.Accelerate.Array.Sugar.Array
      Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double
    -> Data.Array.Accelerate.Array.Sugar.ArraysFlavour
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double ->
                 Data.Array.Accelerate.Array.Sugar.ArraysFarray
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double)
                   @ Data.Array.Accelerate.Array.Sugar.Z
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.Z GHC.Types.Double>_N
                   Data.Array.Accelerate.Array.Sugar.$fShapeZ
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
382d0565c9b02630988a29772e73069d
  $s$fArraysArray_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
c49bace78adace28306e1f94c731f0ad
  $s$fArraysArray_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   Dotp.$s$fArraysArray12) -}
e72a889fef6220821711136d14350404
  $s$fArraysArray_ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Array.Accelerate.Array.Sugar"#) -}
1d123cf1e09ffd276fa6fc5f1946f746
  $s$fArraysArray_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "H6SVdIe0K6B5OObFdUZBOL"#) -}
59e62c9ae01181b425bf92a6532fccb3
  $s$fArraysArray_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Array"#) -}
c2362d0a0eea8ba1379795832747e306
  dotp ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Scalar GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Dotp.dotp1
                  `cast`
                (<Data.Array.Accelerate.Smart.Acc
                    (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)>_R
                 ->_R <Data.Array.Accelerate.Smart.Acc
                         (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                       Data.Array.Accelerate.Array.Sugar.DIM0
                                                                       GHC.Types.Double>_N) -}
cba4ca50090b7d6355d45ece6be521f4
  dotp1 ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.PreAcc
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM0 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ xs :: Data.Array.Accelerate.Smart.Acc
                           (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
                   ys :: Data.Array.Accelerate.Smart.Acc
                           (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.Fold
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        Data.Array.Accelerate.Array.Sugar.DIM0 GHC.Types.Double)
                   @ Data.Array.Accelerate.Array.Sugar.DIM0
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM0 GHC.Types.Double>_N
                   Data.Array.Accelerate.Array.Sugar.$fShapeZ
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_$c+
                   Dotp.dotp2
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N)
                   (Data.Array.Accelerate.Smart.ZipWith
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Seq
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Data.Array.Accelerate.Array.Sugar.Array
                           (Data.Array.Accelerate.Array.Sugar.DIM0
                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           GHC.Types.Double)
                      @ (Data.Array.Accelerate.Array.Sugar.DIM0
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      @ GHC.Types.Double
                      @ GHC.Types.Double
                      @ GHC.Types.Double
                      @~ <Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.DIM0
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            GHC.Types.Double>_N
                      Data.Array.Accelerate.Array.Lifted.$fArraysVector'_$s$fShape:.
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Classes.Num.$fNumExp1_$c*
                      xs
                      ys)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                     (Data.Array.Accelerate.Array.Sugar.DIM0
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                     GHC.Types.Double>_N)) -}
9b42f09c5696ca758d9a0526af8879b6
  dotp2 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Seq
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Double
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Dotp.dotp3) -}
deede222f30b0a6265edd74dad0fa62c
  dotp3 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
3e75181382b4db45ce4be26ab8d3862d
  dotpRandom :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Dotp.dotpRandom1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f19da9799cb5da7327aa829fe9768408
  dotpRandom1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U(U)><L,U>,
     Unfolding: (\ size :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.NTCo:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, System.Random.StdGen)
                        @ System.Random.StdGen
                        r#
                        System.Random.newStdGen2
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of b1 { System.Random.StdGen ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (let {
                           a2 :: Data.Array.Accelerate.Smart.PreAcc
                                   Data.Array.Accelerate.Smart.Acc
                                   Data.Array.Accelerate.Smart.Seq
                                   Data.Array.Accelerate.Smart.Exp
                                   (Data.Array.Accelerate.Array.Sugar.Array
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                      GHC.Types.Double)
                           = ExampleUtil.toAccVector1
                               size
                               (case size of ww { GHC.Types.I# ww1 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.<# 0 ww1) of wild1 {
                                  GHC.Types.False -> GHC.Types.[] @ GHC.Types.Double
                                  GHC.Types.True -> ExampleUtil.$wgo b1 ww1 } })
                         } in
                         case Data.Array.Accelerate.CUDA.runWith
                                @ (Data.Array.Accelerate.Array.Sugar.Scalar GHC.Types.Double)
                                Dotp.$s$fArraysArray
                                Data.Array.Accelerate.CUDA.State.defaultContext
                                (Data.Array.Accelerate.Smart.Fold
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (Data.Array.Accelerate.Array.Sugar.Array
                                        Data.Array.Accelerate.Array.Sugar.DIM0 GHC.Types.Double)
                                   @ Data.Array.Accelerate.Array.Sugar.DIM0
                                   @ GHC.Types.Double
                                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                                         Data.Array.Accelerate.Array.Sugar.DIM0 GHC.Types.Double>_N
                                   Data.Array.Accelerate.Array.Sugar.$fShapeZ
                                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                   Data.Array.Accelerate.Classes.Num.$fNumExp1_$c+
                                   Dotp.dotp2
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N)
                                   (Data.Array.Accelerate.Smart.ZipWith
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Data.Array.Accelerate.Array.Sugar.Array
                                           (Data.Array.Accelerate.Array.Sugar.DIM0
                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                           GHC.Types.Double)
                                      @ (Data.Array.Accelerate.Array.Sugar.DIM0
                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                      @ GHC.Types.Double
                                      @ GHC.Types.Double
                                      @ GHC.Types.Double
                                      @~ <Data.Array.Accelerate.Array.Sugar.Array
                                            (Data.Array.Accelerate.Array.Sugar.DIM0
                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                            GHC.Types.Double>_N
                                      Data.Array.Accelerate.Array.Lifted.$fArraysVector'_$s$fShape:.
                                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                      Data.Array.Accelerate.Classes.Num.$fNumExp1_$c*
                                      a2
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                        GHC.Types.Double>_N)
                                      a2
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                        GHC.Types.Double>_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                                     (Data.Array.Accelerate.Array.Sugar.DIM0
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                     GHC.Types.Double>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                                  Data.Array.Accelerate.Array.Sugar.DIM0
                                                                                  GHC.Types.Double>_N) of wild1 { Data.Array.Accelerate.Array.Sugar.Array $dShape2 $dElt2 sh1 ds7 ->
                         case Data.Array.Accelerate.Array.Sugar.toElt
                                @ Data.Array.Accelerate.Array.Sugar.DIM0
                                (Data.Array.Accelerate.Array.Sugar.$p1Shape
                                   @ Data.Array.Accelerate.Array.Sugar.DIM0
                                   $dShape2)
                                sh1 of wild2 { Data.Array.Accelerate.Array.Sugar.Z ->
                         case GHC.Show.$wshowSignedInt
                                0
                                1
                                (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                         GHC.Types.: @ GHC.Types.Char ww5 ww6 } } })
                        GHC.Types.False
                        ipv of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4, GHC.Tuple.() #) } } } }) -}
"SPEC/Dotp $fArraysArray @ Z @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                       (Data.Array.Accelerate.Array.Sugar.Array
                                                                          Data.Array.Accelerate.Array.Sugar.Z
                                                                          GHC.Types.Double)
                                                       $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                        (Data.Array.Accelerate.Array.Sugar.ArrRepr
                                                                           (Data.Array.Accelerate.Array.Sugar.Array
                                                                              Data.Array.Accelerate.Array.Sugar.Z
                                                                              GHC.Types.Double))
                                                       $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                     Data.Array.Accelerate.Array.Sugar.Z
                                                       $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                   GHC.Types.Double
  Data.Array.Accelerate.Array.Sugar.$fArraysArray @ Data.Array.Accelerate.Array.Sugar.Z
                                                  @ GHC.Types.Double
                                                  $dTypeable
                                                  $dTypeable1
                                                  $dShape1
                                                  $dElt2
  = Dotp.$s$fArraysArray
"SPEC/Dotp $fArraysArray_$cflavour @ Z @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                 (Data.Array.Accelerate.Array.Sugar.Array
                                                                                    Data.Array.Accelerate.Array.Sugar.Z
                                                                                    GHC.Types.Double)
                                                                 $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                  (Data.Array.Accelerate.Array.Sugar.ArrRepr
                                                                                     (Data.Array.Accelerate.Array.Sugar.Array
                                                                                        Data.Array.Accelerate.Array.Sugar.Z
                                                                                        GHC.Types.Double))
                                                                 $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                               Data.Array.Accelerate.Array.Sugar.Z
                                                                 $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                             GHC.Types.Double
  Data.Array.Accelerate.Array.Sugar.$fArraysArray_$cflavour @ Data.Array.Accelerate.Array.Sugar.Z
                                                            @ GHC.Types.Double
                                                            $dTypeable
                                                            $dTypeable1
                                                            $dShape1
                                                            $dElt2
  = Dotp.$s$fArraysArray_$s$fArraysArray_$cflavour
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

