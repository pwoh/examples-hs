
==================== FINAL INTERFACE ====================
2017-02-22 08:36:15.659056 UTC

interface 4L77jDB8vjdHgiqyCVhmEO:ExampleUtil 7103
  interface hash: 77caef0949782b5846971980abf978ce
  ABI hash: 5dbb16959abc490234a87eac49fac989
  export-list hash: 3dae30cc8d0c2c55f1dc666b42195119
  orphan hash: 31219ae81542c83ee247fbc96cdbd7d0
  flag hash: 2bf3a6754fcc98c0543572e3f4700a81
  sig of: Nothing
  used TH splices: False
  where
exports:
  ExampleUtil.randomlist
  ExampleUtil.toAccVector
module dependencies:
package dependencies: unique-0@2FNUgyyrAmYKdbrqn3mvvo
                      hashtables-1.2.1.0@5c7pokIkbR19G5YylDBVyE
                      unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm
                      vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj
                      mtl-2.2.1@8momq8BEamE2D2td4EjbI6
                      fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ
                      primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr
                      text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1
                      random-1.1@FDxw8MeZdq3EsvcqVWcvl2
                      accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL
                      hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO
                      base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      template-haskell-2.10.0.0 time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
         fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ:Data.Label.Point
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Show
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Bounded
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Enum
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Floating
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Fractional
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Integral
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Real
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFloat
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFrac
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Pretty
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo
         hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO:Data.Hashable.Generic
         base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk:Data.Orphans
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashMap.Base
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashSet
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Primitive
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed.Base
                         primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr:Control.Monad.Primitive
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Data
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Lifted
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Representation
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Product
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Base
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Sharing
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Vectorise
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Type
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  random-1.1@FDxw8MeZdq3EsvcqVWcvl2:System.Random db7980e946ff6b1eec7dfc3cb2f36882
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate 66e0d97f271003a24ae7f909e33d3218
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar 18f3ec99b0068a9f53866f3c514a462e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Language 577d8aa034409d525b9837ad21e2923b
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart 65badb76028b0d4b0c0643ecbaf1c413
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
caacd5dc450a966e0a95d96adf385827
  $s$WArraysFarray1 ::
    Data.Array.Accelerate.Array.Sugar.Shape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray_$s$fShape:. -}
7abc136003d67582b19a07a482446a9c
  $s$WArraysFarray10 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
    -> Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (Data.Array.Accelerate.Array.Sugar.Any
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)) ->
                 Data.Array.Accelerate.Array.Sugar.Any
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)) -}
1d3e524af6b0e3d2488ed5564b2af2b2
  $s$WArraysFarray11 ::
    Data.Array.Accelerate.Array.Data.ArrayElt ((), ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,) -}
ee47cd4ff1b82c5e79d019076a97db45
  $s$WArraysFarray12 :: Data.Typeable.Internal.Typeable ((), ())
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray13
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <((), ())>_N)) -}
3df33b604daeccf382a11ad9c6383883
  $s$WArraysFarray13 ::
    GHC.Prim.Proxy# ((), ()) -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((), ()) ->
                 ExampleUtil.$s$WArraysFarray14) -}
2fde66e0604ec4b89b72cd894a1d11ef
  $s$WArraysFarray14 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray17 of wild { Data.Typeable.Internal.TypeRep dt dt1 tc ks trs ->
                 case tc of ww { Data.Typeable.Internal.TyCon ww1 ww2 ww3 ww4 ww5 ->
                 case Data.Typeable.Internal.$wmkPolyTyConApp
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ks
                        (GHC.Base.++
                           @ Data.Typeable.Internal.TypeRep
                           trs
                           ExampleUtil.$s$WArraysFarray15) of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Data.Typeable.Internal.TypeRep ww7 ww8 ww9 ww10 ww11 } } }) -}
b53b11d24821a410f1aece97d8d55e93
  $s$WArraysFarray15 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   ExampleUtil.$s$WArraysFarray16
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
87d577cc42d58efd4f0da7f9c505a8a7
  $s$WArraysFarray16 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 15843165073189925570
                   __word 13730769858450861905
                   ExampleUtil.$s$WArraysFarray_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
16dbff9a2b65a8b997cf60ed972a6961
  $s$WArraysFarray17 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray_w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17502837480397947244
                        __word 15872498598114190556
                        ExampleUtil.$s$WArraysFarray_wild1
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             ExampleUtil.$s$WArraysFarray18 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        ExampleUtil.$s$WArraysFarray_wild1
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
e52da051ae07cc903bf1c6be2f965936
  $s$WArraysFarray18 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   ExampleUtil.$s$WArraysFarray20
                   ExampleUtil.$s$WArraysFarray19) -}
c5a91c86450e2fb018923002ff27bb2b
  $s$WArraysFarray19 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (ExampleUtil.$s$WArraysFarray_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
a2f76c90ea869b669e677c8b995d0cac
  $s$WArraysFarray2 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                <GHC.Types.Int>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ Data.Array.Accelerate.Array.Sugar.Z
                   @ GHC.Types.Int
                   (Data.Array.Accelerate.Array.Sugar.$fEltZ_$ctoElt t1)
                   h1
                     `cast`
                   (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])) }) -}
e377cc96c11c577aba1c1d20c0664c44
  $s$WArraysFarray20 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 17502837480397947244
                   __word 15872498598114190556) -}
379559aa11f9af2df1d74c9d41162c85
  $s$WArraysFarray21 ::
    Data.Typeable.Internal.Typeable
      (Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray22
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N
                          <Data.Array.Accelerate.Array.Sugar.Any
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)>_N)) -}
a01d7e48585d8d726f0ef0352df20373
  $s$WArraysFarray22 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Any
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)) ->
                 ExampleUtil.$s$WArraysFarray23) -}
7eb3d5500728865876ed13ad62025c01
  $s$WArraysFarray23 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray_w2 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 9075081179335608289
                        __word 18440357458150962883
                        ExampleUtil.$s$WArraysFarray_wild2
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             ExampleUtil.$s$WArraysFarray24 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        ExampleUtil.$s$WArraysFarray_wild2
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
1d5f6ebb8e32fc9d2eb9af52b6e835ee
  $s$WArraysFarray24 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   ExampleUtil.$s$WArraysFarray26
                   ExampleUtil.$s$WArraysFarray25) -}
18d1a7abb11c6833ce4a76e026c9b0bf
  $s$WArraysFarray25 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (ExampleUtil.$s$WArraysFarray_go1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
71471fa4788bb5b270519954fb9f2da5
  $s$WArraysFarray26 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 9075081179335608289
                   __word 18440357458150962883) -}
f6c3ef524ef6668d75d41e332131bb35
  $s$WArraysFarray27 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   ExampleUtil.$s$WArraysFarray28
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
11b6836a229ed1cd94b8040347e296de
  $s$WArraysFarray28 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray_w3 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             ExampleUtil.$s$WArraysFarray32 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             ExampleUtil.$s$WArraysFarray_wild3
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     ExampleUtil.$s$WArraysFarray31
                                     (let {
                                        z3 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z3
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             ExampleUtil.$s$WArraysFarray_wild3
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             ExampleUtil.$s$WArraysFarray29 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             ExampleUtil.$s$WArraysFarray32 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$WArraysFarray_ww8)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z3 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z3
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$WArraysFarray_ww8)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
696b5b719cfd0e682b3a9e374de6d328
  $s$WArraysFarray29 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   ExampleUtil.$s$WArraysFarray31
                   ExampleUtil.$s$WArraysFarray30) -}
fd2ac34a83f813139d25e86fdd2737f9
  $s$WArraysFarray3 ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*H,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fEltZ_$cfromElt t1,
                  h1
                    `cast`
                  (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))) }) -}
037d3786f1b02e87e3dc6af2d88d926d
  $s$WArraysFarray30 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (ExampleUtil.$s$WArraysFarray_go2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
de95b3de11e5ce68edb64a7f9ba88c4c
  $s$WArraysFarray31 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 2185754398834785717
                   __word 9097758251846721585) -}
4c260cd15b02d34100ab43932baabe9f
  $s$WArraysFarray32 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   ExampleUtil.$s$WArraysFarray33
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
5e47e8e3eb836ed771d26cd9da4cb558
  $s$WArraysFarray33 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 16287469036901857884
                   __word 16587023596664995632
                   ExampleUtil.$s$WArraysFarray_wild4
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
cb1dd29b0914db253aa5efdc9e6d7d9e
  $s$WArraysFarray34 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   ExampleUtil.$s$WArraysFarray35
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
0286d4a5a9a90de30d0c3bed54b04664
  $s$WArraysFarray35 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 18079619739210634038
                   __word 13272276217628883993
                   ExampleUtil.$s$WArraysFarray36
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
996295ac37517c0c24304e3192bd9690
  $s$WArraysFarray36 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 18079619739210634038
                   __word 13272276217628883993
                   ExampleUtil.$s$WArraysFarray_ww7
                   ExampleUtil.$s$WArraysFarray_ww6
                   ExampleUtil.$s$WArraysFarray37) -}
d528fc0623000f7bf9ba4ff9ae5b3a58
  $s$WArraysFarray37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Z"#) -}
4f770704349f197ba34dba001518cc21
  $s$WArraysFarray38 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray_$s$fElt:. -}
ef6980e8dc4f48e22c888e9edfb615d7
  $s$WArraysFarray39 ::
    Data.Array.Accelerate.Array.Data.ArrayElt ((), GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)1 -}
9cf992bb187a30081802b6726e6980a4
  $s$WArraysFarray4 ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 GHC.Types.I# 1) -}
3ce09d80aa7eea086fc3c9b030676ba1
  $s$WArraysFarray40 ::
    Data.Typeable.Internal.Typeable ((), GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray41
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <((), GHC.Types.Int)>_N)) -}
528f7419e9633124af906bef06bc451d
  $s$WArraysFarray41 ::
    GHC.Prim.Proxy# ((), GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((), GHC.Types.Int) ->
                 ExampleUtil.$s$WArraysFarray42) -}
d299da9ee79efc7caa1d5e5d35e55d4d
  $s$WArraysFarray42 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray17 of wild { Data.Typeable.Internal.TypeRep dt dt1 tc ks trs ->
                 case tc of ww { Data.Typeable.Internal.TyCon ww1 ww2 ww3 ww4 ww5 ->
                 case Data.Typeable.Internal.$wmkPolyTyConApp
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ks
                        (GHC.Base.++
                           @ Data.Typeable.Internal.TypeRep
                           trs
                           ExampleUtil.$s$WArraysFarray32) of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Data.Typeable.Internal.TypeRep ww7 ww8 ww9 ww10 ww11 } } }) -}
81b54985110e76ea9be641beda845db7
  $s$WArraysFarray43 ::
    Data.Typeable.Internal.Typeable
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray44
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N
                          <Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)) -}
e88d3c9324958cff1e95013634e53458
  $s$WArraysFarray44 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 ExampleUtil.$s$WArraysFarray28) -}
47fb719c780bac1dd03917c22e438a3d
  $s$WArraysFarray45 ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray_$s$fShow:. -}
252cf0fbe79457c6b972ddda160b98a1
  $s$WArraysFarray5 ::
    Data.Array.Accelerate.Array.Sugar.SliceShape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    ~ Data.Array.Accelerate.Array.Sugar.Z
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Data.Array.Accelerate.Array.Sugar.SliceShape
                        (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                   @ Data.Array.Accelerate.Array.Sugar.Z
                   @~ (Trans
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N)
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0]))) -}
dd209a7dc2f21ecdcdbee7cbc568ab0d
  $s$WArraysFarray6 ::
    Data.Array.Accelerate.Array.Sugar.CoSliceShape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    ~ (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                        (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @~ (Trans
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N)
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]
                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)) -}
97af5155c510a14fa743cb3257329bed
  $s$WArraysFarray7 ::
    Data.Array.Accelerate.Array.Sugar.FullShape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    ~ (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Data.Array.Accelerate.Array.Sugar.FullShape
                        (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @~ (Trans
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N)
                           (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0]
                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)) -}
a916ab24c5a363c5d804b1ff5ecac4cb
  $s$WArraysFarray8 ::
    Data.Array.Accelerate.Array.Representation.Shape
      ((), GHC.Types.Int)
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fShape(,) -}
36dc09d1cc652547364b8978bb821516
  $s$WArraysFarray9 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray_$s$fEltAny -}
278db39cdc6c567f5963e0a05e7fa65f
  $s$WArraysFarray_$s$fElt:. ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  ExampleUtil.$s$WArraysFarray45
                  ExampleUtil.$s$WArraysFarray43
                  ExampleUtil.$s$WArraysFarray40
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))))_R
                  ExampleUtil.$s$WArraysFarray39
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Int
                     ExampleUtil.$s$WArraysFarray45
                     ExampleUtil.$s$WArraysFarray43
                     ExampleUtil.$s$WArraysFarray40
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     ExampleUtil.$s$WArraysFarray39
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fEltZ
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  ExampleUtil.$s$WArraysFarray3
                  ExampleUtil.$s$WArraysFarray2 -}
e858880de7d2dd7b254836e407d8a22b
  $s$WArraysFarray_$s$fEltAny ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Any
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Any
                       (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                  (Data.Array.Accelerate.Array.Sugar.$fShowAny
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                  ExampleUtil.$s$WArraysFarray21
                  ExampleUtil.$s$WArraysFarray12
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                            <()>_N))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  ExampleUtil.$s$WArraysFarray11
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                            <()>_N))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fEltAny_$celtType
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     (Data.Array.Accelerate.Array.Sugar.$fShowAny
                        @ (Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                     ExampleUtil.$s$WArraysFarray21
                     ExampleUtil.$s$WArraysFarray12
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                               <()>_N))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     ExampleUtil.$s$WArraysFarray11
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                               <()>_N))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fEltAny_$cfromElt
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     (Data.Array.Accelerate.Array.Sugar.$fShowAny
                        @ (Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                     ExampleUtil.$s$WArraysFarray21
                     ExampleUtil.$s$WArraysFarray12
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                               <()>_N))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     ExampleUtil.$s$WArraysFarray11
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny0[0]),
                               <()>_N))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAny[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  ExampleUtil.$s$WArraysFarray10 -}
7f836f06456a3e2b5da05956afad78b7
  $s$WArraysFarray_$s$fShape:. ::
    Data.Array.Accelerate.Array.Sugar.Shape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  ExampleUtil.$s$WArraysFarray38
                  ExampleUtil.$s$WArraysFarray9
                  ExampleUtil.$s$WArraysFarray8
                    `cast`
                  (Data.Array.Accelerate.Array.Representation.Shape
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))))_R
                  ExampleUtil.$s$WArraysFarray7
                  ExampleUtil.$s$WArraysFarray6
                  ExampleUtil.$s$WArraysFarray5
                  ExampleUtil.$s$WArraysFarray4
                  Data.Array.Accelerate.Array.Sugar.$fShape:._$s$csize
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cempty
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cignore
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cintersect
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cunion
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$ctoIndex
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cfromIndex
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cbound
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     ExampleUtil.$s$WArraysFarray38
                     ExampleUtil.$s$WArraysFarray9
                     ExampleUtil.$s$WArraysFarray8
                       `cast`
                     (Data.Array.Accelerate.Array.Representation.Shape
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     ExampleUtil.$s$WArraysFarray7
                     ExampleUtil.$s$WArraysFarray6
                     ExampleUtil.$s$WArraysFarray5
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$citer
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$citer1
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$crangeToShape
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$cshapeToRange
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     ExampleUtil.$s$WArraysFarray38
                     ExampleUtil.$s$WArraysFarray9
                     ExampleUtil.$s$WArraysFarray8
                       `cast`
                     (Data.Array.Accelerate.Array.Representation.Shape
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     ExampleUtil.$s$WArraysFarray7
                     ExampleUtil.$s$WArraysFarray6
                     ExampleUtil.$s$WArraysFarray5
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$cshapeToList
                  ExampleUtil.$s$WArraysFarray_$s$fShape:._$clistToShape
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$csliceAnyIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     ExampleUtil.$s$WArraysFarray38
                     ExampleUtil.$s$WArraysFarray9
                     ExampleUtil.$s$WArraysFarray8
                       `cast`
                     (Data.Array.Accelerate.Array.Representation.Shape
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     ExampleUtil.$s$WArraysFarray7
                     ExampleUtil.$s$WArraysFarray6
                     ExampleUtil.$s$WArraysFarray5
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ)
                  (Data.Array.Accelerate.Array.Sugar.$fShape:._$csliceNoneIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     ExampleUtil.$s$WArraysFarray38
                     ExampleUtil.$s$WArraysFarray9
                     ExampleUtil.$s$WArraysFarray8
                       `cast`
                     (Data.Array.Accelerate.Array.Representation.Shape
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))_R
                     ExampleUtil.$s$WArraysFarray7
                     ExampleUtil.$s$WArraysFarray6
                     ExampleUtil.$s$WArraysFarray5
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ) -}
fb3a2579d21aed78ddcfac41daf849bd
  $s$WArraysFarray_$s$fShape:._$cempty ::
    Data.Array.Accelerate.Array.Sugar.Z
    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (ExampleUtil.$s$WArraysFarray2
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray11
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
ed01fedccc52ca0b4a0aac02ed030848
  $s$WArraysFarray_$s$fShape:._$cfromIndex ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> GHC.Types.Int
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 2, Strictness: <S,1*U(1*H,U(U))><L,U(U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: GHC.Types.Int ->
                 ExampleUtil.$s$WArraysFarray2
                   (Data.Array.Accelerate.Array.Representation.$fShape(,)_$cfromIndex
                      @ ()
                      Data.Array.Accelerate.Array.Sugar.$fIsListArray16
                      Data.Array.Accelerate.Array.Sugar.$fIsListArray14
                      Data.Array.Accelerate.Array.Representation.$fShape()
                      (ExampleUtil.$s$WArraysFarray3 eta)
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                           ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                             Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                      eta1)
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
6d2d998cec35abc7eb5611d3b4629067
  $s$WArraysFarray_$s$fShape:._$cignore ::
    Data.Array.Accelerate.Array.Sugar.Z
    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- HasNoCafRefs, Strictness: m,
     Unfolding: InlineRule (0, True, False)
                (ExampleUtil.$s$WArraysFarray2
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray8
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
743309c9954f0ac00abde42772fe47b3
  $s$WArraysFarray_$s$fShape:._$cintersect ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> (Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*H,1*U(U))><S,1*U(1*U,1*U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 ExampleUtil.$s$WArraysFarray2
                   (Data.Array.Accelerate.Array.Sugar.$fIsListArray10
                      (ExampleUtil.$s$WArraysFarray3 eta)
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                           ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                             Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                      (ExampleUtil.$s$WArraysFarray3 eta1)
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                           ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                             Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R))
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
64ce1491ac85dba0d0d66d03dd4019ee
  $s$WArraysFarray_$s$fShape:._$citer ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> ((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
        -> a)
    -> (a -> a -> a)
    -> a
    -> a
  {- Arity: 4, Strictness: <S,1*U(1*H,U(U))><L,C(U)><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a23
                   eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: (Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           -> a23
                   eta2 :: a23 -> a23 -> a23
                   eta3 :: a23 ->
                 Data.Array.Accelerate.Array.Representation.$fShape(,)_$citer
                   @ ()
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray16
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray14
                   Data.Array.Accelerate.Array.Representation.$fShape()
                   @ a23
                   (ExampleUtil.$s$WArraysFarray3 eta)
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                   (\ x :: Data.Array.Accelerate.Array.Sugar.EltRepr
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                    eta1 (ExampleUtil.$s$WArraysFarray2 x))
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R
                    ->_R <a23>_R)
                   eta2
                   eta3) -}
453318b4c4d1b152b131d3243ea55185
  $s$WArraysFarray_$s$fShape:._$citer1 ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> ((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
        -> a)
    -> (a -> a -> a)
    -> a
  {- Arity: 3, Strictness: <S(LS(S)),1*U(1*H,1*U(1*U))><L,C(U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a23
                   eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: (Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           -> a23
                   eta2 :: a23 -> a23 -> a23 ->
                 Data.Array.Accelerate.Array.Representation.$fShape(,)_$citer1
                   @ ()
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray16
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray14
                   Data.Array.Accelerate.Array.Representation.$fShape()
                   @ a23
                   (ExampleUtil.$s$WArraysFarray3 eta)
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                   (\ x :: Data.Array.Accelerate.Array.Sugar.EltRepr
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                    eta1 (ExampleUtil.$s$WArraysFarray2 x))
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R
                    ->_R <a23>_R)
                   eta2) -}
96f7eca27ce38f762f35bdbda2d716b9
  $s$WArraysFarray_$s$fShape:._$clistToShape ::
    [GHC.Types.Int]
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 1, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: [GHC.Types.Int] ->
                 ExampleUtil.$s$WArraysFarray2
                   (Data.Array.Accelerate.Array.Sugar.$fIsListArray6 eta)
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
23c96433e7d013a20ca5e964c0d353a8
  $s$WArraysFarray_$s$fShape:._$crangeToShape ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int,
     Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(1*H,1*U(U)),1*U(1*U,1*U(U)))>m,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: (Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int,
                           Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 case eta of wild { (,) low high ->
                 ExampleUtil.$s$WArraysFarray2
                   (Data.Array.Accelerate.Array.Representation.$fShape(,)_$crangeToShape
                      @ ()
                      Data.Array.Accelerate.Array.Sugar.$fIsListArray16
                      Data.Array.Accelerate.Array.Sugar.$fIsListArray14
                      Data.Array.Accelerate.Array.Representation.$fShape()
                      (ExampleUtil.$s$WArraysFarray3 low,
                       ExampleUtil.$s$WArraysFarray3 high)
                        `cast`
                      ((Trans
                            (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                            ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                              Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R,
                        Trans
                            (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                            ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                              Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R))_R)
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N)))) }) -}
88e3c20bf18bf1ed897ede5063607fee
  $s$WArraysFarray_$s$fShape:._$cshapeToList ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> [GHC.Types.Int]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*H,U)>m2,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 Data.Array.Accelerate.Array.Sugar.$fIsListArray7
                   (ExampleUtil.$s$WArraysFarray3 eta)
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)) -}
761a600da316139b4df7d4cb095d2e92
  $s$WArraysFarray_$s$fShape:._$ctoIndex ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> (Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> GHC.Types.Int
  {- Arity: 2,
     Strictness: <S(SS),1*U(1*H,1*U(U))><S(SS),1*U(1*H,1*U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 Data.Array.Accelerate.Array.Representation.$fShape(,)_$ctoIndex
                   @ ()
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray16
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray14
                   Data.Array.Accelerate.Array.Representation.$fShape()
                   (ExampleUtil.$s$WArraysFarray3 eta)
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                   (ExampleUtil.$s$WArraysFarray3 eta1)
                     `cast`
                   (Trans
                        (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                        ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                          Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)) -}
89869d8c5f09342731be6920e81ea401
  $s$WArraysFarray_$s$fShape:._$cunion ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> (Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*H,1*U(U))><S,1*U(1*U,1*U(U))>m,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
                   eta1 :: Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 ExampleUtil.$s$WArraysFarray2
                   (Data.Array.Accelerate.Array.Sugar.$fIsListArray9
                      (ExampleUtil.$s$WArraysFarray3 eta)
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                           ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                             Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R)
                      (ExampleUtil.$s$WArraysFarray3 eta1)
                        `cast`
                      (Trans
                           (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))
                           ((Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                             Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_R))
                     `cast`
                   (Trans
                        ((Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0])),
                          Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))_R
                        (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <GHC.Types.Int>_N))))) -}
34428db29e94d32def8fb3193cea894c
  $s$WArraysFarray_$s$fShow:. ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     GHC.Show.$fShowInt)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ GHC.Types.Int
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     GHC.Show.$fShowInt)
                  ExampleUtil.$s$WArraysFarray_$s$fShow:._$cshowList -}
818e947be7da96867eaffe02bb896a37
  $s$WArraysFarray_$s$fShow:._$cshowList ::
    [Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ Data.Array.Accelerate.Array.Sugar.Z
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fShowZ
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   ls
                   s) -}
c9dcf630e1140e8d4756880042d36f70
  $s$WArraysFarray_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
d9b7d0cd15f8b1e3a999c75787b3fb5d
  $s$WArraysFarray_go1 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
028b2535fa1039172d728b440af89263
  $s$WArraysFarray_go2 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
d43afbb42c71a976a22425ee2b744985
  $s$WArraysFarray_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   ExampleUtil.$s$WArraysFarray15) -}
7645101f54030d3e6d9d9e908e5e94bf
  $s$WArraysFarray_w2 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   ExampleUtil.$s$WArraysFarray27) -}
75a0f28f47a7efdc9919ad61c0701d91
  $s$WArraysFarray_w3 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   ExampleUtil.$s$WArraysFarray34) -}
e7f638fe883e2bbff23a8005fcc07542
  $s$WArraysFarray_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 15843165073189925570
                   __word 13730769858450861905
                   ExampleUtil.$s$WArraysFarray_ww2
                   ExampleUtil.$s$WArraysFarray_ww3
                   ExampleUtil.$s$WArraysFarray_ww4) -}
a7de4b938ca2d698e41fa00d43055c36
  $s$WArraysFarray_wild1 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 17502837480397947244
                   __word 15872498598114190556
                   ExampleUtil.$s$WArraysFarray_ww2
                   ExampleUtil.$s$WArraysFarray_ww3
                   ExampleUtil.$s$WArraysFarray_ww1) -}
b23e66ee5399d05b413bd89070488077
  $s$WArraysFarray_wild2 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 9075081179335608289
                   __word 18440357458150962883
                   ExampleUtil.$s$WArraysFarray_ww7
                   ExampleUtil.$s$WArraysFarray_ww6
                   ExampleUtil.$s$WArraysFarray_ww5) -}
645006424b45c5ca0dc915743aa12368
  $s$WArraysFarray_wild3 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 2185754398834785717
                   __word 9097758251846721585
                   ExampleUtil.$s$WArraysFarray_ww7
                   ExampleUtil.$s$WArraysFarray_ww6
                   ExampleUtil.$s$WArraysFarray_ww8) -}
59f55752271015032ad89faba513f449
  $s$WArraysFarray_wild4 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 16287469036901857884
                   __word 16587023596664995632
                   ExampleUtil.$s$WArraysFarray_ww2
                   ExampleUtil.$s$WArraysFarray_ww10
                   ExampleUtil.$s$WArraysFarray_ww9) -}
6db29eed29dd3b38b4b22f271696dc3d
  $s$WArraysFarray_ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "(,)"#) -}
137e2b994881b05c751e8122bdb431b7
  $s$WArraysFarray_ww10 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
36efffe54fb8f927128629d715ab0395
  $s$WArraysFarray_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
d1c3677d97dd344bd9841c988f312e7a
  $s$WArraysFarray_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Tuple"#) -}
b9f2fc039b4c640d686bc3466d0f5405
  $s$WArraysFarray_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "()"#) -}
b9cdbab3757c5489bc6bb4482f457e76
  $s$WArraysFarray_ww5 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Any"#) -}
782bbee80fcf3e8db447fb58f365221b
  $s$WArraysFarray_ww6 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Array.Accelerate.Array.Sugar"#) -}
ec2930fed49e5c2fdf6d77f1e5c30536
  $s$WArraysFarray_ww7 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "H6SVdIe0K6B5OObFdUZBOL"#) -}
853174b4b54020e9a49f56b3c2298c42
  $s$WArraysFarray_ww8 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# ":."#) -}
c300626e3550e21e91a31b82ff714138
  $s$WArraysFarray_ww9 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Int"#) -}
8041155302edf69b44f2b896970fef17
  $s$fArraysArray ::
    Data.Array.Accelerate.Array.Sugar.Arrays
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Array
                       (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       GHC.Types.Double)
                  ExampleUtil.$s$fArraysArray2
                  ExampleUtil.$s$fArraysArray2
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                               <Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                               <GHC.Types.Double>_N)))_R
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$carrays
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     ExampleUtil.$s$fArraysArray2
                     ExampleUtil.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     ExampleUtil.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  ExampleUtil.$s$fArraysArray1
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$ctoArr
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     ExampleUtil.$s$fArraysArray2
                     ExampleUtil.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     ExampleUtil.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$cfromArr
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     ExampleUtil.$s$fArraysArray2
                     ExampleUtil.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     ExampleUtil.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
08984617fdcbe7e5ec7f71ec2622048d
  $s$fArraysArray1 ::
    Data.Array.Accelerate.Array.Sugar.Array
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
      GHC.Types.Double
    -> Data.Array.Accelerate.Array.Sugar.ArraysFlavour
         (Data.Array.Accelerate.Array.Sugar.Array
            (Data.Array.Accelerate.Array.Sugar.Z
             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
            GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            GHC.Types.Double ->
                 Data.Array.Accelerate.Array.Sugar.ArraysFarray
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                        GHC.Types.Double)
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         (Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                         GHC.Types.Double>_N
                   ExampleUtil.$s$WArraysFarray_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
598c2aa31e153c6157f9e072f303fcb6
  $s$fArraysArray10 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   ExampleUtil.$s$WArraysFarray_ww2
                   ExampleUtil.$s$WArraysFarray_ww10
                   ExampleUtil.$s$fArraysArray11) -}
5157c90bcd1d17bffdd033743ea5c424
  $s$fArraysArray11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
4175a0b0d8e12f9b9b3857f2b833aa27
  $s$fArraysArray2 ::
    Data.Typeable.Internal.Typeable
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$fArraysArray3
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N
                          <Data.Array.Accelerate.Array.Sugar.Array
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             GHC.Types.Double>_N)) -}
c23e24824fcab19a50ee9eba9b1a8301
  $s$fArraysArray3 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Array
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                GHC.Types.Double) ->
                 ExampleUtil.$s$fArraysArray4) -}
e0d4997b9e966eac1a71df9802f1c980
  $s$fArraysArray4 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case ExampleUtil.$s$WArraysFarray_w2 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             ExampleUtil.$s$fArraysArray8 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z3 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z3
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             ExampleUtil.$s$fArraysArray5 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             ExampleUtil.$s$fArraysArray8 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z3 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z3
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                ExampleUtil.$s$WArraysFarray_ww7
                                ExampleUtil.$s$WArraysFarray_ww6
                                ExampleUtil.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
ee4723f5b7bc5e3c9e33c53b8652ec02
  $s$fArraysArray5 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   ExampleUtil.$s$fArraysArray7
                   ExampleUtil.$s$fArraysArray6) -}
2573dcc805e5514bac7f827bdbf16e22
  $s$fArraysArray6 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (ExampleUtil.$s$fArraysArray_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
0bad1322e71fc8b8ccb4402e8ffce71e
  $s$fArraysArray7 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 8044828400323168594
                   __word 13765680496363839762) -}
d76b89316a86c3cd0677a79c8a6c51fc
  $s$fArraysArray8 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   ExampleUtil.$s$fArraysArray9
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
7480d0738bb5830fbc9bf6d04d151bce
  $s$fArraysArray9 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   ExampleUtil.$s$fArraysArray10
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
23a1a0b13e47de7bb5f673989521ce6c
  $s$fArraysArray_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
ae3126247c10d01c11b2f57f25f5953e
  $s$fArraysArray_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Array"#) -}
e00b40165baddc6e565abb110beabcfe
  $wgo :: System.Random.StdGen -> GHC.Prim.Int# -> [GHC.Types.Double]
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
26375e73b2f948046d92b44bb705dfba
  $wrandomlist ::
    GHC.Prim.Int# -> System.Random.StdGen -> [GHC.Types.Double]
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# w :: System.Random.StdGen ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<# 0 ww) of wild {
                   GHC.Types.False -> GHC.Types.[] @ GHC.Types.Double
                   GHC.Types.True -> ExampleUtil.$wgo w ww }) -}
aebe3f7dbd8ea40e0dcfdf63479620fa
  randomlist ::
    GHC.Types.Int -> System.Random.StdGen -> [GHC.Types.Double]
  {- Arity: 2, Strictness: <S,1*U(U)><L,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: System.Random.StdGen ->
                 case w of ww { GHC.Types.I# ww1 ->
                 ExampleUtil.$wrandomlist ww1 w1 }) -}
f4863ef8b5c1c3d91443b0c8057ea068
  toAccVector ::
    GHC.Types.Int
    -> [GHC.Types.Double]
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Vector GHC.Types.Double)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: InlineRule (0, True, True)
                ExampleUtil.toAccVector1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <[GHC.Types.Double]>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       GHC.Types.Double>_N) -}
aaf4b4592b09ef021ef7bc86dd7c8d9c
  toAccVector1 ::
    GHC.Types.Int
    -> [GHC.Types.Double]
    -> Data.Array.Accelerate.Smart.PreAcc
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         (Data.Array.Accelerate.Array.Sugar.Array
            (Data.Array.Accelerate.Array.Sugar.Z
             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
            GHC.Types.Double)
  {- Arity: 2, Strictness: <L,1*U(U)><L,1*U>,
     Unfolding: (\ size :: GHC.Types.Int rs :: [GHC.Types.Double] ->
                 Data.Array.Accelerate.Smart.Use
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                        GHC.Types.Double)
                   ExampleUtil.$s$fArraysArray
                   (case size of n { GHC.Types.I# ipv ->
                    case GHC.IO.unsafeDupablePerformIO
                           @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                                (Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Double),
                              Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Double)
                           (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                            case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                            case (GHC.IO.unsafeDupableInterleaveIO
                                    @ (GHC.ForeignPtr.ForeignPtr GHC.Types.Double)
                                    (\ s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                     case GHC.Prim.noDuplicate# s1 of s'1 { DEFAULT ->
                                     case Data.Array.Accelerate.Array.Data.__mallocForeignPtrBytes
                                            `cast`
                                          (GHC.IORef.NTCo:IORef[0] <GHC.Types.Int
                                                                    -> GHC.Types.IO
                                                                         (GHC.ForeignPtr.ForeignPtr
                                                                            GHC.Word.Word8)>_N) of wild { GHC.STRef.STRef var# ->
                                     case GHC.Prim.readMutVar#
                                            @ GHC.Prim.RealWorld
                                            @ (GHC.Types.Int
                                               -> GHC.Types.IO
                                                    (GHC.ForeignPtr.ForeignPtr GHC.Word.Word8))
                                            var#
                                            s'1 of ds1 { (#,#) ipv1 ipv2 ->
                                     case (ipv2 (GHC.Types.I# (GHC.Prim.*# ipv 8)))
                                            `cast`
                                          (GHC.Types.NTCo:IO[0]
                                               <GHC.ForeignPtr.ForeignPtr GHC.Word.Word8>_R)
                                            ipv1 of ds2 { (#,#) ipv3 ipv4 ->
                                     (# ipv3,
                                        ipv4
                                          `cast`
                                        (GHC.ForeignPtr.ForeignPtr
                                           (UnivCo opt_phantom phantom GHC.Word.Word8 GHC.Types.Double))_R #) } } } })
                                      `cast`
                                    (Sym (GHC.Types.NTCo:IO[0]
                                              <GHC.ForeignPtr.ForeignPtr GHC.Types.Double>_R)))
                                   `cast`
                                 (GHC.Types.NTCo:IO[0]
                                      <GHC.ForeignPtr.ForeignPtr GHC.Types.Double>_R)
                                   s' of ds1 { (#,#) ipv1 ipv2 ->
                            case GHC.Prim.newByteArray#
                                   @ GHC.Prim.RealWorld
                                   0
                                   ipv1 of ds { (#,#) ipv3 ipv4 ->
                            case GHC.Prim.newMutVar#
                                   @ [GHC.Types.IO ()]
                                   @ GHC.Prim.RealWorld
                                   (GHC.Types.[] @ (GHC.Types.IO ()))
                                   ipv3 of ds2 { (#,#) ipv5 ipv6 ->
                            case GHC.Prim.mkWeak#
                                   @ (GHC.Prim.MutVar# GHC.Prim.RealWorld [GHC.Types.IO ()])
                                   @ (GHC.IORef.IORef [GHC.Types.IO ()])
                                   @ (GHC.Types.IO ())
                                   ipv6
                                   (GHC.STRef.STRef @ GHC.Prim.RealWorld @ [GHC.Types.IO ()] ipv6)
                                     `cast`
                                   (Sym (GHC.IORef.NTCo:IORef[0]) <[GHC.Types.IO ()]>_N)
                                   (\ w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                    Data.Array.Accelerate.Lifetime.$wa ipv6 w1)
                                     `cast`
                                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                   ipv5 of ds3 { (#,#) ipv7 ipv8 ->
                            let {
                              lvl23 :: GHC.STRef.STRef GHC.Prim.RealWorld [GHC.Types.IO ()]
                              = GHC.STRef.STRef @ GHC.Prim.RealWorld @ [GHC.Types.IO ()] ipv6
                            } in
                            letrec {
                              $wa :: GHC.Prim.Int#
                                     -> [GHC.Types.Double]
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0] -}
                              = \ ww :: GHC.Prim.Int#
                                  w :: [GHC.Types.Double]
                                  w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.>=# ww ipv) of wild {
                                  GHC.Types.False
                                  -> case w of wild1 {
                                       []
                                       -> case ExampleUtil.toAccVector2
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {}
                                       : v vs
                                       -> case ipv2 of wild2 { GHC.ForeignPtr.ForeignPtr fo ds4 ->
                                          case v of wild3 { GHC.Types.D# x ->
                                          case GHC.Prim.writeDoubleOffAddr#
                                                 @ GHC.Prim.RealWorld
                                                 fo
                                                 ww
                                                 x
                                                 w1 of s2 { DEFAULT ->
                                          case GHC.Prim.touch#
                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                 ds4
                                                 s2 of s'1 { DEFAULT ->
                                          case GHC.Prim.touch#
                                                 @ (GHC.IORef.IORef [GHC.Types.IO ()])
                                                 lvl23
                                                   `cast`
                                                 (Sym (GHC.IORef.NTCo:IORef[0]) <[GHC.Types.IO
                                                                                    ()]>_N)
                                                 s'1 of s'2 { DEFAULT ->
                                          $wa (GHC.Prim.+# ww 1) vs s'2 } } } } } }
                                  GHC.Types.True -> (# w1, GHC.Tuple.() #) }
                            } in
                            case $wa 0 rs ipv7 of ds4 { (#,#) ipv9 ipv10 ->
                            (# ipv9,
                               ((Data.Array.Accelerate.Array.Data.AD_Double
                                   @ Data.Array.Accelerate.Array.Unique.UniqueArray
                                   (Data.Array.Accelerate.Array.Unique.UniqueArray
                                      @ GHC.Types.Double
                                      (GHC.Prim.addr2Int#
                                         ipv4
                                           `cast`
                                         (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                                GHC.Prim.RealWorld) GHC.Prim.Addr#))
                                      ipv4
                                      ipv6
                                      ipv8
                                      ipv2))
                                  `cast`
                                (Trans
                                     (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                                    <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)))
                                     (Data.Array.Accelerate.Array.Data.GArrayData
                                        <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0])))_R),
                                GHC.Err.undefined
                                  @ (Data.Array.Accelerate.Array.Sugar.EltRepr
                                       GHC.Types.Double)) #) } } } } } })
                             `cast`
                           (Sym (GHC.Types.NTCo:IO[0]
                                     <(Data.Array.Accelerate.Array.Data.MutableArrayData
                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                            GHC.Types.Double),
                                       Data.Array.Accelerate.Array.Sugar.EltRepr
                                         GHC.Types.Double)>_R)) of wild { (,) adata ds6 ->
                    case adata
                           `cast`
                         (Trans
                              (Data.Array.Accelerate.Array.Data.GArrayData
                                 <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                 (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0]))_R
                              (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                        <Data.Array.Accelerate.Array.Unique.UniqueArray>_N))) of nt { Data.Array.Accelerate.Array.Data.AD_Double ipv1 ->
                    Data.Array.Accelerate.Array.Sugar.Array
                      @ (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      @ GHC.Types.Double
                      ExampleUtil.$s$WArraysFarray_$s$fShape:.
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      (GHC.Tuple.()
                         `cast`
                       (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]))),
                       n `cast`
                       (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                        `cast`
                      (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                     <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N)))
                      nt
                        `cast`
                      (Trans
                           (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                          <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)))
                           (Data.Array.Accelerate.Array.Data.GArrayData
                              <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                              (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0])))_R) } } })) -}
6d847ed05442ab6f499314fcf3291727
  toAccVector2 :: GHC.Types.IO ()
  {- Strictness: b -}
"SPEC/ExampleUtil $fArraysArray @ (Z :. Int) @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       (Data.Array.Accelerate.Array.Sugar.Array
                                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                          GHC.Types.Double)
                                                                       $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                        (Data.Array.Accelerate.Array.Sugar.ArrRepr
                                                                                           (Data.Array.Accelerate.Array.Sugar.Array
                                                                                              (Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                              GHC.Types.Double))
                                                                       $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                   GHC.Types.Double
  Data.Array.Accelerate.Array.Sugar.$fArraysArray @ (Data.Array.Accelerate.Array.Sugar.Z
                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                  @ GHC.Types.Double
                                                  $dTypeable
                                                  $dTypeable1
                                                  $dShape1
                                                  $dElt2
  = ExampleUtil.$s$fArraysArray
"SPEC/ExampleUtil $fElt:. @ Z @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                 (Data.Array.Accelerate.Array.Sugar.Z
                                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                     $dTypeable :: Data.Typeable.Internal.Typeable
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                     $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                      (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                     $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                     (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                     $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                 Data.Array.Accelerate.Array.Sugar.Z
                                                     $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                 GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ Data.Array.Accelerate.Array.Sugar.Z
                                            @ GHC.Types.Int
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = ExampleUtil.$s$WArraysFarray_$s$fElt:.
"SPEC/ExampleUtil $fEltAny @ Z" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                            (Data.Array.Accelerate.Array.Sugar.Any
                                                               (Data.Array.Accelerate.Array.Sugar.Z
                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                $dTypeable :: Data.Typeable.Internal.Typeable
                                                                (Data.Array.Accelerate.Array.Sugar.Any
                                                                   (Data.Array.Accelerate.Array.Sugar.Z
                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                 (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                    (Data.Array.Accelerate.Array.Sugar.Any
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)))
                                                $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                   (Data.Array.Accelerate.Array.Sugar.Any
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)))
                                                $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                              Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fEltAny @ Data.Array.Accelerate.Array.Sugar.Z
                                             $dShow
                                             $dTypeable
                                             $dTypeable1
                                             $dArrayElt
                                             $dShape1
  = ExampleUtil.$s$WArraysFarray_$s$fEltAny
"SPEC/ExampleUtil $fShape:. @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                             (Data.Array.Accelerate.Array.Sugar.Z
                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                 $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                             (Data.Array.Accelerate.Array.Sugar.Any
                                                                (Data.Array.Accelerate.Array.Sugar.Z
                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                 $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                               (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                  (Data.Array.Accelerate.Array.Sugar.Z
                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                 cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                          ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                 cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                             (Data.Array.Accelerate.Array.Sugar.Z
                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                 cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                             (Data.Array.Accelerate.Array.Sugar.Z
                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           ~ Data.Array.Accelerate.Array.Sugar.Z
                                                 $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                               Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:. @ Data.Array.Accelerate.Array.Sugar.Z
                                              $dElt2
                                              $dElt3
                                              $dShape1
                                              cobox
                                              cobox1
                                              cobox2
                                              $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:.
"SPEC/ExampleUtil $fShape:._$cempty @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Any
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                  ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ Data.Array.Accelerate.Array.Sugar.Z
                                                         $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                       Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cempty @ Data.Array.Accelerate.Array.Sugar.Z
                                                      $dElt2
                                                      $dElt3
                                                      $dShape1
                                                      cobox
                                                      cobox1
                                                      cobox2
                                                      $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cempty
"SPEC/ExampleUtil $fShape:._$cfromIndex @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                         (Data.Array.Accelerate.Array.Sugar.Any
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                             $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                           (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                              (Data.Array.Accelerate.Array.Sugar.Z
                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                             cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                      ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       ~ Data.Array.Accelerate.Array.Sugar.Z
                                                             $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                           Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cfromIndex @ Data.Array.Accelerate.Array.Sugar.Z
                                                          $dElt2
                                                          $dElt3
                                                          $dShape1
                                                          cobox
                                                          cobox1
                                                          cobox2
                                                          $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cfromIndex
"SPEC/ExampleUtil $fShape:._$cignore @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                          $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                      (Data.Array.Accelerate.Array.Sugar.Any
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                          $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                        (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                          cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                          cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                    ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                          cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                    ~ Data.Array.Accelerate.Array.Sugar.Z
                                                          $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                        Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cignore @ Data.Array.Accelerate.Array.Sugar.Z
                                                       $dElt2
                                                       $dElt3
                                                       $dShape1
                                                       cobox
                                                       cobox1
                                                       cobox2
                                                       $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cignore
"SPEC/ExampleUtil $fShape:._$cintersect @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                         (Data.Array.Accelerate.Array.Sugar.Any
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                             $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                           (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                              (Data.Array.Accelerate.Array.Sugar.Z
                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                             cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                      ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                             cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       ~ Data.Array.Accelerate.Array.Sugar.Z
                                                             $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                           Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cintersect @ Data.Array.Accelerate.Array.Sugar.Z
                                                          $dElt2
                                                          $dElt3
                                                          $dShape1
                                                          cobox
                                                          cobox1
                                                          cobox2
                                                          $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cintersect
"SPEC/ExampleUtil $fShape:._$citer @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                        $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                    (Data.Array.Accelerate.Array.Sugar.Any
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                        $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                      (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                        cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                   (Data.Array.Accelerate.Array.Sugar.Z
                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                 ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                        cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                  ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                        cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                  ~ Data.Array.Accelerate.Array.Sugar.Z
                                                        $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                      Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$citer @ Data.Array.Accelerate.Array.Sugar.Z
                                                     $dElt2
                                                     $dElt3
                                                     $dShape1
                                                     cobox
                                                     cobox1
                                                     cobox2
                                                     $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$citer
"SPEC/ExampleUtil $fShape:._$citer1 @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Any
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                  ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ Data.Array.Accelerate.Array.Sugar.Z
                                                         $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                       Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$citer1 @ Data.Array.Accelerate.Array.Sugar.Z
                                                      $dElt2
                                                      $dElt3
                                                      $dShape1
                                                      cobox
                                                      cobox1
                                                      cobox2
                                                      $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$citer1
"SPEC/ExampleUtil $fShape:._$clistToShape @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Any
                                                                              (Data.Array.Accelerate.Array.Sugar.Z
                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                             (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                (Data.Array.Accelerate.Array.Sugar.Z
                                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                        ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         ~ Data.Array.Accelerate.Array.Sugar.Z
                                                               $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                             Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$clistToShape @ Data.Array.Accelerate.Array.Sugar.Z
                                                            $dElt2
                                                            $dElt3
                                                            $dShape1
                                                            cobox
                                                            cobox1
                                                            cobox2
                                                            $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$clistToShape
"SPEC/ExampleUtil $fShape:._$crangeToShape @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                            (Data.Array.Accelerate.Array.Sugar.Any
                                                                               (Data.Array.Accelerate.Array.Sugar.Z
                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                              (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                 (Data.Array.Accelerate.Array.Sugar.Z
                                                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                          ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                          ~ Data.Array.Accelerate.Array.Sugar.Z
                                                                $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                              Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$crangeToShape @ Data.Array.Accelerate.Array.Sugar.Z
                                                             $dElt2
                                                             $dElt3
                                                             $dShape1
                                                             cobox
                                                             cobox1
                                                             cobox2
                                                             $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$crangeToShape
"SPEC/ExampleUtil $fShape:._$cshapeToList @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Any
                                                                              (Data.Array.Accelerate.Array.Sugar.Z
                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                             (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                (Data.Array.Accelerate.Array.Sugar.Z
                                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                        ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         ~ Data.Array.Accelerate.Array.Sugar.Z
                                                               $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                             Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cshapeToList @ Data.Array.Accelerate.Array.Sugar.Z
                                                            $dElt2
                                                            $dElt3
                                                            $dShape1
                                                            cobox
                                                            cobox1
                                                            cobox2
                                                            $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cshapeToList
"SPEC/ExampleUtil $fShape:._$ctoIndex @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                       (Data.Array.Accelerate.Array.Sugar.Any
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                    ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                     ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                     ~ Data.Array.Accelerate.Array.Sugar.Z
                                                           $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$ctoIndex @ Data.Array.Accelerate.Array.Sugar.Z
                                                        $dElt2
                                                        $dElt3
                                                        $dShape1
                                                        cobox
                                                        cobox1
                                                        cobox2
                                                        $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$ctoIndex
"SPEC/ExampleUtil $fShape:._$cunion @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                     (Data.Array.Accelerate.Array.Sugar.Any
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         $dShape1 :: Data.Array.Accelerate.Array.Representation.Shape
                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                         cobox :: Data.Array.Accelerate.Array.Sugar.FullShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                  ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox1 :: Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                         cobox2 :: Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                   ~ Data.Array.Accelerate.Array.Sugar.Z
                                                         $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                       Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fShape:._$cunion @ Data.Array.Accelerate.Array.Sugar.Z
                                                      $dElt2
                                                      $dElt3
                                                      $dShape1
                                                      cobox
                                                      cobox1
                                                      cobox2
                                                      $dShape2
  = ExampleUtil.$s$WArraysFarray_$s$fShape:._$cunion
"SPEC/ExampleUtil $fShow:. @ Z @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                  Data.Array.Accelerate.Array.Sugar.Z
                                                      $dShow1 :: GHC.Show.Show GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ Data.Array.Accelerate.Array.Sugar.Z
                                             @ GHC.Types.Int
                                             $dShow
                                             $dShow1
  = ExampleUtil.$s$WArraysFarray_$s$fShow:.
"SPEC/ExampleUtil $fShow:._$cshowList @ Z @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                             Data.Array.Accelerate.Array.Sugar.Z
                                                                 $dShow1 :: GHC.Show.Show
                                                                              GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ Data.Array.Accelerate.Array.Sugar.Z
                                                        @ GHC.Types.Int
                                                        $dShow
                                                        $dShow1
  = ExampleUtil.$s$WArraysFarray_$s$fShow:._$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

