
==================== FINAL INTERFACE ====================
2017-02-22 08:36:16.444715 UTC

interface 4L77jDB8vjdHgiqyCVhmEO:MMultDivConq 7103
  interface hash: 7ac4a3f8b72ef51abe8561edd8e16559
  ABI hash: 337172e36e1a5aa5997d29dfddbd0d5d
  export-list hash: af8421d6703f214c0bda57eb1f817ee5
  orphan hash: 92166bb37a876eab6eaef8e3f48367de
  flag hash: 2bf3a6754fcc98c0543572e3f4700a81
  sig of: Nothing
  used TH splices: False
  where
exports:
  MMultDivConq.multiplyMMRandom
module dependencies: ExampleUtil
package dependencies: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb
                      unique-0@2FNUgyyrAmYKdbrqn3mvvo
                      SafeSemaphore-0.10.1@4VzDb4ntLXUJnFUrtJ7GGv
                      hashtables-1.2.1.0@5c7pokIkbR19G5YylDBVyE
                      cryptonite-0.21@6ag21kspMrFL11QdYwhhfG
                      safe-0.3.14@7f0vrWinAgM1T5X3bG8j80
                      unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm
                      vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj
                      mtl-2.2.1@8momq8BEamE2D2td4EjbI6
                      th-lift-0.7.6@9xi3Mz64ymEJ1vZD0wlTOv
                      fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ
                      primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr
                      cryptohash-0.11.9@BsOj25FkNUsB2WCYOURHjm
                      th-lift-instances-0.1.11@CAPyKpnnJW01iJEIF59PP6
                      stm-2.4.4.1@ChXYRyvniZhC9Q8D3M7IoM
                      text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1
                      th-reify-many-0.1.6@DnV1gYvK1Sa9GNLWSZ9jnm
                      cuda-0.7.5.2@DpZzjWAVMxWIXIVfVw3Wnw
                      srcloc-0.5.1.0@E34IWRSNMMvAUXGE7eKwOu
                      exception-transformers-0.4.0.5@EFOF3mYZPV1B50sqUgvYGc
                      memory-0.14.1@EsLu564AenE6JFSh3lOntv
                      language-c-quote-0.11.7.1@EztlsnltaU96sTZzaRwW8b
                      random-1.1@FDxw8MeZdq3EsvcqVWcvl2
                      th-orphans-0.13.3@GLg6YvDwYjk9ZfbaXwOd0F
                      accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL
                      th-expand-syns-0.4.2.0@HlXlBCX6OId3xMvrbx2dSb
                      hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO
                      exceptions-0.8.3@JojInh7ceKU543yZfg90bc
                      base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk
                      haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M
                      symbol-0.2.4@LNcZ3H35KMR1al3flLfwIv
                      mainland-pretty-0.4.1.4@LQuDLP9sEyU5ScH60oerOj
                      haskell-src-meta-0.7.0.1@LpLuN4V0u3aKg53Ovcg4WG
                      syb-0.6@LpfDN7WBV29Iko8aejtimy
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      template-haskell-2.10.0.0 time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
orphans: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Remote
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.CodeGen.Monad
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Execute.Event
         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Persistent
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
         th-lift-0.7.6@9xi3Mz64ymEJ1vZD0wlTOv:Language.Haskell.TH.Lift
         fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ:Data.Label.Point
         th-lift-instances-0.1.11@CAPyKpnnJW01iJEIF59PP6:Instances.TH.Lift
         stm-2.4.4.1@ChXYRyvniZhC9Q8D3M7IoM:Control.Monad.STM
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Show
         language-c-quote-0.11.7.1@EztlsnltaU96sTZzaRwW8b:Language.C.Pretty
         th-orphans-0.13.3@GLg6YvDwYjk9ZfbaXwOd0F:Language.Haskell.TH.Instances
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Bounded
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Enum
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Floating
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Fractional
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Integral
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Real
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFloat
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFrac
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Pretty
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo
         hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO:Data.Hashable.Generic
         base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk:Data.Orphans
         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.Parser
         syb-0.6@LpfDN7WBV29Iko8aejtimy:Data.Generics.Instances
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Prim
                         accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA.Array.Remote
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashMap.Base
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashSet
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Primitive
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Storable
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed.Base
                         primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr:Control.Monad.Primitive
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Data
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Lifted
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Representation
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Product
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Base
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Sharing
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Vectorise
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Type
                         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.18.2@KxawZpp0jKf3R1fyrNIf3M:Language.Haskell.Exts.Syntax
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  accelerate-cuda-2.0.0.0@24ogKDaAyH037LN7ksKdZb:Data.Array.Accelerate.CUDA c73cf0bfd3c7967bdb35657ce55da9ba
import  -/  ExampleUtil 5dbb16959abc490234a87eac49fac989
  exports: 3dae30cc8d0c2c55f1dc666b42195119
  randomlist aebe3f7dbd8ea40e0dcfdf63479620fa
import  -/  random-1.1@FDxw8MeZdq3EsvcqVWcvl2:System.Random db7980e946ff6b1eec7dfc3cb2f36882
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate 66e0d97f271003a24ae7f909e33d3218
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar 18f3ec99b0068a9f53866f3c514a462e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq 55cfc4863f763503ba3ba5d99ff81d04
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num cfe088bccb05b61f6c0a9d3ba002331e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord 874118c8ccbedb0ba014cd8b8469e273
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Language 577d8aa034409d525b9837ad21e2923b
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift 8535c99b89a3df65fff9fcb5a90d6f92
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude 984a9d06f507b110f46f5ed210625d19
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart 65badb76028b0d4b0c0643ecbaf1c413
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
1171dc81fb15d16de678ceec5b2e7529
  $s$fArrayElt(,) ::
    Data.Array.Accelerate.Array.Data.ArrayElt (((), ()), GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((), ()), GHC.Types.Int)
                  MMultDivConq.$s$fArrayElt(,)1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData -}
d3e2a37eb5559b6db0cd74eb5ebb18c2
  $s$fArrayElt(,)1 ::
    Data.Array.Accelerate.Array.Data.ArrayEltR
      (((), ()), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Data.ArrayEltRpair
                   @ (((), ()), GHC.Types.Int)
                   @ ((), ())
                   @ GHC.Types.Int
                   @~ <(((), ()), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)
                   Data.Array.Accelerate.Array.Data.$fArrayEltInt
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray18
                   Data.Array.Accelerate.Array.Data.$WArrayEltRint) -}
88d8543d392675b93fcf1db2a1c81124
  $s$fArrayElt(,)2 ::
    Data.Array.Accelerate.Array.Data.ArrayElt
      ((((), ()), GHC.Types.Int), ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((), ()), GHC.Types.Int), ())
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1 -}
433610534e12a6f38c01a5a494b9c013
  $s$fArrayElt(,)3 ::
    Data.Array.Accelerate.Array.Data.ArrayElt (((), ()), GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fArrayElt(,) -}
a0c159867cf19d2bd5641ec30003d8d1
  $s$fArrayElt(,)_$carrayElt1 ::
    Data.Array.Accelerate.Array.Data.ArrayElt ((), ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,) -}
04bd795b38022cd8d12241e46fb1b66c
  $s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt ::
    Data.Array.Accelerate.Array.Data.ArrayEltR
      ((((), ()), GHC.Types.Int), ())
  {- Unfolding: InlineRule (0, True, False)
                (Data.Array.Accelerate.Array.Data.ArrayEltRpair
                   @ ((((), ()), GHC.Types.Int), ())
                   @ (((), ()), GHC.Types.Int)
                   @ ()
                   @~ <((((), ()), GHC.Types.Int), ())>_N
                   MMultDivConq.$s$fArrayElt(,)3
                   Data.Array.Accelerate.Array.Data.$fArrayElt()
                   MMultDivConq.$s$fArrayElt(,)1
                   Data.Array.Accelerate.Array.Data.$WArrayEltRunit) -}
bf064230e0c861c305e7ac346f035659
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.MutableArrayData
            (((), ()), GHC.Types.Int))
  {- Arity: 2, Strictness: <S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ size :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                         (((), ()), GHC.Types.Int))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int
                          -> Data.Array.Accelerate.Array.Data.MutableArrayData
                               (((), ()), GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ ((), ())
                          @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cnewArrayData
                          size))
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cnewArrayData
                       size))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.MutableArrayData
                         (((), ()), GHC.Types.Int)>_R)
                   eta)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.MutableArrayData
                                  (((), ()), GHC.Types.Int)>_R)) -}
38d63927f4c90ca1e46349fd94ef8001
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1 ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.MutableArrayData
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, Strictness: <S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ size :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray ())
                    @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                         ((((), ()), GHC.Types.Int), ()))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ()
                          -> Data.Array.Accelerate.Array.Data.MutableArrayData
                               ((((), ()), GHC.Types.Int), ()))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ (((), ()), GHC.Types.Int)
                          @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData size))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cnewArrayData
                       size))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.MutableArrayData
                         ((((), ()), GHC.Types.Int), ())>_R)
                   eta)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.MutableArrayData
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
2854d8382e523f24cfea9e2dfb7a7d1b
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Data.ArrayPtrs
         (((), ()), GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U,1*U),1*U(1*U(A,A,A,A,1*U(U,A))))>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int) ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cptrsOfArrayData
                    a179,
                  Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cptrsOfArrayData
                    b1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                <((), ())>_N <GHC.Types.Int>_N))) }) -}
399c429db2a4728b5c94f69eaa35f0f8
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> Data.Array.Accelerate.Array.Data.ArrayPtrs
         ((((), ()), GHC.Types.Int), ())
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),1*U(1*U(A,A,A,A,1*U(U,A)))),1*U)>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ()) ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
                    a179,
                  Data.Array.Accelerate.Array.Data.$fArrayElt()_$cptrsOfArrayData b1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                <(((), ()), GHC.Types.Int)>_N <()>_N))) }) -}
c05b1168e31bafeebd22e1e34216ec15
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayPtrs
            (((), ()), GHC.Types.Int))
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U(A,A,A,A,1*U(U,A))))><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()),
                       Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int
                          -> (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()),
                              Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int))
                       (GHC.Tuple.(,)
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()))
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cptrsOfMutableArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                        (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cptrsOfArrayData
                           b1))
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                     <((), ())>_N <GHC.Types.Int>_N))))
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayPtrs
                                  (((), ()), GHC.Types.Int)>_R)) -}
11aa45ce5035382a966affca3707ea4e
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayPtrs
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,1*U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                         (((), ()), GHC.Types.Int),
                       Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ()
                          -> (Data.Array.Accelerate.Array.Data.ArrayPtrs
                                (((), ()), GHC.Types.Int),
                              Data.Array.Accelerate.Array.Data.ArrayPtrs ()))
                       (GHC.Tuple.(,)
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                               (((), ()), GHC.Types.Int))
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ()))
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                        (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cptrsOfArrayData
                           b1))
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayPtrs ()>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayPtrs ()>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                     <(((), ()), GHC.Types.Int)>_N <()>_N))))
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayPtrs
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
9775b0963c475ba2dbab86cee5904d4d
  $s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS(S)),1*U(1*U,1*U(1*U(A,A,U,A,A)))><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$ctouchArrayData
                       a179)
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$ctouchArrayData
                       b1))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.ArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
f11b7440a255b7e1bd3e725ff52e6d68
  $s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
                       a179)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$ctouchArrayData
                       b1))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.ArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
3efcc53602b32b082ce7b60141a7828e
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayData
            (((), ()), GHC.Types.Int))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.ArrayData
                         (((), ()), GHC.Types.Int))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int
                          -> Data.Array.Accelerate.Array.Data.ArrayData
                               (((), ()), GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ ((), ())
                          @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int)
                        b1)
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.ArrayData
                         (((), ()), GHC.Types.Int)>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayData
                                  (((), ()), GHC.Types.Int)>_R)) -}
ded5d31c37724475b14d0ee8fb50defc
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayData
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray ())
                    @ (Data.Array.Accelerate.Array.Data.ArrayData
                         ((((), ()), GHC.Types.Int), ()))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ()
                          -> Data.Array.Accelerate.Array.Data.ArrayData
                               ((((), ()), GHC.Types.Int), ()))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ (((), ()), GHC.Types.Int)
                          @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayData ())
                        b1)
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayData ()>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayData ()>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.ArrayData
                         ((((), ()), GHC.Types.Int), ())>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayData
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
9fcf2fc0850b537ddb502dd48e5b7d82
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> (((), ()), GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U,1*U),1*U(1*U(A,A,U,A,1*U(U,U))))><L,U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeIndexArrayData
                    a179
                    i,
                  Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeIndexArrayData
                    b1
                    i) }) -}
bad22ec7e620dcc738e12ea5c6d27a2f
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int -> ((((), ()), GHC.Types.Int), ())
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),1*U(1*U(A,A,U,A,1*U(U,U)))),1*U)><L,U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
                    a179
                    i,
                  Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeIndexArrayData
                    b1
                    i) }) -}
7f4952a985df5c68a4f4cacfb8989a25
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> GHC.Types.IO (((), ()), GHC.Types.Int)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SS(S(LLLLS))),1*U(1*U,1*U(1*U(A,A,U,A,1*U(U,U))))><S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ GHC.Types.Int
                    @ (((), ()), GHC.Types.Int)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ ((), ())
                       @ (GHC.Types.Int -> (((), ()), GHC.Types.Int))
                       (GHC.Tuple.(,) @ ((), ()) @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeReadArrayData
                          a179
                          i))
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeReadArrayData
                       b1
                       i))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <(((), ()), GHC.Types.Int)>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <(((), ()), GHC.Types.Int)>_R)) -}
80ea012609ce56151defa37753d68154
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int -> GHC.Types.IO ((((), ()), GHC.Types.Int), ())
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ ()
                    @ ((((), ()), GHC.Types.Int), ())
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (((), ()), GHC.Types.Int)
                       @ (() -> ((((), ()), GHC.Types.Int), ()))
                       (GHC.Tuple.(,) @ (((), ()), GHC.Types.Int) @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
                          a179
                          i))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeReadArrayData
                       b1
                       i))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <((((), ()), GHC.Types.Int), ())>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <((((), ()), GHC.Types.Int), ())>_R)) -}
e5f584635ee224b7a21d78fd7f4d1f34
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> (((), ()), GHC.Types.Int) -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SS(S(LLLLS))),1*U(1*U,1*U(1*U(A,A,U,A,1*U(U,U))))><S,1*U(U)><S(S(SS)S),1*U(1*U(1*H,1*H),1*U(U))><L,U>,
     Inline: INLINE (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int
                   ds1 :: (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 case ds1 of wild1 { (,) x y ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeWriteArrayData
                       a179
                       i
                       x)
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeWriteArrayData
                       b1
                       i
                       y))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta } })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <(((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
c25c2cb55f57432a53898d7e35aef297
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int
    -> ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U,1*U)><S,1*U(U)><S(S(S(SS)S)S),1*U(1*U(1*U(1*H,1*H),1*U(U)),1*H)><L,U>,
     Inline: INLINE (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int
                   ds1 :: ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 case ds1 of wild1 { (,) x y ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
                       a179
                       i
                       x)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeWriteArrayData
                       b1
                       i
                       y))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta } })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
8a1b731877ab556e348c0f2543a4e759
  $s$fArraysArray ::
    Data.Array.Accelerate.Array.Sugar.Arrays
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.DIM1
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Array
                       (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       GHC.Types.Double)
                  MMultDivConq.$s$fArraysArray2
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <Data.Array.Accelerate.Array.Sugar.Array
                               (Data.Array.Accelerate.Array.Sugar.DIM1
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                               GHC.Types.Double>_N))
                  MMultDivConq.$s$fArraysArray2
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                 <Data.Array.Accelerate.Array.Sugar.DIM1
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                 <GHC.Types.Double>_N)))
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$carrays
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  (Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                  GHC.Types.Double>_N))
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.DIM1
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                    <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  MMultDivConq.$s$fArraysArray1
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$ctoArr
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  (Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                  GHC.Types.Double>_N))
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.DIM1
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                    <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$cfromArr
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Array
                                  (Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                  GHC.Types.Double>_N))
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                    <Data.Array.Accelerate.Array.Sugar.DIM1
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                    <GHC.Types.Double>_N)))
                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
cbf591644379cb8d33169fda359478d9
  $s$fArraysArray1 ::
    Data.Array.Accelerate.Array.Sugar.Array
      (Data.Array.Accelerate.Array.Sugar.DIM1
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
      GHC.Types.Double
    -> Data.Array.Accelerate.Array.Sugar.ArraysFlavour
         (Data.Array.Accelerate.Array.Sugar.Array
            (Data.Array.Accelerate.Array.Sugar.DIM1
             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
            GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.DIM1
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            GHC.Types.Double ->
                 Data.Array.Accelerate.Array.Sugar.ArraysFarray
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        (Data.Array.Accelerate.Array.Sugar.DIM1
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                        GHC.Types.Double)
                   @ (Data.Array.Accelerate.Array.Sugar.DIM1
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         (Data.Array.Accelerate.Array.Sugar.DIM1
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                         GHC.Types.Double>_N
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
6b4db21e62e83db076a89dbc8a321ba2
  $s$fArraysArray10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
0148803d78b66d731c10fb55c6b0f1b4
  $s$fArraysArray11 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray12
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e5694b16b5a6ca84e141d8f5b1365872
  $s$fArraysArray12 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case GHC.Base.++
                        @ Data.Typeable.Internal.TypeRep
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        MMultDivConq.$s$fArraysArray17 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             (GHC.Types.:
                                @ GHC.Fingerprint.Type.Fingerprint
                                MMultDivConq.$s$fArraysArray13
                                (let {
                                   z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                   = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                 } in
                                 letrec {
                                   go :: [Data.Typeable.Internal.TypeRep]
                                         -> [GHC.Fingerprint.Type.Fingerprint]
                                     {- Arity: 1, Strictness: <S,1*U> -}
                                   = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                     case ds of wild1 {
                                       [] -> z7
                                       : y ys
                                       -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                          GHC.Types.:
                                            @ GHC.Fingerprint.Type.Fingerprint
                                            (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                            (go ys) } }
                                 } in
                                 go
                                   (GHC.Types.[]
                                      @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
f51be8dc278a91960181423ade0b3ba2
  $s$fArraysArray13 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 2185754398834785717
                   __word 9097758251846721585) -}
1228f9e74b9e1ff5cb8f8c7f9ebb4464
  $s$fArraysArray14 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 2185754398834785717
                   __word 9097758251846721585
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fArraysArray_ww7) -}
7102df2327ef48b23d6f52e98decbbca
  $s$fArraysArray15 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray16
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
103e2e7e5e82661f5f596b325966500e
  $s$fArraysArray16 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 16287469036901857884
                   __word 16587023596664995632
                   MMultDivConq.$s$fArraysArray_wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
5d9d88f97224e640cb64c57c8ed35d1c
  $s$fArraysArray17 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray18
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
7252b1a278077fde7e21d5a4f146aa5c
  $s$fArraysArray18 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case GHC.Base.++
                        @ Data.Typeable.Internal.TypeRep
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        MMultDivConq.$s$fArraysArray19 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             (GHC.Types.:
                                @ GHC.Fingerprint.Type.Fingerprint
                                MMultDivConq.$s$fArraysArray13
                                (let {
                                   z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                   = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                 } in
                                 letrec {
                                   go :: [Data.Typeable.Internal.TypeRep]
                                         -> [GHC.Fingerprint.Type.Fingerprint]
                                     {- Arity: 1, Strictness: <S,1*U> -}
                                   = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                     case ds of wild1 {
                                       [] -> z7
                                       : y ys
                                       -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                          GHC.Types.:
                                            @ GHC.Fingerprint.Type.Fingerprint
                                            (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                            (go ys) } }
                                 } in
                                 go
                                   (GHC.Types.[]
                                      @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
ac781c3c9be90f0005a637b7d3e2bc97
  $s$fArraysArray19 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray20
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
f680c12d8a6b187ffc77796f808ddc7b
  $s$fArraysArray2 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.DIM1
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Array
                                (Data.Array.Accelerate.Array.Sugar.DIM1
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                GHC.Types.Double) ->
                 MMultDivConq.$s$fArraysArray3) -}
a84bf6e66090e7af8534f497ff19f66f
  $s$fArraysArray20 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 18079619739210634038
                   __word 13272276217628883993
                   MMultDivConq.$s$fArraysArray21
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
0d2121f7da3b9b4d8f0a6ada724242e0
  $s$fArraysArray21 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 18079619739210634038
                   __word 13272276217628883993
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fArraysArray22) -}
3470a746ec234fa46db427b9a5162e30
  $s$fArraysArray22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Z"#) -}
ce797d19b657d67eba0e541188294372
  $s$fArraysArray3 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fArraysArray_w1 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray7 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fArraysArray4 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray7 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
e497057032be1a281031a3470c7b18eb
  $s$fArraysArray4 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray6
                   MMultDivConq.$s$fArraysArray5) -}
0c7ea4c8892dd3e756c9abdab30a2c56
  $s$fArraysArray5 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fArraysArray_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
6ce08d48da0b92eddb036521a80fb736
  $s$fArraysArray6 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 8044828400323168594
                   __word 13765680496363839762) -}
9f5e8eb03e0b8bec6007b4e52af1f225
  $s$fArraysArray7 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray8
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
b1cf46fa279807f83ca7f3d32c2db6e5
  $s$fArraysArray8 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   MMultDivConq.$s$fArraysArray9
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
811ff689254ddec5c6e5bc9f7e3bfcb5
  $s$fArraysArray9 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fArraysArray_ww2
                   MMultDivConq.$s$fArraysArray10) -}
5a82c74e3d5cc60f9e7792cba76fde7e
  $s$fArraysArray_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
8c1424ca6a361d7c4fde0db622c21eaa
  $s$fArraysArray_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fArraysArray11) -}
d2e407f5363356f0363ec7502d0dac71
  $s$fArraysArray_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 16287469036901857884
                   __word 16587023596664995632
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fArraysArray_ww2
                   MMultDivConq.$s$fArraysArray_ww8) -}
d0ea0338afc7c461e42974992187307a
  $s$fArraysArray_ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Array.Accelerate.Array.Sugar"#) -}
bacde0f7b7d89487b694e9f7a503a490
  $s$fArraysArray_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
f22bf85ba7b7fa3f9022637c222316fc
  $s$fArraysArray_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "H6SVdIe0K6B5OObFdUZBOL"#) -}
fea245e4b12802eeafcf2a9aec4b47d2
  $s$fArraysArray_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Array"#) -}
99041cac75f5888c0a83bdcfd031b59a
  $s$fArraysArray_ww6 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
3f1031be38f152a5156132a7c6bde6ed
  $s$fArraysArray_ww7 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# ":."#) -}
33a3631414e137eea591b0f5d0420e4a
  $s$fArraysArray_ww8 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Int"#) -}
0b91138d400b28cbb6a492e21bd7cf67
  $s$fElt:. ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.17
                  MMultDivConq.$s$fElt:.11
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                  MMultDivConq.$s$fElt:.3
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  MMultDivConq.$s$fArrayElt(,)_$carrayElt1
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.17
                     MMultDivConq.$s$fElt:.11
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                     MMultDivConq.$s$fElt:.3
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fArrayElt(,)_$carrayElt1
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fEltZ
                     Data.Array.Accelerate.Array.Sugar.$fEltAll)
                  MMultDivConq.$s$fElt:.2
                  MMultDivConq.$s$fElt:.1 -}
1b5c95fc99254b1a5210e40b91d68173
  $s$fElt:.1 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ Data.Array.Accelerate.Array.Sugar.Z
                   @ Data.Array.Accelerate.Array.Sugar.All
                   (Data.Array.Accelerate.Array.Sugar.$fEltZ_$ctoElt t1)
                   (Data.Array.Accelerate.Array.Sugar.$fEltAll_$ctoElt h1) }) -}
b7446ef3105e6f4fc3e22e865bb93d5e
  $s$fElt:.10 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 17502837480397947244
                   __word 15872498598114190556) -}
40251b96459ac4a9995d5dadd71c2d39
  $s$fElt:.11 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 MMultDivConq.$s$fElt:.12) -}
7e0a30200b184dc695f7b9a3f39dfc76
  $s$fElt:.12 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w2 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fElt:.15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.13 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
4d72a30295d8777b8927be05b9099f8c
  $s$fElt:.13 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray13
                   MMultDivConq.$s$fElt:.14) -}
241b0be4f4497eed85ea48320c0c7e00
  $s$fElt:.14 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
9f3fbc4757ca865e618f323bddf80e2b
  $s$fElt:.15 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.16
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
0b8ce23e5011d44949dd3aa6e029fe7e
  $s$fElt:.16 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 6013167054417736561
                   __word 11875381381783196623
                   MMultDivConq.$s$fElt:._wild2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e817182e657c4afdbfa5aa43fecaa772
  $s$fElt:.17 ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:. -}
164574b0b6315589f6c8dd2e8ded58b6
  $s$fElt:.18 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  MMultDivConq.$s$fElt:.30
                  MMultDivConq.$s$fElt:.25
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <(Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                  MMultDivConq.$s$fElt:.20
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Trans
                                 (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                      <GHC.Types.Int>_N)
                                 ((Trans
                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                            <Data.Array.Accelerate.Array.Sugar.All>_N)
                                       ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                         Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                   Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N)))
                  MMultDivConq.$s$fArrayElt(,)3
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Trans
                                ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                  Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                          <Data.Array.Accelerate.Array.Sugar.All>_N)),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                    <GHC.Types.Int>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.30
                     MMultDivConq.$s$fElt:.25
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <(Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                     MMultDivConq.$s$fElt:.20
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Trans
                                    (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                         <GHC.Types.Int>_N)
                                    ((Trans
                                          (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <Data.Array.Accelerate.Array.Sugar.All>_N)
                                          ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                            Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                      Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N)))
                     MMultDivConq.$s$fArrayElt(,)3
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Trans
                                   ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                     Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                   (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <Data.Array.Accelerate.Array.Sugar.All>_N)),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                       <GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fElt:.19
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt
                  MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt -}
5d5518af0339bba8cca2ae93bc306397
  $s$fElt:.19 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:. -}
ac8b51f0f4cc57625643b2a4fe2a5987
  $s$fElt:.2 ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*H,1*H)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fEltZ_$cfromElt t1,
                  Data.Array.Accelerate.Array.Sugar.$fEltAll_$cfromElt h1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N))) }) -}
645c9c4bcc664dd624b05bacf01be841
  $s$fElt:.20 ::
    GHC.Prim.Proxy# (((), ()), GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# (((), ()), GHC.Types.Int) ->
                 MMultDivConq.$s$fElt:.21) -}
880798f246e7ddee45fb99418f992ae4
  $s$fElt:.21 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w3 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fElt:.10
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.22 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
a7112386d2e623c12c8dc5eb1d8df81a
  $s$fElt:.22 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.23) -}
e0d78de9bb4962a164382750fbc9f570
  $s$fElt:.23 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
4eaed8a7e31959ad8bea09d72d8dd36e
  $s$fElt:.24 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.5
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
00dbda0ce75495d56148098633c0a9f3
  $s$fElt:.25 ::
    GHC.Prim.Proxy#
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             ((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 MMultDivConq.$s$fElt:.26) -}
f3d3a1eda306fb830753bbf0d3af2985
  $s$fElt:.26 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w4 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.27 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
9f9a1f26408828d1dd3c5244c428a699
  $s$fElt:.27 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray13
                   MMultDivConq.$s$fElt:.28) -}
d07c88a81018d58038b001a6806df56a
  $s$fElt:.28 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go3
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
5727ba53a0653608e4972c7462f5f271
  $s$fElt:.29 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.12
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
7425e9721b72a188941e0afa8777c61f
  $s$fElt:.3 :: Data.Typeable.Internal.Typeable ((), ())
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:.4
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <((), ())>_N)) -}
a5681d3616904ca2308505432f6659e3
  $s$fElt:.30 ::
    GHC.Show.Show
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:.1 -}
7ad27d81826a80e78151e7e2571a19d4
  $s$fElt:.31 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.44
                  MMultDivConq.$s$fElt:.39
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                  MMultDivConq.$s$fElt:.34
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Trans
                                 (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <(Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                      <Data.Array.Accelerate.Array.Sugar.All>_N)
                                 ((Trans
                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                            <GHC.Types.Int>_N)
                                       ((Trans
                                             (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <Data.Array.Accelerate.Array.Sugar.All>_N)
                                             ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                               Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                         Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N,
                                   Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N)))
                  MMultDivConq.$s$fElt:.33
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Trans
                                ((Trans
                                      ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                        Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                      (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                <Data.Array.Accelerate.Array.Sugar.All>_N)),
                                  Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                                (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                          <Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                          <GHC.Types.Int>_N)),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.44
                     MMultDivConq.$s$fElt:.39
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <((Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                     MMultDivConq.$s$fElt:.34
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Trans
                                    (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                         <(Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                         <Data.Array.Accelerate.Array.Sugar.All>_N)
                                    ((Trans
                                          (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                               <GHC.Types.Int>_N)
                                          ((Trans
                                                (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <Data.Array.Accelerate.Array.Sugar.All>_N)
                                                ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                                  Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                            Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N,
                                      Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N)))
                     MMultDivConq.$s$fElt:.33
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Trans
                                   ((Trans
                                         ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                           Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                         (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <Data.Array.Accelerate.Array.Sugar.All>_N)),
                                     Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                                   (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z
                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                             <GHC.Types.Int>_N)),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fElt:.32
                     Data.Array.Accelerate.Array.Sugar.$fEltAll)
                  MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt1
                  MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt1 -}
9029aeadedb78aaa3de8ca17a54d5c52
  $s$fElt:.32 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:.18 -}
1c1e0943788f590f403b06d3c1140385
  $s$fElt:.33 ::
    Data.Array.Accelerate.Array.Data.ArrayElt
      ((((), ()), GHC.Types.Int), ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fArrayElt(,)2 -}
7a81383993e6b22e3f067e84cb013152
  $s$fElt:.34 ::
    GHC.Prim.Proxy# ((((), ()), GHC.Types.Int), ())
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((((), ()), GHC.Types.Int), ()) ->
                 MMultDivConq.$s$fElt:.35) -}
8a1a3f06972dfad77c3f464fa2e3b4f0
  $s$fElt:.35 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w5 of wild2 {
                   []
                   -> case MMultDivConq.$s$fElt:._w1 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fElt:.10
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.36 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
ed1fd91eeb2362af60233349f16e23ed
  $s$fElt:.36 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.37) -}
6eaae89980ce863455d33294ff8d1d83
  $s$fElt:.37 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go4
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
7b294d75b640e23cb06524eba60d78d1
  $s$fElt:.38 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.21
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
4acf373100782f4ce4f7c037feeed6be
  $s$fElt:.39 ::
    GHC.Prim.Proxy#
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (((Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 MMultDivConq.$s$fElt:.40) -}
e037057d10e9663c509131fe0a3bb24b
  $s$fElt:.4 ::
    GHC.Prim.Proxy# ((), ()) -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((), ()) -> MMultDivConq.$s$fElt:.5) -}
298be92d9e7169695b70ff555c26f5fa
  $s$fElt:.40 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w6 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fElt:.15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray13
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray14
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.41 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
ad45f9e732c8cd6289d3d4d0c42d92f0
  $s$fElt:.41 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray13
                   MMultDivConq.$s$fElt:.42) -}
13cfbd578451313a0dfb8c35079c01b7
  $s$fElt:.42 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go5
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
8eb0a9bc8dc1aaaeec39381a781b62cc
  $s$fElt:.43 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.26
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
4734dcce2a325e2d65f17e9ab6ded13d
  $s$fElt:.44 ::
    GHC.Show.Show
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:.2 -}
e9ea455b77b560b7b408fb39ecaa4de4
  $s$fElt:.5 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17502837480397947244
                        __word 15872498598114190556
                        MMultDivConq.$s$fElt:._wild1
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.8 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
b034ac3a35013fc774bb5cf4265f85ec
  $s$fElt:.6 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.7
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e30582c576575950dcbf371b75451d35
  $s$fElt:.7 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 15843165073189925570
                   __word 13730769858450861905
                   MMultDivConq.$s$fElt:._wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
f66765918f4df5abc43238825ce2db7e
  $s$fElt:.8 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.9) -}
72463a504ae93f698ddc364dc3856fc2
  $s$fElt:.9 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
db745073f1663e09c39e76f1f20606b8
  $s$fElt:._$s$fElt:._$cfromElt ::
    ((Data.Array.Accelerate.Array.Sugar.Z
      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         ((Data.Array.Accelerate.Array.Sugar.Z
           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(1*H,1*H),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: (Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (MMultDivConq.$s$fElt:.2 t1,
                  (GHC.Base.id @ GHC.Types.Int h1)
                    `cast`
                  (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                <GHC.Types.Int>_N))) }) -}
281f22a725a6366fe8fcdd2c907ca3fb
  $s$fElt:._$s$fElt:._$cfromElt1 ::
    (((Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (((Data.Array.Accelerate.Array.Sugar.Z
            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*H,1*H),U),1*H)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: ((Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt t1,
                  Data.Array.Accelerate.Array.Sugar.$fEltAll_$cfromElt h1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <(Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N))) }) -}
87542f5a16ebd568239f67085177c0af
  $s$fElt:._$s$fElt:._$ctoElt ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> (Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(1*U,1*U),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            ((Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                <GHC.Types.Int>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   @ GHC.Types.Int
                   (MMultDivConq.$s$fElt:.1 t1)
                   (GHC.Base.id
                      @ GHC.Types.Int
                      h1
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))) }) -}
58dd2175a6e4c3272416ddf26cb0cf22
  $s$fElt:._$s$fElt:._$ctoElt1 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> ((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <(Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ Data.Array.Accelerate.Array.Sugar.All
                   (MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt t1)
                   (Data.Array.Accelerate.Array.Sugar.$fEltAll_$ctoElt h1) }) -}
afcc9dbaa8ca0ec0683819ba89c3854f
  $s$fElt:._$s$fShow:. ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList -}
6aac3f7cfbf418113b8daaaddfabbdb2
  $s$fElt:._$s$fShow:.1 ::
    GHC.Show.Show
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.17
                     GHC.Show.$fShowInt)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.17
                     GHC.Show.$fShowInt)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList1 -}
093997d8f6f5a14c8bc3d046fb5210ba
  $s$fElt:._$s$fShow:.2 ::
    GHC.Show.Show
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.30
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.30
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList2 -}
34400e659f7edfdcda297d0f1c9124fc
  $s$fElt:._$s$fShow:._$cshowList ::
    [Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ Data.Array.Accelerate.Array.Sugar.Z
                      @ Data.Array.Accelerate.Array.Sugar.All
                      Data.Array.Accelerate.Array.Sugar.$fShowZ
                      Data.Array.Accelerate.Array.Sugar.$fShowAll
                      GHC.Show.shows18)
                   ls
                   s) -}
51fbe9d0275f0b9e5a11b23c92b4fc9a
  $s$fElt:._$s$fShow:._$cshowList1 ::
    [(Data.Array.Accelerate.Array.Sugar.Z
      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [(Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      @ GHC.Types.Int
                      MMultDivConq.$s$fElt:.17
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   ls
                   s) -}
35e58e63ac5c12dfa505862d6cf291f8
  $s$fElt:._$s$fShow:._$cshowList2 ::
    [((Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [((Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (((Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ ((Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      @ Data.Array.Accelerate.Array.Sugar.All
                      MMultDivConq.$s$fElt:.30
                      Data.Array.Accelerate.Array.Sugar.$fShowAll
                      GHC.Show.shows18)
                   ls
                   s) -}
52785d6a4ecc9993fbfa6fc76c35c815
  $s$fElt:._go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
f68e669d94f48007635ff72679c6b1d3
  $s$fElt:._go1 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
1b0ff4d5e465407d9074b88c249d1926
  $s$fElt:._go2 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
c24da5a4815fbad016d00f7470bbf2cf
  $s$fElt:._go3 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
b40d0fa39564c802494f7beb05ef5fd0
  $s$fElt:._go4 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
666bb6d15eaf754f623b71d917108603
  $s$fElt:._go5 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
fdc80ce600225c5f6da9593d8b9bc36c
  $s$fElt:._w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.6) -}
8a25e716f23e35c7b775b5f8395fd34c
  $s$fElt:._w2 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fArraysArray19) -}
71902aba518006e91d61bf6fffe3166b
  $s$fElt:._w3 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.24) -}
1427ce0854a48a95bf929b225add2cb9
  $s$fElt:._w4 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.29) -}
2c747a7f84961cf7d1bab2ad9471f725
  $s$fElt:._w5 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.38) -}
123caa24afd4f105acfa02c0f55b66c3
  $s$fElt:._w6 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.43) -}
b853fd6ca35da77fc91a8ec7a2fb24ea
  $s$fElt:._wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 15843165073189925570
                   __word 13730769858450861905
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fElt:._ww3
                   MMultDivConq.$s$fElt:._ww1) -}
f0a2ddfc065e693dadb50a34f41de658
  $s$fElt:._wild1 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 17502837480397947244
                   __word 15872498598114190556
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fElt:._ww3
                   MMultDivConq.$s$fElt:._ww4) -}
a8b67551cd32d0c23314d9af6afe3fed
  $s$fElt:._wild2 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 6013167054417736561
                   __word 11875381381783196623
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fElt:._ww2) -}
7dc67ce12524114daa9ac62d8209dbff
  $s$fElt:._ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "()"#) -}
2afe6a70d5da5b1368367ed9eae78d68
  $s$fElt:._ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "All"#) -}
6c41d7c5dfc80e07280ebe4fade07ab3
  $s$fElt:._ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Tuple"#) -}
061a08de42db959ca23eed74d90ed2d8
  $s$fElt:._ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "(,)"#) -}
af3b7ca572472f392b78a2601b77229b
  $s$fSlice:. ::
    Data.Array.Accelerate.Array.Sugar.Slice
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  MMultDivConq.$s$fElt:.32
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  MMultDivConq.$s$fSlice:.3
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:._$csliceIndex
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     MMultDivConq.$s$fElt:.32
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fSlice:.3
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fSlice:.1) -}
da0ebae29b9f7ef6ed11e568b0b754ec
  $s$fSlice:.0 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fSlice:.5
                  MMultDivConq.$s$fSlice:.3
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Trans
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <(Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))))_R
                  Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Trans
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:.0_$csliceIndex
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     MMultDivConq.$s$fSlice:.5
                     MMultDivConq.$s$fSlice:.3
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z
                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <(Data.Array.Accelerate.Array.Sugar.Z
                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))))_R
                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fSlice:.4) -}
1047af7301a9281c7b8fb54dbec826e4
  $s$fSlice:.1 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fSlice:._$s$fSlice:.0 -}
e6ebb7cf96ed77cad1c9cca46c8fec8c
  $s$fSlice:.2 ::
    Data.Array.Accelerate.Array.Sugar.Shape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Unfolding: InlineRule (0, True, True)
                ExampleUtil.$s$WArraysFarray_$s$fShape:. -}
2987065536f9be264362ad69c6f7542b
  $s$fSlice:.3 ::
    Data.Array.Accelerate.Array.Sugar.Shape
      Data.Array.Accelerate.Array.Sugar.DIM2
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:. -}
46a98eea0645403c6897061c7cf6957e
  $s$fSlice:.4 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fSlice:. -}
0d569318d81a3315927bc91568232fd0
  $s$fSlice:.5 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:.31 -}
82d36d99360ad0dd2a7d2afd9bccc1ef
  $s$fSlice:._$s$fSlice:.0 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.19
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  Data.Array.Accelerate.Array.Sugar.$fShapeZ
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:.0_$csliceIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     MMultDivConq.$s$fElt:.19
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fSliceZ) -}
f81b53c059d3fc280110f123f9682e0e
  type Matrix a =
    Data.Array.Accelerate.Array.Sugar.Array
      Data.Array.Accelerate.Array.Sugar.DIM2 a
a2affcc7337eeb7a9375663e48e6f243
  multiplyMMRandom :: GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.multiplyMMRandom1
                  `cast`
                (<GHC.Types.Int>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
746e15ab100a6c392eab95904654491e
  multiplyMMRandom1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,U> -}
"SPEC/MMultDivConq $fArrayElt(,) @ (((), ()), Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                         (((), ()),
                                                                                          GHC.Types.Int)
                                                                         $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                          ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,) @ (((), ()),
                                                    GHC.Types.Int)
                                                 @ ()
                                                 $dArrayElt
                                                 $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)2
"SPEC/MMultDivConq $fArrayElt(,) @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                   ((), ())
                                                                   $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                    GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,) @ ((), ())
                                                 @ GHC.Types.Int
                                                 $dArrayElt
                                                 $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)
"SPEC/MMultDivConq $fArrayElt(,)_$carrayElt @ (((), ()), Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                    (((),
                                                                                                      ()),
                                                                                                     GHC.Types.Int)
                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$carrayElt @ (((),
                                                                ()),
                                                               GHC.Types.Int)
                                                            @ ()
                                                            $dArrayElt
                                                            $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt
"SPEC/MMultDivConq $fArrayElt(,)_$cnewArrayData @ (((), ()),
                                                  Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                          (((),
                                                                                                                                                            ()),
                                                                                                                                                           GHC.Types.Int)
                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cnewArrayData @ (((),
                                                                    ()),
                                                                   GHC.Types.Int)
                                                                @ ()
                                                                $dArrayElt
                                                                $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cnewArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                  ((),
                                                                                                   ())
                                                                                  $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cnewArrayData @ ((),
                                                                   ())
                                                                @ GHC.Types.Int
                                                                $dArrayElt
                                                                $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfArrayData @ (((), ()),
                                                     Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                (((),
                                                                                                                                                                  ()),
                                                                                                                                                                 GHC.Types.Int)
                                                                                                                                                $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                 ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfArrayData @ (((),
                                                                       ()),
                                                                      GHC.Types.Int)
                                                                   @ ()
                                                                   $dArrayElt
                                                                   $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     ((),
                                                                                                      ())
                                                                                     $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                      GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfArrayData @ ((),
                                                                      ())
                                                                   @ GHC.Types.Int
                                                                   $dArrayElt
                                                                   $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfMutableArrayData @ (((),
                                                             ()),
                                                            Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                           (((),
                                                                                                                                                                                                                                             ()),
                                                                                                                                                                                                                                            GHC.Types.Int)
                                                                                                                                                                                                                           $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                            ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfMutableArrayData @ (((),
                                                                              ()),
                                                                             GHC.Types.Int)
                                                                          @ ()
                                                                          $dArrayElt
                                                                          $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfMutableArrayData @ ((),
                                                            ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                        ((),
                                                                                                                                                                         ())
                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                         GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfMutableArrayData @ ((),
                                                                             ())
                                                                          @ GHC.Types.Int
                                                                          $dArrayElt
                                                                          $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$ctouchArrayData @ (((), ()),
                                                    Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                              (((),
                                                                                                                                                                ()),
                                                                                                                                                               GHC.Types.Int)
                                                                                                                                              $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                               ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$ctouchArrayData @ (((),
                                                                      ()),
                                                                     GHC.Types.Int)
                                                                  @ ()
                                                                  $dArrayElt
                                                                  $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$ctouchArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                    ((),
                                                                                                     ())
                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$ctouchArrayData @ ((),
                                                                     ())
                                                                  @ GHC.Types.Int
                                                                  $dArrayElt
                                                                  $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeFreezeArrayData @ (((),
                                                            ()),
                                                           Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                        (((),
                                                                                                                                                                                                                                          ()),
                                                                                                                                                                                                                                         GHC.Types.Int)
                                                                                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                         ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeFreezeArrayData @ (((),
                                                                             ()),
                                                                            GHC.Types.Int)
                                                                         @ ()
                                                                         $dArrayElt
                                                                         $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeFreezeArrayData @ ((),
                                                           ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                      ((),
                                                                                                                                                                       ())
                                                                                                                                                      $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                       GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeFreezeArrayData @ ((),
                                                                            ())
                                                                         @ GHC.Types.Int
                                                                         $dArrayElt
                                                                         $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeIndexArrayData @ (((), ()),
                                                          Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                          (((),
                                                                                                                                                                            ()),
                                                                                                                                                                           GHC.Types.Int)
                                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeIndexArrayData @ (((),
                                                                            ()),
                                                                           GHC.Types.Int)
                                                                        @ ()
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeIndexArrayData @ ((),
                                                          ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                    ((),
                                                                                                                                                                     ())
                                                                                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeIndexArrayData @ ((),
                                                                           ())
                                                                        @ GHC.Types.Int
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeReadArrayData @ (((), ()),
                                                         Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                        (((),
                                                                                                                                                                          ()),
                                                                                                                                                                         GHC.Types.Int)
                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                         ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeReadArrayData @ (((),
                                                                           ()),
                                                                          GHC.Types.Int)
                                                                       @ ()
                                                                       $dArrayElt
                                                                       $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeReadArrayData @ ((),
                                                         ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                  ((),
                                                                                                                                                                   ())
                                                                                                                                                  $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeReadArrayData @ ((),
                                                                          ())
                                                                       @ GHC.Types.Int
                                                                       $dArrayElt
                                                                       $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeWriteArrayData @ (((), ()),
                                                          Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                          (((),
                                                                                                                                                                            ()),
                                                                                                                                                                           GHC.Types.Int)
                                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeWriteArrayData @ (((),
                                                                            ()),
                                                                           GHC.Types.Int)
                                                                        @ ()
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeWriteArrayData @ ((),
                                                          ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                    ((),
                                                                                                                                                                     ())
                                                                                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeWriteArrayData @ ((),
                                                                           ())
                                                                        @ GHC.Types.Int
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
"SPEC/MMultDivConq $fArraysArray @ (DIM1 :. Int) @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                           (Data.Array.Accelerate.Array.Sugar.Array
                                                                                              (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                              GHC.Types.Double)
                                                                           $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                            (Data.Array.Accelerate.Array.Sugar.ArrRepr
                                                                                               (Data.Array.Accelerate.Array.Sugar.Array
                                                                                                  (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                  GHC.Types.Double))
                                                                           $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                         (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                           $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                       GHC.Types.Double
  Data.Array.Accelerate.Array.Sugar.$fArraysArray @ (Data.Array.Accelerate.Array.Sugar.DIM1
                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                  @ GHC.Types.Double
                                                  $dTypeable
                                                  $dTypeable1
                                                  $dShape1
                                                  $dElt2
  = MMultDivConq.$s$fArraysArray
"SPEC/MMultDivConq $fElt:. @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                    (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                        (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                            (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                        $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                        (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                           (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                        $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                    ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                        $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                    Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                            @ Data.Array.Accelerate.Array.Sugar.All
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.31
"SPEC/MMultDivConq $fElt:. @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                           ((Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dTypeable :: Data.Typeable.Internal.Typeable
                                                                               ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                               (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                               $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                            @ GHC.Types.Int
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.18
"SPEC/MMultDivConq $fElt:. @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                  (Data.Array.Accelerate.Array.Sugar.Z
                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      $dTypeable :: Data.Typeable.Internal.Typeable
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                      $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                      (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                      $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                  Data.Array.Accelerate.Array.Sugar.Z
                                                      $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                  Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ Data.Array.Accelerate.Array.Sugar.Z
                                            @ Data.Array.Accelerate.Array.Sugar.All
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.
"SPEC/MMultDivConq $fElt:._$cfromElt @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                              (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                  $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                  $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                                   (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                  $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                  (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                     (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                  $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                              ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                  $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                              Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:._$cfromElt @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                      @ Data.Array.Accelerate.Array.Sugar.All
                                                      $dShow
                                                      $dTypeable
                                                      $dTypeable1
                                                      $dArrayElt
                                                      $dElt2
                                                      $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt1
"SPEC/MMultDivConq $fElt:._$cfromElt @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                     ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                         ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                          (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                             ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                         $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:._$cfromElt @ (Data.Array.Accelerate.Array.Sugar.Z
                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      @ GHC.Types.Int
                                                      $dShow
                                                      $dTypeable
                                                      $dTypeable1
                                                      $dArrayElt
                                                      $dElt2
                                                      $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt
"SPEC/MMultDivConq $fElt:._$ctoElt @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                            (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                                (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                                 (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                    (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                   (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                            Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:._$ctoElt @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                    @ Data.Array.Accelerate.Array.Sugar.All
                                                    $dShow
                                                    $dTypeable
                                                    $dTypeable1
                                                    $dArrayElt
                                                    $dElt2
                                                    $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt1
"SPEC/MMultDivConq $fElt:._$ctoElt @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                        (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                           ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                       $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                          ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                       $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                   (Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                       $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:._$ctoElt @ (Data.Array.Accelerate.Array.Sugar.Z
                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                    @ GHC.Types.Int
                                                    $dShow
                                                    $dTypeable
                                                    $dTypeable1
                                                    $dArrayElt
                                                    $dElt2
                                                    $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt
"SPEC/MMultDivConq $fShow:. @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                     ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dShow1 :: GHC.Show.Show
                                                                                      Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                             @ Data.Array.Accelerate.Array.Sugar.All
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.2
"SPEC/MMultDivConq $fShow:. @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                $dShow1 :: GHC.Show.Show
                                                                             GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                             @ GHC.Types.Int
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.1
"SPEC/MMultDivConq $fShow:. @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   Data.Array.Accelerate.Array.Sugar.Z
                                                       $dShow1 :: GHC.Show.Show
                                                                    Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ Data.Array.Accelerate.Array.Sugar.Z
                                             @ Data.Array.Accelerate.Array.Sugar.All
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.
"SPEC/MMultDivConq $fShow:._$cshowList @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                    $dShow1 :: GHC.Show.Show
                                                                                                 Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                        @ Data.Array.Accelerate.Array.Sugar.All
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList2
"SPEC/MMultDivConq $fShow:._$cshowList @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                           $dShow1 :: GHC.Show.Show
                                                                                        GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ (Data.Array.Accelerate.Array.Sugar.Z
                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                        @ GHC.Types.Int
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList1
"SPEC/MMultDivConq $fShow:._$cshowList @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                              Data.Array.Accelerate.Array.Sugar.Z
                                                                  $dShow1 :: GHC.Show.Show
                                                                               Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ Data.Array.Accelerate.Array.Sugar.Z
                                                        @ Data.Array.Accelerate.Array.Sugar.All
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList
"SPEC/MMultDivConq $fSlice:. @ (Z :. All)" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                       ((Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  Data.Array.Accelerate.Array.Sugar.$fSlice:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                              $dElt2
                                              $dShape1
                                              $dShape2
                                              $dShape3
                                              $dSlice
  = MMultDivConq.$s$fSlice:.
"SPEC/MMultDivConq $fSlice:.0 @ ((Z :. All) :. Int)" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                 (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                     $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  Data.Array.Accelerate.Array.Sugar.$fSlice:.0 @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                               $dElt2
                                               $dShape1
                                               $dShape2
                                               $dShape3
                                               $dSlice
  = MMultDivConq.$s$fSlice:.0
"SPEC/MMultDivConq $fSlice:.0 @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                               (Data.Array.Accelerate.Array.Sugar.Z
                                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                   $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fSlice:.0 @ Data.Array.Accelerate.Array.Sugar.Z
                                               $dElt2
                                               $dShape1
                                               $dShape2
                                               $dShape3
                                               $dSlice
  = MMultDivConq.$s$fSlice:._$s$fSlice:.0
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

