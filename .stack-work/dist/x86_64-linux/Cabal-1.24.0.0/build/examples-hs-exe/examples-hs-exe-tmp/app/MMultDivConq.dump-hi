
==================== FINAL INTERFACE ====================
2017-02-22 03:47:11.114993 UTC

interface main@main:MMultDivConq 7103
  interface hash: c8ba616bc0e82a87a5f672a953e1d997
  ABI hash: 26eaf2f1144c8beb5cd3add92b279413
  export-list hash: 6e276b48c6b404f7ff2b53cf3b25bf09
  orphan hash: ecfab45a2992d99bb273ab10bc95f4f3
  flag hash: f571f75e33dbc80b15f481340a5fb204
  sig of: Nothing
  used TH splices: False
  where
exports:
  MMultDivConq.add
  MMultDivConq.concatFour
  MMultDivConq.concatHoriz
  MMultDivConq.concatVert
  MMultDivConq.divconq
  MMultDivConq.max'
  MMultDivConq.mmult
  MMultDivConq.splitFour
  MMultDivConq.splitHoriz
  MMultDivConq.splitVert
  MMultDivConq.strassen
  MMultDivConq.sub
  MMultDivConq.toMatrix
  MMultDivConq.Matrix
module dependencies:
package dependencies: unique-0@2FNUgyyrAmYKdbrqn3mvvo
                      hashtables-1.2.1.0@5c7pokIkbR19G5YylDBVyE
                      unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm
                      vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj
                      mtl-2.2.1@8momq8BEamE2D2td4EjbI6
                      fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ
                      primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr
                      text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1
                      accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL
                      hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO
                      base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      template-haskell-2.10.0.0
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
         fclabels-2.0.3.2@AKSm13q8hy6IfeajhhiTHQ:Data.Label.Point
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Show
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Bounded
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Enum
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Floating
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Fractional
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Integral
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Real
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFloat
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.RealFrac
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Pretty
         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo
         hashable-1.2.5.0@JoeaJ86VQLkKgRy2f7apkO:Data.Hashable.Generic
         base-orphans-0.5.4@KOTuhQR8R9IE5njByiFjsk:Data.Orphans
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashMap.Base
                         unordered-containers-0.2.7.2@7kpSaNdPzsRLLb5cmzUyDm:Data.HashSet
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Primitive
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed
                         vector-0.11.0.0@8BOf6P5Y1bBGpVDENdSiRj:Data.Vector.Unboxed.Base
                         primitive-0.6.1.0@AeufGSuwHUhGYOXWgTmkfr:Control.Monad.Primitive
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text
                         text-1.2.2.1@D2dukXWdd9T8GEonSf7TH1:Data.Text.Lazy
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Data
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Lifted
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Representation
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Product
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Base
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Sharing
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Substitution
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Trafo.Vectorise
                         accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Type
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate 66e0d97f271003a24ae7f909e33d3218
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Array.Sugar 18f3ec99b0068a9f53866f3c514a462e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Eq 55cfc4863f763503ba3ba5d99ff81d04
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Num cfe088bccb05b61f6c0a9d3ba002331e
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Classes.Ord 874118c8ccbedb0ba014cd8b8469e273
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Language 577d8aa034409d525b9837ad21e2923b
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Lift 8535c99b89a3df65fff9fcb5a90d6f92
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Prelude 984a9d06f507b110f46f5ed210625d19
import  -/  accelerate-2.0.0.0@H6SVdIe0K6B5OObFdUZBOL:Data.Array.Accelerate.Smart 65badb76028b0d4b0c0643ecbaf1c413
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
81b9f296257d9db1e3e12e214257a853
  $s$WArraysFarray1 ::
    Data.Array.Accelerate.Array.Sugar.Shape
      Data.Array.Accelerate.Array.Sugar.DIM2
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:. -}
7ed979a1b6af69b79b2304b48a6b8de6
  $s$fArrayElt(,) ::
    Data.Array.Accelerate.Array.Data.ArrayElt (((), ()), GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((), ()), GHC.Types.Int)
                  MMultDivConq.$s$fArrayElt(,)1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData -}
a61cd2d4586ec34207d1e6e3a66360d4
  $s$fArrayElt(,)1 ::
    Data.Array.Accelerate.Array.Data.ArrayEltR
      (((), ()), GHC.Types.Int)
  {- Unfolding: (Data.Array.Accelerate.Array.Data.ArrayEltRpair
                   @ (((), ()), GHC.Types.Int)
                   @ ((), ())
                   @ GHC.Types.Int
                   @~ <(((), ()), GHC.Types.Int)>_N
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)
                   Data.Array.Accelerate.Array.Data.$fArrayEltInt
                   Data.Array.Accelerate.Array.Sugar.$fIsListArray18
                   Data.Array.Accelerate.Array.Data.$WArrayEltRint) -}
41d5fb7f7bcf82163b936c2e2f66ee9c
  $s$fArrayElt(,)2 ::
    Data.Array.Accelerate.Array.Data.ArrayElt
      ((((), ()), GHC.Types.Int), ())
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((((), ()), GHC.Types.Int), ())
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1
                  MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1 -}
aa23d2cbd8bea428c1c76d0a0141f82c
  $s$fArrayElt(,)3 ::
    Data.Array.Accelerate.Array.Data.ArrayElt (((), ()), GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fArrayElt(,) -}
ef4dfec4429f10e40ef7303a8b8b63d0
  $s$fArrayElt(,)_$carrayElt1 ::
    Data.Array.Accelerate.Array.Data.ArrayElt ((), ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,) -}
c99516079be623fa571c74bee3988424
  $s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt ::
    Data.Array.Accelerate.Array.Data.ArrayEltR
      ((((), ()), GHC.Types.Int), ())
  {- Unfolding: InlineRule (0, True, False)
                (Data.Array.Accelerate.Array.Data.ArrayEltRpair
                   @ ((((), ()), GHC.Types.Int), ())
                   @ (((), ()), GHC.Types.Int)
                   @ ()
                   @~ <((((), ()), GHC.Types.Int), ())>_N
                   MMultDivConq.$s$fArrayElt(,)3
                   Data.Array.Accelerate.Array.Data.$fArrayElt()
                   MMultDivConq.$s$fArrayElt(,)1
                   Data.Array.Accelerate.Array.Data.$WArrayEltRunit) -}
65e68ae7afbbb9d53c50b80fea8ae535
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.MutableArrayData
            (((), ()), GHC.Types.Int))
  {- Arity: 2, Strictness: <S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ size :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                         (((), ()), GHC.Types.Int))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int
                          -> Data.Array.Accelerate.Array.Data.MutableArrayData
                               (((), ()), GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ ((), ())
                          @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cnewArrayData
                          size))
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cnewArrayData
                       size))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.MutableArrayData
                         (((), ()), GHC.Types.Int)>_R)
                   eta)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.MutableArrayData
                                  (((), ()), GHC.Types.Int)>_R)) -}
e881f00509753abcfb56b8b08e4a0445
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1 ::
    GHC.Types.Int
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.MutableArrayData
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, Strictness: <S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ size :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray ())
                    @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                         ((((), ()), GHC.Types.Int), ()))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ()
                          -> Data.Array.Accelerate.Array.Data.MutableArrayData
                               ((((), ()), GHC.Types.Int), ()))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ (((), ()), GHC.Types.Int)
                          @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData size))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cnewArrayData
                       size))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.MutableArrayData
                         ((((), ()), GHC.Types.Int), ())>_R)
                   eta)
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.MutableArrayData
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
46444d201fc6c6d62db7209026c0b398
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Data.ArrayPtrs
         (((), ()), GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U,1*U),1*U(1*U(A,A,A,A,1*U(U,A))))>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int) ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cptrsOfArrayData
                    a179,
                  Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cptrsOfArrayData
                    b1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                <((), ())>_N <GHC.Types.Int>_N))) }) -}
fc2bf56c217d3420f97d8567f1e7aa74
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> Data.Array.Accelerate.Array.Data.ArrayPtrs
         ((((), ()), GHC.Types.Int), ())
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),1*U(1*U(A,A,A,A,1*U(U,A)))),1*U)>m,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ()) ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
                    a179,
                  Data.Array.Accelerate.Array.Data.$fArrayElt()_$cptrsOfArrayData b1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                <(((), ()), GHC.Types.Int)>_N <()>_N))) }) -}
f2506ab6e88f4166022f36d53d591ccc
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayPtrs
            (((), ()), GHC.Types.Int))
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U(1*U(A,A,A,A,1*U(U,A))))><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()),
                       Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int
                          -> (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()),
                              Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int))
                       (GHC.Tuple.(,)
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ((), ()))
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cptrsOfMutableArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int)
                        (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cptrsOfArrayData
                           b1))
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayPtrs GHC.Types.Int>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                     <((), ())>_N <GHC.Types.Int>_N))))
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayPtrs
                                  (((), ()), GHC.Types.Int)>_R)) -}
42ce817501a4034236fae60fdbeb22f6
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayPtrs
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,1*U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                    @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                         (((), ()), GHC.Types.Int),
                       Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ()
                          -> (Data.Array.Accelerate.Array.Data.ArrayPtrs
                                (((), ()), GHC.Types.Int),
                              Data.Array.Accelerate.Array.Data.ArrayPtrs ()))
                       (GHC.Tuple.(,)
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs
                               (((), ()), GHC.Types.Int))
                          @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ()))
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayPtrs ())
                        (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cptrsOfArrayData
                           b1))
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayPtrs ()>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayPtrs ()>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:ArrayPtrs(,)[0]
                                     <(((), ()), GHC.Types.Int)>_N <()>_N))))
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayPtrs
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
45d89e2552eced37a30e1686af7c6b32
  $s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS(S)),1*U(1*U,1*U(1*U(A,A,U,A,A)))><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$ctouchArrayData
                       a179)
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$ctouchArrayData
                       b1))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.ArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
67df194562c834f6b33c8e1d2e0fc2ec
  $s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SS),1*U(1*U,1*U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
                       a179)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$ctouchArrayData
                       b1))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.ArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
35acfbfee1ac57de140cf9884687b935
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayData
            (((), ()), GHC.Types.Int))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int)
                    @ (Data.Array.Accelerate.Array.Data.ArrayData
                         (((), ()), GHC.Types.Int))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ((), ()))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray GHC.Types.Int
                          -> Data.Array.Accelerate.Array.Data.ArrayData
                               (((), ()), GHC.Types.Int))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ ((), ())
                          @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int)
                        b1)
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayData GHC.Types.Int>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.ArrayData
                         (((), ()), GHC.Types.Int)>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayData
                                  (((), ()), GHC.Types.Int)>_R)) -}
ecf7f21817be7c7ad670158411cf4f23
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO
         (Data.Array.Accelerate.Array.Data.ArrayData
            ((((), ()), GHC.Types.Int), ()))
  {- Arity: 2, HasNoCafRefs, Strictness: <S(SL),1*U(1*U,U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ (Data.Array.Accelerate.Array.Data.GArrayData
                         Data.Array.Accelerate.Array.Unique.UniqueArray ())
                    @ (Data.Array.Accelerate.Array.Data.ArrayData
                         ((((), ()), GHC.Types.Int), ()))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray
                            (((), ()), GHC.Types.Int))
                       @ (Data.Array.Accelerate.Array.Data.GArrayData
                            Data.Array.Accelerate.Array.Unique.UniqueArray ()
                          -> Data.Array.Accelerate.Array.Data.ArrayData
                               ((((), ()), GHC.Types.Int), ()))
                       (Data.Array.Accelerate.Array.Data.$WAD_Pair
                          @ Data.Array.Accelerate.Array.Unique.UniqueArray
                          @ (((), ()), GHC.Types.Int)
                          @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
                          a179))
                    (\ eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     (GHC.Base.returnIO
                        @ (Data.Array.Accelerate.Array.Data.ArrayData ())
                        b1)
                       `cast`
                     (GHC.Types.NTCo:IO[0]
                          <Data.Array.Accelerate.Array.Data.ArrayData ()>_R)
                       eta1)
                      `cast`
                    (Sym (GHC.Types.NTCo:IO[0]
                              <Data.Array.Accelerate.Array.Data.ArrayData ()>_R)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Data.Array.Accelerate.Array.Data.ArrayData
                         ((((), ()), GHC.Types.Int), ())>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <Data.Array.Accelerate.Array.Data.ArrayData
                                  ((((), ()), GHC.Types.Int), ())>_R)) -}
39dca01d4f481fcc1e86c9ce1b89ecaa
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData ::
    Data.Array.Accelerate.Array.Data.ArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> (((), ()), GHC.Types.Int)
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U,1*U),1*U(1*U(A,A,U,A,1*U(U,U))))><L,U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeIndexArrayData
                    a179
                    i,
                  Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeIndexArrayData
                    b1
                    i) }) -}
2411382bad2134c5742d226025c269df
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1 ::
    Data.Array.Accelerate.Array.Data.ArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int -> ((((), ()), GHC.Types.Int), ())
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),1*U(1*U(A,A,U,A,1*U(U,U)))),1*U)><L,U(U)>m,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.ArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
                    a179
                    i,
                  Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeIndexArrayData
                    b1
                    i) }) -}
fa221ce28ed6619828451d717ceb7dd2
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> GHC.Types.IO (((), ()), GHC.Types.Int)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SS(S(LLLLS))),1*U(1*U,1*U(1*U(A,A,U,A,1*U(U,U))))><S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ GHC.Types.Int
                    @ (((), ()), GHC.Types.Int)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ ((), ())
                       @ (GHC.Types.Int -> (((), ()), GHC.Types.Int))
                       (GHC.Tuple.(,) @ ((), ()) @ GHC.Types.Int)
                       (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeReadArrayData
                          a179
                          i))
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeReadArrayData
                       b1
                       i))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <(((), ()), GHC.Types.Int)>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <(((), ()), GHC.Types.Int)>_R)) -}
185d3a60f4cff0e7bd61540fbf302dc8
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int -> GHC.Types.IO ((((), ()), GHC.Types.Int), ())
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S,1*U(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 (GHC.Base.$fApplicativeIO_$sap
                    @ ()
                    @ ((((), ()), GHC.Types.Int), ())
                    (Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$s<$>
                       @ (((), ()), GHC.Types.Int)
                       @ (() -> ((((), ()), GHC.Types.Int), ()))
                       (GHC.Tuple.(,) @ (((), ()), GHC.Types.Int) @ ())
                       (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
                          a179
                          i))
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeReadArrayData
                       b1
                       i))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <((((), ()), GHC.Types.Int), ())>_R)
                   eta })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0]
                               <((((), ()), GHC.Types.Int), ())>_R)) -}
96083970945c24ec064bde3ee79d539f
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      (((), ()), GHC.Types.Int)
    -> GHC.Types.Int -> (((), ()), GHC.Types.Int) -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SS(S(LLLLS))),1*U(1*U,1*U(1*U(A,A,U,A,1*U(U,U))))><S,1*U(U)><S(S(SS)S),1*U(1*U(1*H,1*H),1*U(U))><L,U>,
     Inline: INLINE (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           (((), ()), GHC.Types.Int)
                   i :: GHC.Types.Int
                   ds1 :: (((), ()), GHC.Types.Int)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <((), ())>_N
                                <GHC.Types.Int>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 case ds1 of wild1 { (,) x y ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (Data.Array.Accelerate.Array.Sugar.$fIsListArray_$s$fArrayElt(,)_$cunsafeWriteArrayData
                       a179
                       i
                       x)
                    (Data.Array.Accelerate.Array.Data.$fArrayEltInt_$cunsafeWriteArrayData
                       b1
                       i
                       y))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta } })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    (((), ()), GHC.Types.Int)>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <(((), ()), GHC.Types.Int)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
d411983100a87f2d60b2c4a48eb1308c
  $s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1 ::
    Data.Array.Accelerate.Array.Data.MutableArrayData
      ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.Int
    -> ((((), ()), GHC.Types.Int), ())
    -> GHC.Types.IO ()
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U,1*U)><S,1*U(U)><S(S(S(SS)S)S),1*U(1*U(1*U(1*H,1*H),1*U(U)),1*H)><L,U>,
     Inline: INLINE (sat-args=3),
     Unfolding: InlineRule (3, False, False)
                (\ ds :: Data.Array.Accelerate.Array.Data.MutableArrayData
                           ((((), ()), GHC.Types.Int), ())
                   i :: GHC.Types.Int
                   ds1 :: ((((), ()), GHC.Types.Int), ())
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDataba(,)[0]
                                <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                <(((), ()), GHC.Types.Int)>_N
                                <()>_N)) of wild { Data.Array.Accelerate.Array.Data.AD_Pair a179 b1 ->
                 case ds1 of wild1 { (,) x y ->
                 (GHC.Base.thenIO
                    @ ()
                    @ ()
                    (MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
                       a179
                       i
                       x)
                    (Data.Array.Accelerate.Array.Data.$fArrayElt()_$cunsafeWriteArrayData
                       b1
                       i
                       y))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   eta } })
                  `cast`
                (<Data.Array.Accelerate.Array.Data.MutableArrayData
                    ((((), ()), GHC.Types.Int), ())>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <((((), ()), GHC.Types.Int), ())>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e7814364b0a636852a829b1c24c7b291
  $s$fArraysArray ::
    Data.Array.Accelerate.Array.Sugar.Arrays
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.DIM1
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Array
                       (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       GHC.Types.Double)
                  MMultDivConq.$s$fArraysArray2
                  MMultDivConq.$s$fArraysArray2
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                               <Data.Array.Accelerate.Array.Sugar.DIM1
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                               <GHC.Types.Double>_N)))_R
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$carrays
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     MMultDivConq.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  MMultDivConq.$s$fArraysArray1
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$ctoArr
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     MMultDivConq.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble)
                  (Data.Array.Accelerate.Array.Sugar.$fArraysArray_$cfromArr
                     @ (Data.Array.Accelerate.Array.Sugar.DIM1
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ GHC.Types.Double
                     MMultDivConq.$s$fArraysArray2
                     MMultDivConq.$s$fArraysArray2
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:ArrReprArray[0]
                                  <Data.Array.Accelerate.Array.Sugar.DIM1
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Double>_N)))_R
                     MMultDivConq.$s$WArraysFarray1
                     Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
0543b48d7fd5f97a9290a35650899058
  $s$fArraysArray1 ::
    Data.Array.Accelerate.Array.Sugar.Array
      (Data.Array.Accelerate.Array.Sugar.DIM1
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
      GHC.Types.Double
    -> Data.Array.Accelerate.Array.Sugar.ArraysFlavour
         (Data.Array.Accelerate.Array.Sugar.Array
            (Data.Array.Accelerate.Array.Sugar.DIM1
             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
            GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.DIM1
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            GHC.Types.Double ->
                 Data.Array.Accelerate.Array.Sugar.ArraysFarray
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        (Data.Array.Accelerate.Array.Sugar.DIM1
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                        GHC.Types.Double)
                   @ (Data.Array.Accelerate.Array.Sugar.DIM1
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         (Data.Array.Accelerate.Array.Sugar.DIM1
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                         GHC.Types.Double>_N
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
6ff2f404617dcc85ea7a0b99234b6dd5
  $s$fArraysArray10 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 8705313363352784917
                   __word 10768904120299974647
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fArraysArray_ww2
                   MMultDivConq.$s$fArraysArray11) -}
895d17a8b44f9900e2e22b7d12e50f74
  $s$fArraysArray11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Double"#) -}
f290e2147d92844b909677bfc6b421c3
  $s$fArraysArray12 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray13
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
cdc37658a2c0c4ef5c4258c7063d46e9
  $s$fArraysArray13 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case GHC.Base.++
                        @ Data.Typeable.Internal.TypeRep
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        MMultDivConq.$s$fArraysArray17 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray14
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             (GHC.Types.:
                                @ GHC.Fingerprint.Type.Fingerprint
                                MMultDivConq.$s$fArraysArray14
                                (let {
                                   z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                   = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                 } in
                                 letrec {
                                   go :: [Data.Typeable.Internal.TypeRep]
                                         -> [GHC.Fingerprint.Type.Fingerprint]
                                     {- Arity: 1, Strictness: <S,1*U> -}
                                   = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                     case ds of wild1 {
                                       [] -> z7
                                       : y ys
                                       -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                          GHC.Types.:
                                            @ GHC.Fingerprint.Type.Fingerprint
                                            (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                            (go ys) } }
                                 } in
                                 go
                                   (GHC.Types.[]
                                      @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray14
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
32c9ef71e689131bd44297d20f7c6f24
  $s$fArraysArray14 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 2185754398834785717
                   __word 9097758251846721585) -}
96a171eb2c1a58bae8091ebcd2b11189
  $s$fArraysArray15 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray16
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
65c8f467ad0085f2e249aa320a841e5c
  $s$fArraysArray16 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 16287469036901857884
                   __word 16587023596664995632
                   MMultDivConq.$s$fArraysArray_wild1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
4ae2c88817628f04e46d24ee0a5300b3
  $s$fArraysArray17 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray18
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
88169a18bdc7ff80e2c62ea10ce6b7d0
  $s$fArraysArray18 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fArraysArray19 of wild { Data.Typeable.Internal.TypeRep dt dt1 tc ks trs ->
                 case tc of ww { Data.Typeable.Internal.TyCon ww1 ww2 ww3 ww4 ww5 ->
                 case Data.Typeable.Internal.$wmkPolyTyConApp
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ks
                        (GHC.Base.++
                           @ Data.Typeable.Internal.TypeRep
                           trs
                           MMultDivConq.$s$fArraysArray15) of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Data.Typeable.Internal.TypeRep ww7 ww8 ww9 ww10 ww11 } } }) -}
b17346c0faf482079c4ed92ef648a38c
  $s$fArraysArray19 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fArraysArray_w2 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 2185754398834785717
                        __word 9097758251846721585
                        MMultDivConq.$s$fArraysArray_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fArraysArray20 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      Data.Typeable.Internal.TypeRep
                        dt1
                        dt2
                        MMultDivConq.$s$fArraysArray_wild
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        wild2 } }) -}
eb46ef5728f3e43ce388b3bf11e1abb9
  $s$fArraysArray2 ::
    Data.Typeable.Internal.Typeable
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.DIM1
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fArraysArray3
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N
                          <Data.Array.Accelerate.Array.Sugar.Array
                             (Data.Array.Accelerate.Array.Sugar.DIM1
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             GHC.Types.Double>_N)) -}
0b79645b7259de67f63fb6124af8a2c8
  $s$fArraysArray20 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray14
                   MMultDivConq.$s$fArraysArray21) -}
5f68cbffe658a2c4c18a6bae4eccf9d1
  $s$fArraysArray21 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fArraysArray_go1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
5f4b5bf2e02defddba2e89657b7fef3d
  $s$fArraysArray22 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray23
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
d677677b8b2abc82f60faafc98502db7
  $s$fArraysArray23 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 18079619739210634038
                   __word 13272276217628883993
                   MMultDivConq.$s$fArraysArray24
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
86246bd0d087c1e4843051fc44645338
  $s$fArraysArray24 :: Data.Typeable.Internal.TyCon
  {- Unfolding: (Data.Typeable.Internal.TyCon
                   __word 18079619739210634038
                   __word 13272276217628883993
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fArraysArray25) -}
c1702c1897be0060d56f03926d50ce46
  $s$fArraysArray25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Z"#) -}
b5869fd444a65f0388f8504511a6344f
  $s$fArraysArray3 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Array
         (Data.Array.Accelerate.Array.Sugar.DIM1
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
         GHC.Types.Double)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Array
                                (Data.Array.Accelerate.Array.Sugar.DIM1
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                GHC.Types.Double) ->
                 MMultDivConq.$s$fArraysArray4) -}
8908d96dec424646f65cb5f086e87aac
  $s$fArraysArray4 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fArraysArray_w1 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray8 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fArraysArray5 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray8 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 8044828400323168594
                             __word 13765680496363839762
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 8044828400323168594
                                        __word 13765680496363839762)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 8044828400323168594
                                __word 13765680496363839762
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
39492a6114e3905a983f02c27db0ec90
  $s$fArraysArray5 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray7
                   MMultDivConq.$s$fArraysArray6) -}
4a16de9af141d88159dae156c92f6764
  $s$fArraysArray6 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fArraysArray_go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
5eeed1ef5b7994508627122c76469a5d
  $s$fArraysArray7 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 8044828400323168594
                   __word 13765680496363839762) -}
1f8408a8c2edbce99065972261ede420
  $s$fArraysArray8 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fArraysArray9
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
5d543c0b50bb38f98b0f62fc370b3e97
  $s$fArraysArray9 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 8705313363352784917
                   __word 10768904120299974647
                   MMultDivConq.$s$fArraysArray10
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
624e490ff97fad3e0c871b6edc80d3a3
  $s$fArraysArray_go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
a0e1b699df66bc8004b7febfd6343455
  $s$fArraysArray_go1 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
72100ad164fcf95f62c17ae0da0c384a
  $s$fArraysArray_w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fArraysArray12) -}
802021cd227c279f650dc75df7eee5b0
  $s$fArraysArray_w2 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fArraysArray22) -}
7054b11f9b00d86f7c935a07317cac96
  $s$fArraysArray_wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 2185754398834785717
                   __word 9097758251846721585
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fArraysArray_ww7) -}
d521d4920aedb8c450541592c51fd31c
  $s$fArraysArray_wild1 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 16287469036901857884
                   __word 16587023596664995632
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fArraysArray_ww2
                   MMultDivConq.$s$fArraysArray_ww8) -}
caa9269ccdfccc71bf2c4c3633860067
  $s$fArraysArray_ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Data.Array.Accelerate.Array.Sugar"#) -}
319f031727cecaf92c30fd1e3a31a88d
  $s$fArraysArray_ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Types"#) -}
cc8af81abb38b935149f1bcec81c16b2
  $s$fArraysArray_ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "H6SVdIe0K6B5OObFdUZBOL"#) -}
eebf21cbba6f8fabe794ce008d3dc0e3
  $s$fArraysArray_ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Array"#) -}
2fc831c82891666ecf8466c27d86bd89
  $s$fArraysArray_ww6 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "ghc-prim"#) -}
daa1445b3dad503ba178379a77bd70f1
  $s$fArraysArray_ww7 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# ":."#) -}
5b4e72873ab751718dce940b10e44525
  $s$fArraysArray_ww8 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "Int"#) -}
7057170594fd7c12499bccf520bc6aa0
  $s$fElt:. ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.15
                  MMultDivConq.$s$fElt:.11
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                  MMultDivConq.$s$fElt:.3
                    `cast`
                  (Data.Typeable.Internal.Typeable
                     <*>_N
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  MMultDivConq.$s$fArrayElt(,)_$carrayElt1
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.15
                     MMultDivConq.$s$fElt:.11
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                     MMultDivConq.$s$fElt:.3
                       `cast`
                     (Data.Typeable.Internal.Typeable
                        <*>_N
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fArrayElt(,)_$carrayElt1
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fEltZ
                     Data.Array.Accelerate.Array.Sugar.$fEltAll)
                  MMultDivConq.$s$fElt:.2
                  MMultDivConq.$s$fElt:.1 -}
80e71521223edb06bb068b4967898fd5
  $s$fElt:.1 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ Data.Array.Accelerate.Array.Sugar.Z
                   @ Data.Array.Accelerate.Array.Sugar.All
                   (Data.Array.Accelerate.Array.Sugar.$fEltZ_$ctoElt t1)
                   (Data.Array.Accelerate.Array.Sugar.$fEltAll_$ctoElt h1) }) -}
6fae135d85ca53c20801f05359a22ad0
  $s$fElt:.10 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   __word 17502837480397947244
                   __word 15872498598114190556) -}
b7ecc1affb0a51f253c36e9d0acf34cf
  $s$fElt:.11 ::
    GHC.Prim.Proxy#
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 MMultDivConq.$s$fElt:.12) -}
06d75b7ea0d039801d50d3085cdad092
  $s$fElt:.12 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fArraysArray19 of wild { Data.Typeable.Internal.TypeRep dt dt1 tc ks trs ->
                 case tc of ww { Data.Typeable.Internal.TyCon ww1 ww2 ww3 ww4 ww5 ->
                 case Data.Typeable.Internal.$wmkPolyTyConApp
                        ww1
                        ww2
                        ww3
                        ww4
                        ww5
                        ks
                        (GHC.Base.++
                           @ Data.Typeable.Internal.TypeRep
                           trs
                           MMultDivConq.$s$fElt:.13) of ww6 { (#,,,,#) ww7 ww8 ww9 ww10 ww11 ->
                 Data.Typeable.Internal.TypeRep ww7 ww8 ww9 ww10 ww11 } } }) -}
00aaa24ee350a2255271ca5cd6223ef3
  $s$fElt:.13 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.14
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
573468468c6fa02b45795699da2e93a4
  $s$fElt:.14 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 6013167054417736561
                   __word 11875381381783196623
                   MMultDivConq.$s$fElt:._wild2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
84c51f0b30afa12a332643a9a9d8e114
  $s$fElt:.15 ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:. -}
569794632042d023c6b9a32009529276
  $s$fElt:.16 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  MMultDivConq.$s$fElt:.28
                  MMultDivConq.$s$fElt:.23
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <(Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                  MMultDivConq.$s$fElt:.18
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Trans
                                 (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                      <GHC.Types.Int>_N)
                                 ((Trans
                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                            <Data.Array.Accelerate.Array.Sugar.All>_N)
                                       ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                         Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                   Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N)))
                  MMultDivConq.$s$fArrayElt(,)3
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Trans
                                ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                  Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                          <Data.Array.Accelerate.Array.Sugar.All>_N)),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                    <GHC.Types.Int>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.28
                     MMultDivConq.$s$fElt:.23
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <(Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                     MMultDivConq.$s$fElt:.18
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Trans
                                    (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                         <GHC.Types.Int>_N)
                                    ((Trans
                                          (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <Data.Array.Accelerate.Array.Sugar.All>_N)
                                          ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                            Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                      Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N)))
                     MMultDivConq.$s$fArrayElt(,)3
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Trans
                                   ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                     Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                   (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <Data.Array.Accelerate.Array.Sugar.All>_N)),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                       <GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fElt:.17
                     Data.Array.Accelerate.Array.Sugar.$fEltInt)
                  MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt
                  MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt -}
f0d1078e598bbba8295b820e995f031c
  $s$fElt:.17 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:. -}
fc2b6c9f1fd9e8a3c75cd8e6590d455c
  $s$fElt:.18 ::
    GHC.Prim.Proxy# (((), ()), GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# (((), ()), GHC.Types.Int) ->
                 MMultDivConq.$s$fElt:.19) -}
93039142cae93fb92f21c206ea3baba5
  $s$fElt:.19 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w2 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fElt:.10
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.20 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
1959c552030525a5b5f752dfcd70954b
  $s$fElt:.2 ::
    (Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (Data.Array.Accelerate.Array.Sugar.Z
          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*H,1*H)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (Data.Array.Accelerate.Array.Sugar.$fEltZ_$cfromElt t1,
                  Data.Array.Accelerate.Array.Sugar.$fEltAll_$cfromElt h1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N))) }) -}
91d54d5eef99e7ac67c5fe5c45bdfd45
  $s$fElt:.20 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.21) -}
2e1aef3626ea5f6fea7f73057deadc88
  $s$fElt:.21 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go1
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
a2602190b249505d322ba144ad90cbdd
  $s$fElt:.22 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.5
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
1af402b36fdd22df14ff9e168ea24310
  $s$fElt:.23 ::
    GHC.Prim.Proxy#
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             ((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 MMultDivConq.$s$fElt:.24) -}
b8d05c3228a9fc7f4fb48cd43f4d705d
  $s$fElt:.24 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w3 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray14
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.25 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fArraysArray15 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
9663e15c3640d04a13aff6efdd0873e5
  $s$fElt:.25 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray14
                   MMultDivConq.$s$fElt:.26) -}
cd082ce45b66e57eeed5ad076781affd
  $s$fElt:.26 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go2
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
8f689c9d52e4eddced72a77b7d81a9e7
  $s$fElt:.27 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.12
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
b181c95c6a2b1f507c4264828629d872
  $s$fElt:.28 ::
    GHC.Show.Show
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:.1 -}
1affbe18fb7c998089e8338adf55f987
  $s$fElt:.29 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.42
                  MMultDivConq.$s$fElt:.37
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            <((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                  MMultDivConq.$s$fElt:.32
                    `cast`
                  (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                            <*>_N
                            (Trans
                                 (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                      <(Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                      <Data.Array.Accelerate.Array.Sugar.All>_N)
                                 ((Trans
                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                            <GHC.Types.Int>_N)
                                       ((Trans
                                             (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <Data.Array.Accelerate.Array.Sugar.All>_N)
                                             ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                               Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                         Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N,
                                   Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N)))
                  MMultDivConq.$s$fElt:.31
                    `cast`
                  (Data.Array.Accelerate.Array.Data.ArrayElt
                     (Trans
                          ((Trans
                                ((Trans
                                      ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                        Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                      (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                <Data.Array.Accelerate.Array.Sugar.All>_N)),
                                  Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                                (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                          <Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                          <GHC.Types.Int>_N)),
                            Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                    <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fElt:._$celtType
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.42
                     MMultDivConq.$s$fElt:.37
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               <((Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                     MMultDivConq.$s$fElt:.32
                       `cast`
                     (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                               <*>_N
                               (Trans
                                    (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                         <(Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                         <Data.Array.Accelerate.Array.Sugar.All>_N)
                                    ((Trans
                                          (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                               <GHC.Types.Int>_N)
                                          ((Trans
                                                (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <Data.Array.Accelerate.Array.Sugar.All>_N)
                                                ((Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0],
                                                  Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N,
                                            Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))_N,
                                      Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0]))_N)))
                     MMultDivConq.$s$fElt:.31
                       `cast`
                     (Data.Array.Accelerate.Array.Data.ArrayElt
                        (Trans
                             ((Trans
                                   ((Trans
                                         ((Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]),
                                           Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                                         (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <Data.Array.Accelerate.Array.Sugar.All>_N)),
                                     Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0])))_N
                                   (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z
                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                             <GHC.Types.Int>_N)),
                               Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprAll[0])))_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                       <Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fElt:.30
                     Data.Array.Accelerate.Array.Sugar.$fEltAll)
                  MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt1
                  MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt1 -}
78f63c390cadf1c90208eaf6934d35b4
  $s$fElt:.3 :: Data.Typeable.Internal.Typeable ((), ())
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:.4
                  `cast`
                (Sym (Data.Typeable.Internal.NTCo:Typeable[0]
                          <*>_N <((), ())>_N)) -}
a55a53c51c29c398028026563a72d3b1
  $s$fElt:.30 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:.16 -}
c1e8f9c96a19f16ce64aaf541a9096dd
  $s$fElt:.31 ::
    Data.Array.Accelerate.Array.Data.ArrayElt
      ((((), ()), GHC.Types.Int), ())
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fArrayElt(,)2 -}
c6fbefbeaa96f27a0e05fe7e6557d67a
  $s$fElt:.32 ::
    GHC.Prim.Proxy# ((((), ()), GHC.Types.Int), ())
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((((), ()), GHC.Types.Int), ()) ->
                 MMultDivConq.$s$fElt:.33) -}
64930819b2653c5d8008b4ca13d796c7
  $s$fElt:.33 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w4 of wild2 {
                   []
                   -> case MMultDivConq.$s$fElt:._w1 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fElt:.10
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fElt:._wild1
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.34 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
094e0ca4ef84b508e46c0c4a572b1ab5
  $s$fElt:.34 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.35) -}
bc495481207752873ff483538de27211
  $s$fElt:.35 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go3
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
7114814457221c6e69c933a0812e58b5
  $s$fElt:.36 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.19
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
8273f570e1da16b4a0c412594dbdf580
  $s$fElt:.37 ::
    GHC.Prim.Proxy#
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy#
                             (((Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 MMultDivConq.$s$fElt:.38) -}
ad2512f0f14ca8a94377cc70db0c4453
  $s$fElt:.38 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w5 of wild2 {
                   []
                   -> case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                             MMultDivConq.$s$fElt:.13 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv ipv1
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     MMultDivConq.$s$fArraysArray14
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv ipv1
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt dt1 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt dt1)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                           Data.Typeable.Internal.TypeRep
                             dt1
                             dt2
                             MMultDivConq.$s$fArraysArray_wild
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } }
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.39 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.13 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 2185754398834785717
                             __word 9097758251846721585
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 2185754398834785717
                                        __word 9097758251846721585)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 2185754398834785717
                                __word 9097758251846721585
                                MMultDivConq.$s$fArraysArray_ww3
                                MMultDivConq.$s$fArraysArray_ww1
                                MMultDivConq.$s$fArraysArray_ww7)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
7ed1d38e8c587db213e1999d5247ef1e
  $s$fElt:.39 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fArraysArray14
                   MMultDivConq.$s$fElt:.40) -}
529b4961598de1e342c3dd1e453379d4
  $s$fElt:.4 ::
    GHC.Prim.Proxy# ((), ()) -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ wild :: GHC.Prim.Proxy# ((), ()) -> MMultDivConq.$s$fElt:.5) -}
041adaa1c85f0c940ecd57d52cb757b9
  $s$fElt:.40 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go4
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
1b3e7dd5b92c3e62a6575a87fb1ecddd
  $s$fElt:.41 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.24
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
66d6fe8c9aa8ff9c1d2dc8ea3b471f82
  $s$fElt:.42 ::
    GHC.Show.Show
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fElt:._$s$fShow:.2 -}
033979ffef68ef60c8c6575a6b80ae55
  $s$fElt:.5 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case MMultDivConq.$s$fElt:._w1 of wild2 {
                   []
                   -> Data.Typeable.Internal.TypeRep
                        __word 17502837480397947244
                        __word 15872498598114190556
                        MMultDivConq.$s$fElt:._wild1
                        (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   : ipv ipv1
                   -> case GHC.Fingerprint.fingerprintFingerprints
                             MMultDivConq.$s$fElt:.8 of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                      case GHC.Base.++
                             @ Data.Typeable.Internal.TypeRep
                             wild2
                             MMultDivConq.$s$fElt:.6 of wild1 {
                        []
                        -> Data.Typeable.Internal.TypeRep
                             __word 17502837480397947244
                             __word 15872498598114190556
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        : ipv2 ipv3
                        -> case GHC.Fingerprint.fingerprintFingerprints
                                  (GHC.Types.:
                                     @ GHC.Fingerprint.Type.Fingerprint
                                     (GHC.Fingerprint.Type.Fingerprint
                                        __word 17502837480397947244
                                        __word 15872498598114190556)
                                     (let {
                                        z7 :: [GHC.Fingerprint.Type.Fingerprint]
                                        = Data.Typeable.Internal.listTc_$sgo ipv2 ipv3
                                      } in
                                      letrec {
                                        go :: [Data.Typeable.Internal.TypeRep]
                                              -> [GHC.Fingerprint.Type.Fingerprint]
                                          {- Arity: 1, Strictness: <S,1*U> -}
                                        = \ ds :: [Data.Typeable.Internal.TypeRep] ->
                                          case ds of wild3 {
                                            [] -> z7
                                            : y ys
                                            -> case y of wild4 { Data.Typeable.Internal.TypeRep dt4 dt5 ds1 ds2 ds3 ->
                                               GHC.Types.:
                                                 @ GHC.Fingerprint.Type.Fingerprint
                                                 (GHC.Fingerprint.Type.Fingerprint dt4 dt5)
                                                 (go ys) } }
                                      } in
                                      go
                                        (GHC.Types.[]
                                           @ Data.Typeable.Internal.KindRep))) of dt4 { GHC.Fingerprint.Type.Fingerprint dt5 dt6 ->
                           Data.Typeable.Internal.TypeRep
                             dt5
                             dt6
                             (Data.Typeable.Internal.TyCon
                                __word 17502837480397947244
                                __word 15872498598114190556
                                MMultDivConq.$s$fArraysArray_ww6
                                MMultDivConq.$s$fElt:._ww3
                                MMultDivConq.$s$fElt:._ww4)
                             (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                             wild1 } } } }) -}
92c9620d43ab2b46f0dc77240fd9522f
  $s$fElt:.6 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Types.:
                   @ Data.Typeable.Internal.TypeRep
                   MMultDivConq.$s$fElt:.7
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
6251a47a8d473e5962bab8db1bf6cf12
  $s$fElt:.7 :: Data.Typeable.Internal.TypeRep
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TypeRep
                   __word 15843165073189925570
                   __word 13730769858450861905
                   MMultDivConq.$s$fElt:._wild
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)) -}
e43188699b67660db290e338a0631346
  $s$fElt:.8 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Fingerprint.Type.Fingerprint
                   MMultDivConq.$s$fElt:.10
                   MMultDivConq.$s$fElt:.9) -}
ea629b28db71af7ba623e54b8d13c89c
  $s$fElt:.9 :: [GHC.Fingerprint.Type.Fingerprint]
  {- Unfolding: (MMultDivConq.$s$fElt:._go
                   (GHC.Types.[] @ Data.Typeable.Internal.KindRep)) -}
4efb20d97bbaac2e9ec4a3a06cc1c8c0
  $s$fElt:._$s$fElt:._$cfromElt ::
    ((Data.Array.Accelerate.Array.Sugar.Z
      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         ((Data.Array.Accelerate.Array.Sugar.Z
           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(1*H,1*H),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: (Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (MMultDivConq.$s$fElt:.2 t1,
                  (GHC.Base.id @ GHC.Types.Int h1)
                    `cast`
                  (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                <GHC.Types.Int>_N))) }) -}
992c24f5844cd2a0a327140207991267
  $s$fElt:._$s$fElt:._$cfromElt1 ::
    (((Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> Data.Array.Accelerate.Array.Sugar.EltRepr
         (((Data.Array.Accelerate.Array.Sugar.Z
            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*H,1*H),U),1*H)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: ((Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All ->
                 case ds6 of wild { Data.Array.Accelerate.Array.Sugar.:. t1 h1 ->
                 (MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt t1,
                  Data.Array.Accelerate.Array.Sugar.$fEltAll_$cfromElt h1)
                   `cast`
                 (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <(Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N))) }) -}
91a4437b21c80f4a52564da32e53a916
  $s$fElt:._$s$fElt:._$ctoElt ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
    -> (Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(1*U(1*U,1*U),U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            ((Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                <GHC.Types.Int>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   @ GHC.Types.Int
                   (MMultDivConq.$s$fElt:.1 t1)
                   (GHC.Base.id
                      @ GHC.Types.Int
                      h1
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))) }) -}
fb15c2007bac024942522df57bbb9bee
  $s$fElt:._$s$fElt:._$ctoElt1 ::
    Data.Array.Accelerate.Array.Sugar.EltRepr
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
    -> ((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S,1*U(1*U(1*U(1*U,1*U),U),1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ ds6 :: Data.Array.Accelerate.Array.Sugar.EltRepr
                            (((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All) ->
                 case ds6
                        `cast`
                      (Sub (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                <(Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                <Data.Array.Accelerate.Array.Sugar.All>_N)) of wild { (,) t1 h1 ->
                 Data.Array.Accelerate.Array.Sugar.:.
                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ Data.Array.Accelerate.Array.Sugar.All
                   (MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt t1)
                   (Data.Array.Accelerate.Array.Sugar.$fEltAll_$ctoElt h1) }) -}
bd450a55b74100aaacb0dd40cdb081d4
  $s$fElt:._$s$fShow:. ::
    GHC.Show.Show
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     @ Data.Array.Accelerate.Array.Sugar.All
                     Data.Array.Accelerate.Array.Sugar.$fShowZ
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList -}
5015eb1f60eced46621cd97733ee7cce
  $s$fElt:._$s$fShow:.1 ::
    GHC.Show.Show
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.15
                     GHC.Show.$fShowInt)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     @ GHC.Types.Int
                     MMultDivConq.$s$fElt:.15
                     GHC.Show.$fShowInt)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList1 -}
378780eba48b9b8f1b9c6f47b36b05b2
  $s$fElt:._$s$fShow:.2 ::
    GHC.Show.Show
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.28
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshow
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     @ Data.Array.Accelerate.Array.Sugar.All
                     MMultDivConq.$s$fElt:.28
                     Data.Array.Accelerate.Array.Sugar.$fShowAll)
                  MMultDivConq.$s$fElt:._$s$fShow:._$cshowList2 -}
e21a11c69313544c70b374d49b39f4a2
  $s$fElt:._$s$fShow:._$cshowList ::
    [Data.Array.Accelerate.Array.Sugar.Z
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ Data.Array.Accelerate.Array.Sugar.Z
                      @ Data.Array.Accelerate.Array.Sugar.All
                      Data.Array.Accelerate.Array.Sugar.$fShowZ
                      Data.Array.Accelerate.Array.Sugar.$fShowAll
                      GHC.Show.shows18)
                   ls
                   s) -}
8cc16c4a858456a34d86deb40901d887
  $s$fElt:._$s$fShow:._$cshowList1 ::
    [(Data.Array.Accelerate.Array.Sugar.Z
      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [(Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ (Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      @ GHC.Types.Int
                      MMultDivConq.$s$fElt:.15
                      GHC.Show.$fShowInt
                      GHC.Show.shows18)
                   ls
                   s) -}
03115c9c2d18b5bed424c73ba77292f1
  $s$fElt:._$s$fShow:._$cshowList2 ::
    [((Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [((Data.Array.Accelerate.Array.Sugar.Z
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (((Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   (Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowsPrec
                      @ ((Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      @ Data.Array.Accelerate.Array.Sugar.All
                      MMultDivConq.$s$fElt:.28
                      Data.Array.Accelerate.Array.Sugar.$fShowAll
                      GHC.Show.shows18)
                   ls
                   s) -}
cad0c236593bffab8ff3eb951aeb5f7c
  $s$fElt:._go ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
fb02e275cb52633885bba58fa5ba928d
  $s$fElt:._go1 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
0265e0275e70d85de301c4dfd6b3bfd5
  $s$fElt:._go2 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
051219eb8507a7ba3df21eeb908ad97b
  $s$fElt:._go3 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
b8040efdbe1107dea05a91a82142798f
  $s$fElt:._go4 ::
    [Data.Typeable.Internal.TypeRep]
    -> [GHC.Fingerprint.Type.Fingerprint]
  {- Arity: 1, Strictness: <S,1*U> -}
699f68e9c32aee80e98b9b4f9b9b83ef
  $s$fElt:._w1 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.6) -}
618cb674a6f38b0e91ef0f9998c96915
  $s$fElt:._w2 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.22) -}
12b608a5731befe8169c5f7c5b9b5485
  $s$fElt:._w3 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.27) -}
2c41de5e62adf18fba11523c5733c997
  $s$fElt:._w4 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.36) -}
a81c07afe964c305ed9d2f568f9ceadd
  $s$fElt:._w5 :: [Data.Typeable.Internal.TypeRep]
  {- Unfolding: (GHC.Base.++
                   @ Data.Typeable.Internal.TypeRep
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   MMultDivConq.$s$fElt:.41) -}
89ebfad17c15a75ee24052bde908720a
  $s$fElt:._wild :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 15843165073189925570
                   __word 13730769858450861905
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fElt:._ww3
                   MMultDivConq.$s$fElt:._ww1) -}
492a2b0c5779365c47221edbb8fe683b
  $s$fElt:._wild1 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 17502837480397947244
                   __word 15872498598114190556
                   MMultDivConq.$s$fArraysArray_ww6
                   MMultDivConq.$s$fElt:._ww3
                   MMultDivConq.$s$fElt:._ww4) -}
1305fc30847cf1e0db202bb9821602e9
  $s$fElt:._wild2 :: Data.Typeable.Internal.TyCon
  {- Strictness: m,
     Unfolding: (Data.Typeable.Internal.TyCon
                   __word 6013167054417736561
                   __word 11875381381783196623
                   MMultDivConq.$s$fArraysArray_ww3
                   MMultDivConq.$s$fArraysArray_ww1
                   MMultDivConq.$s$fElt:._ww2) -}
f9dabdb8a0444e18597735916a46ef4d
  $s$fElt:._ww1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "()"#) -}
f1514d0b85d6fd8214ff3f32621878b5
  $s$fElt:._ww2 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "All"#) -}
9cdfe8a86a25871526fd1f524160b2e3
  $s$fElt:._ww3 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "GHC.Tuple"#) -}
0aff21ebe83c2f93cdb3db2734a3f0fb
  $s$fElt:._ww4 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "(,)"#) -}
fa40162c6340e9a79bab1ed99e2ad3e4
  $s$fSlice:. ::
    Data.Array.Accelerate.Array.Sugar.Slice
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ ((Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                  MMultDivConq.$s$fElt:.30
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  MMultDivConq.$s$WArraysFarray1
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:._$csliceIndex
                     @ (Data.Array.Accelerate.Array.Sugar.Z
                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                     MMultDivConq.$s$fElt:.30
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$WArraysFarray1
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))))_R
                     MMultDivConq.$s$fSlice:.1) -}
5646a141a5b9e4516897dbd4d37b7009
  $s$fSlice:.0 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fSlice:.4
                  MMultDivConq.$s$WArraysFarray1
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Trans
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Trans
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                         <(Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))))_R
                  Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Trans
                               (Trans
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                    <(Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:.0_$csliceIndex
                     @ ((Data.Array.Accelerate.Array.Sugar.Z
                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                     MMultDivConq.$s$fSlice:.4
                     MMultDivConq.$s$WArraysFarray1
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z
                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Trans
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                            <(Data.Array.Accelerate.Array.Sugar.Z
                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))))_R
                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Trans
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                       (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N))
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                       <(Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))))_R
                     MMultDivConq.$s$fSlice:.3) -}
c40b056dd09a21149f788df6c5e77fba
  $s$fSlice:.1 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.$s$fSlice:._$s$fSlice:.0 -}
b8e03456c22c433ebde2a2986673858b
  $s$fSlice:.2 ::
    Data.Array.Accelerate.Array.Sugar.Shape
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Unfolding: InlineRule (0, True, True)
                Data.Array.Accelerate.Array.Lifted.$fArraysVector'_$s$fShape:. -}
f14a98dac74aebcfc4036cd9a2d4a4ec
  $s$fSlice:.3 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      ((Data.Array.Accelerate.Array.Sugar.Z
        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fSlice:. -}
b8672c48a6eb1d37fe330225c867507a
  $s$fSlice:.4 ::
    Data.Array.Accelerate.Array.Sugar.Elt
      (((Data.Array.Accelerate.Array.Sugar.Z
         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) MMultDivConq.$s$fElt:.29 -}
765ad672f01c62ea060f5413ad00fa88
  $s$fSlice:._$s$fSlice:.0 ::
    Data.Array.Accelerate.Array.Sugar.Slice
      (Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Array.Accelerate.Array.Sugar.Z
                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                  MMultDivConq.$s$fElt:.17
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  Data.Array.Accelerate.Array.Sugar.$fShapeZ
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  MMultDivConq.$s$fSlice:.2
                    `cast`
                  (Data.Array.Accelerate.Array.Sugar.Shape
                     (Trans
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                  (Data.Array.Accelerate.Array.Sugar.$fSlice:.0_$csliceIndex
                     @ Data.Array.Accelerate.Array.Sugar.Z
                     MMultDivConq.$s$fElt:.17
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fShapeZ
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShapeZ[0]))
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:CoSliceShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     MMultDivConq.$s$fSlice:.2
                       `cast`
                     (Data.Array.Accelerate.Array.Sugar.Shape
                        (Trans
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0])
                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                             (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                       <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                     Data.Array.Accelerate.Array.Sugar.$fSliceZ) -}
9041a1da03460b27b60304572378adb7
  $wsplitFour ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (# Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double),
          Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double),
          Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double),
          Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 let {
                   a20 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            Data.Array.Accelerate.Array.Sugar.DIM2
                   = Data.Array.Accelerate.Smart.Shape
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       w
                 } in
                 let {
                   lvl27 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                       (Data.Array.Accelerate.Smart.IndexHead
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (Data.Array.Accelerate.Lift.Plain
                               Data.Array.Accelerate.Array.Sugar.Z)
                          Data.Array.Accelerate.Array.Sugar.$fSliceZ
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          (Data.Array.Accelerate.Smart.IndexTail
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             a20
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                           <GHC.Types.Int>_N))
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                              <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                              <GHC.Types.Int>_N)))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                       MMultDivConq.splitFour1
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   lvl28 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                       (Data.Array.Accelerate.Smart.IndexHead
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (Data.Array.Accelerate.Lift.Plain
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                       GHC.Types.Int))
                          Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Trans
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                            <GHC.Types.Int>_N))))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          a20
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N))
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                       MMultDivConq.splitFour1
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   a21 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                       (Data.Array.Accelerate.Smart.IndexHead
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (Data.Array.Accelerate.Lift.Plain
                               Data.Array.Accelerate.Array.Sugar.Z)
                          Data.Array.Accelerate.Array.Sugar.$fSliceZ
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          (Data.Array.Accelerate.Smart.IndexTail
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             a20
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                           <GHC.Types.Int>_N))
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                              <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                              <GHC.Types.Int>_N)))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                       MMultDivConq.splitFour1
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   a22 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            (Data.Array.Accelerate.Lift.Plain
                               Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.IndexCons
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Lift.Plain
                            Data.Array.Accelerate.Array.Sugar.Z
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       @ (Data.Array.Accelerate.Lift.Plain
                            Data.Array.Accelerate.Array.Sugar.Z)
                       @ GHC.Types.Int
                       @~ <Data.Array.Accelerate.Lift.Plain
                             Data.Array.Accelerate.Array.Sugar.Z
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                       Data.Array.Accelerate.Array.Sugar.$fSliceZ
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Slice
                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Smart.$WIndexNil
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                       a21
                 } in
                 let {
                   a23 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                       (Data.Array.Accelerate.Smart.IndexHead
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (Data.Array.Accelerate.Lift.Plain
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                       GHC.Types.Int))
                          Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Trans
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                            <GHC.Types.Int>_N))))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          a20
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N))
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                       MMultDivConq.splitFour1
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                 } in
                 let {
                   a24 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            (Data.Array.Accelerate.Lift.Plain
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                       GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   = Data.Array.Accelerate.Smart.IndexCons
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Lift.Plain
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                    GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       @ (Data.Array.Accelerate.Lift.Plain
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                    GHC.Types.Int))
                       @ GHC.Types.Int
                       @~ <Data.Array.Accelerate.Lift.Plain
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                     GHC.Types.Int)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Slice
                          (Trans
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                         <GHC.Types.Int>_N))))_R
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       a22
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)))
                       a23
                 } in
                 (# (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       a24
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          i)
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N),
                    (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       a24
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.$WIndexNil
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z)
                                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.IndexTail
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           (Data.Array.Accelerate.Array.Sugar.Z
                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                   GHC.Types.Int))
                                      @ GHC.Types.Int
                                      Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      i `cast`
                                      (Data.Array.Accelerate.Smart.Exp
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                       <GHC.Types.Int>_N)))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)))
                             (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        (Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                GHC.Types.Int))
                                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   i `cast`
                                   (Data.Array.Accelerate.Smart.Exp
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                lvl28))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N),
                    (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       a24
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.$WIndexNil
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                   (Data.Array.Accelerate.Smart.IndexHead
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           Data.Array.Accelerate.Array.Sugar.Z)
                                      Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Smart.IndexTail
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Seq
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Data.Array.Accelerate.Lift.Plain
                                              (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                      GHC.Types.Int))
                                         @ GHC.Types.Int
                                         Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Slice
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))))_R
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         i `cast`
                                         (Data.Array.Accelerate.Smart.Exp
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))
                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                          <GHC.Types.Int>_N)))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                   lvl27))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)))
                             (Data.Array.Accelerate.Smart.IndexHead
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Int
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int))
                                Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                i `cast`
                                (Data.Array.Accelerate.Smart.Exp
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N),
                    (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       a24
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)
                                                                           (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.$WIndexNil
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                   (Data.Array.Accelerate.Smart.IndexHead
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           Data.Array.Accelerate.Array.Sugar.Z)
                                      Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Smart.IndexTail
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Seq
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Data.Array.Accelerate.Lift.Plain
                                              (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                      GHC.Types.Int))
                                         @ GHC.Types.Int
                                         Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Slice
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))))_R
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         i `cast`
                                         (Data.Array.Accelerate.Smart.Exp
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))
                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                          <GHC.Types.Int>_N)))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                   lvl27))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)))
                             (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        (Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                GHC.Types.Int))
                                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   i `cast`
                                   (Data.Array.Accelerate.Smart.Exp
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                lvl28))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N) #)) -}
c747cc3f2673abcedcac27cef893e95c
  $wsplitHoriz ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (# Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double),
          Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 (# (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       (let {
                          a20 :: Data.Array.Accelerate.Smart.PreExp
                                   Data.Array.Accelerate.Smart.Acc
                                   Data.Array.Accelerate.Smart.Seq
                                   Data.Array.Accelerate.Smart.Exp
                                   Data.Array.Accelerate.Array.Sugar.DIM2
                          = Data.Array.Accelerate.Smart.Shape
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ Data.Array.Accelerate.Array.Sugar.DIM2
                              @ GHC.Types.Double
                              Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                              Data.Array.Accelerate.Array.Sugar.$fEltDouble
                              w
                        } in
                        (Data.Array.Accelerate.Smart.IndexCons
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int))
                           @ GHC.Types.Int
                           @~ <Data.Array.Accelerate.Lift.Plain
                                 (Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                           Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           (Data.Array.Accelerate.Smart.IndexCons
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z)
                              @ GHC.Types.Int
                              @~ <Data.Array.Accelerate.Lift.Plain
                                    Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                              Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              (Data.Array.Accelerate.Smart.$WIndexNil
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                              (Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                                 (Data.Array.Accelerate.Smart.IndexHead
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Seq
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ GHC.Types.Int
                                    @ (Data.Array.Accelerate.Lift.Plain
                                         Data.Array.Accelerate.Array.Sugar.Z)
                                    Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                      `cast`
                                    (Data.Array.Accelerate.Array.Sugar.Slice
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                    (Data.Array.Accelerate.Smart.IndexTail
                                       @ Data.Array.Accelerate.Smart.Acc
                                       @ Data.Array.Accelerate.Smart.Seq
                                       @ Data.Array.Accelerate.Smart.Exp
                                       @ (Data.Array.Accelerate.Lift.Plain
                                            (Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                    GHC.Types.Int))
                                       @ GHC.Types.Int
                                       Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                         `cast`
                                       (Data.Array.Accelerate.Array.Sugar.Slice
                                          (Trans
                                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                         <GHC.Types.Int>_N))))_R
                                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                                       a20
                                         `cast`
                                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                     <GHC.Types.Int>_N))
                                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N)))
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                 MMultDivConq.splitFour1
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)))
                           (Data.Array.Accelerate.Smart.IndexHead
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ GHC.Types.Int
                              @ (Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int))
                              Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Trans
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                <GHC.Types.Int>_N))))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              a20
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                            <GHC.Types.Int>_N))
                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                 <GHC.Types.Int>_N)
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          i)
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N),
                    let {
                      lvl27 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                      = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                          (Data.Array.Accelerate.Smart.IndexHead
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Int
                             @ (Data.Array.Accelerate.Lift.Plain
                                  Data.Array.Accelerate.Array.Sugar.Z)
                             Data.Array.Accelerate.Array.Sugar.$fSliceZ
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexTail
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int))
                                @ GHC.Types.Int
                                Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.Shape
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ Data.Array.Accelerate.Array.Sugar.DIM2
                                   @ GHC.Types.Double
                                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                   w)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                              <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                              <GHC.Types.Int>_N))
                                                                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                 <GHC.Types.Int>_N)))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                          MMultDivConq.splitFour1
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                    } in
                    (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       (let {
                          a20 :: Data.Array.Accelerate.Smart.PreExp
                                   Data.Array.Accelerate.Smart.Acc
                                   Data.Array.Accelerate.Smart.Seq
                                   Data.Array.Accelerate.Smart.Exp
                                   Data.Array.Accelerate.Array.Sugar.DIM2
                          = Data.Array.Accelerate.Smart.Shape
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ Data.Array.Accelerate.Array.Sugar.DIM2
                              @ GHC.Types.Double
                              Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                              Data.Array.Accelerate.Array.Sugar.$fEltDouble
                              w
                        } in
                        (Data.Array.Accelerate.Smart.IndexCons
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int))
                           @ GHC.Types.Int
                           @~ <Data.Array.Accelerate.Lift.Plain
                                 (Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                           Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           (Data.Array.Accelerate.Smart.IndexCons
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z)
                              @ GHC.Types.Int
                              @~ <Data.Array.Accelerate.Lift.Plain
                                    Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                              Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              (Data.Array.Accelerate.Smart.$WIndexNil
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                              (Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                                 (Data.Array.Accelerate.Smart.IndexHead
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Seq
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ GHC.Types.Int
                                    @ (Data.Array.Accelerate.Lift.Plain
                                         Data.Array.Accelerate.Array.Sugar.Z)
                                    Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                      `cast`
                                    (Data.Array.Accelerate.Array.Sugar.Slice
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                    (Data.Array.Accelerate.Smart.IndexTail
                                       @ Data.Array.Accelerate.Smart.Acc
                                       @ Data.Array.Accelerate.Smart.Seq
                                       @ Data.Array.Accelerate.Smart.Exp
                                       @ (Data.Array.Accelerate.Lift.Plain
                                            (Data.Array.Accelerate.Array.Sugar.Z
                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                    GHC.Types.Int))
                                       @ GHC.Types.Int
                                       Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                         `cast`
                                       (Data.Array.Accelerate.Array.Sugar.Slice
                                          (Trans
                                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                         <GHC.Types.Int>_N))))_R
                                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                                       a20
                                         `cast`
                                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                     <GHC.Types.Int>_N))
                                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N)))
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                 MMultDivConq.splitFour1
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)))
                           (Data.Array.Accelerate.Smart.IndexHead
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ GHC.Types.Int
                              @ (Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int))
                              Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Trans
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                <GHC.Types.Int>_N))))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              a20
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                            <GHC.Types.Int>_N))
                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                 <GHC.Types.Int>_N)
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.$WIndexNil
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                   (Data.Array.Accelerate.Smart.IndexHead
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           Data.Array.Accelerate.Array.Sugar.Z)
                                      Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Smart.IndexTail
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Seq
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Data.Array.Accelerate.Lift.Plain
                                              (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                      GHC.Types.Int))
                                         @ GHC.Types.Int
                                         Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Slice
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))))_R
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         i `cast`
                                         (Data.Array.Accelerate.Smart.Exp
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))
                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                          <GHC.Types.Int>_N)))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                   lvl27))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)))
                             (Data.Array.Accelerate.Smart.IndexHead
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Int
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int))
                                Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                i `cast`
                                (Data.Array.Accelerate.Smart.Exp
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N) #)) -}
2215469b01111e2d74eeec8099f8dbef
  $wsplitVert ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (# Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double),
          Data.Array.Accelerate.Smart.Acc
            (MMultDivConq.Matrix GHC.Types.Double) #)
  {- Arity: 1, Strictness: <L,U>, Inline: [0],
     Unfolding: (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 (# (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       (let {
                          a20 :: Data.Array.Accelerate.Smart.PreExp
                                   Data.Array.Accelerate.Smart.Acc
                                   Data.Array.Accelerate.Smart.Seq
                                   Data.Array.Accelerate.Smart.Exp
                                   Data.Array.Accelerate.Array.Sugar.DIM2
                          = Data.Array.Accelerate.Smart.Shape
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ Data.Array.Accelerate.Array.Sugar.DIM2
                              @ GHC.Types.Double
                              Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                              Data.Array.Accelerate.Array.Sugar.$fEltDouble
                              w
                        } in
                        (Data.Array.Accelerate.Smart.IndexCons
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int))
                           @ GHC.Types.Int
                           @~ <Data.Array.Accelerate.Lift.Plain
                                 (Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                           Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           (Data.Array.Accelerate.Smart.IndexCons
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z)
                              @ GHC.Types.Int
                              @~ <Data.Array.Accelerate.Lift.Plain
                                    Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                              Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              (Data.Array.Accelerate.Smart.$WIndexNil
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                              (Data.Array.Accelerate.Smart.IndexHead
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Types.Int
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z)
                                 Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 (Data.Array.Accelerate.Smart.IndexTail
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Seq
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ (Data.Array.Accelerate.Lift.Plain
                                         (Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                 GHC.Types.Int))
                                    @ GHC.Types.Int
                                    Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                      `cast`
                                    (Data.Array.Accelerate.Array.Sugar.Slice
                                       (Trans
                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                      <GHC.Types.Int>_N))))_R
                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                    a20
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                  <GHC.Types.Int>_N))
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                     <GHC.Types.Int>_N)))
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)))
                           (Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                              (Data.Array.Accelerate.Smart.IndexHead
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Types.Int
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                              GHC.Types.Int))
                                 Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <GHC.Types.Int>_N))))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 a20
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                               <GHC.Types.Int>_N))
                                                                                 Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                              MMultDivConq.splitFour1
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                 <GHC.Types.Int>_N)
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          i)
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N),
                    let {
                      lvl27 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                      = Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                          (Data.Array.Accelerate.Smart.IndexHead
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ GHC.Types.Int
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.Shape
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ Data.Array.Accelerate.Array.Sugar.DIM2
                                @ GHC.Types.Double
                                Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                w)
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                           <GHC.Types.Int>_N))
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                          MMultDivConq.splitFour1
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                    } in
                    (Data.Array.Accelerate.Smart.Generate
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       (let {
                          a20 :: Data.Array.Accelerate.Smart.PreExp
                                   Data.Array.Accelerate.Smart.Acc
                                   Data.Array.Accelerate.Smart.Seq
                                   Data.Array.Accelerate.Smart.Exp
                                   Data.Array.Accelerate.Array.Sugar.DIM2
                          = Data.Array.Accelerate.Smart.Shape
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ Data.Array.Accelerate.Array.Sugar.DIM2
                              @ GHC.Types.Double
                              Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                              Data.Array.Accelerate.Array.Sugar.$fEltDouble
                              w
                        } in
                        (Data.Array.Accelerate.Smart.IndexCons
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int))
                           @ GHC.Types.Int
                           @~ <Data.Array.Accelerate.Lift.Plain
                                 (Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                           Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           (Data.Array.Accelerate.Smart.IndexCons
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              @ (Data.Array.Accelerate.Lift.Plain
                                   Data.Array.Accelerate.Array.Sugar.Z)
                              @ GHC.Types.Int
                              @~ <Data.Array.Accelerate.Lift.Plain
                                    Data.Array.Accelerate.Array.Sugar.Z
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                              Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              (Data.Array.Accelerate.Smart.$WIndexNil
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                              (Data.Array.Accelerate.Smart.IndexHead
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Types.Int
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z)
                                 Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 (Data.Array.Accelerate.Smart.IndexTail
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Seq
                                    @ Data.Array.Accelerate.Smart.Exp
                                    @ (Data.Array.Accelerate.Lift.Plain
                                         (Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                 GHC.Types.Int))
                                    @ GHC.Types.Int
                                    Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                      `cast`
                                    (Data.Array.Accelerate.Array.Sugar.Slice
                                       (Trans
                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                      <GHC.Types.Int>_N))))_R
                                    Data.Array.Accelerate.Array.Sugar.$fEltInt
                                    a20
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                  <GHC.Types.Int>_N))
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                     <GHC.Types.Int>_N)))
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)))
                           (Data.Array.Accelerate.Classes.Integral.$fIntegralExp16_$cdiv
                              (Data.Array.Accelerate.Smart.IndexHead
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Types.Int
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                              GHC.Types.Int))
                                 Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <GHC.Types.Int>_N))))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 a20
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                               <GHC.Types.Int>_N))
                                                                                 Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                              MMultDivConq.splitFour1
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                 <GHC.Types.Int>_N)
                                                                            (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                       (\ i :: Data.Array.Accelerate.Smart.Exp
                                 Data.Array.Accelerate.Array.Sugar.DIM2 ->
                        Data.Array.Accelerate.Smart.Index
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Double
                          @ Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                          Data.Array.Accelerate.Array.Sugar.$fEltDouble
                          w
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  (Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ GHC.Types.Int
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltInt
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.$WIndexNil
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z)
                                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.IndexTail
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           (Data.Array.Accelerate.Array.Sugar.Z
                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                   GHC.Types.Int))
                                      @ GHC.Types.Int
                                      Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      i `cast`
                                      (Data.Array.Accelerate.Smart.Exp
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                       <GHC.Types.Int>_N)))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)))
                             (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        (Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                GHC.Types.Int))
                                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   i `cast`
                                   (Data.Array.Accelerate.Smart.Exp
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                lvl27))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (<Data.Array.Accelerate.Smart.Exp
                           Data.Array.Accelerate.Array.Sugar.DIM2>_R
                        ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      GHC.Types.Double>_N) #)) -}
1f7868fd4b801d4d8f2b35bf60ae3731
  $wtoMatrix ::
    GHC.Prim.Int#
    -> [GHC.Types.Double] -> MMultDivConq.Matrix GHC.Types.Double
  {- Arity: 2, Strictness: <L,U><L,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int# w :: [GHC.Types.Double] ->
                 let {
                   ipv :: GHC.Prim.Int# = GHC.Prim.*# ww ww
                 } in
                 case GHC.IO.unsafeDupablePerformIO
                        @ (Data.Array.Accelerate.Array.Data.MutableArrayData
                             (Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Double),
                           Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Double)
                        (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                         case GHC.Prim.noDuplicate# s of s' { DEFAULT ->
                         case (GHC.IO.unsafeDupableInterleaveIO
                                 @ (GHC.ForeignPtr.ForeignPtr GHC.Types.Double)
                                 (\ s1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                  case GHC.Prim.noDuplicate# s1 of s'1 { DEFAULT ->
                                  case Data.Array.Accelerate.Array.Data.__mallocForeignPtrBytes
                                         `cast`
                                       (GHC.IORef.NTCo:IORef[0] <GHC.Types.Int
                                                                 -> GHC.Types.IO
                                                                      (GHC.ForeignPtr.ForeignPtr
                                                                         GHC.Word.Word8)>_N) of wild { GHC.STRef.STRef var# ->
                                  case GHC.Prim.readMutVar#
                                         @ GHC.Prim.RealWorld
                                         @ (GHC.Types.Int
                                            -> GHC.Types.IO
                                                 (GHC.ForeignPtr.ForeignPtr GHC.Word.Word8))
                                         var#
                                         s'1 of ds1 { (#,#) ipv1 ipv2 ->
                                  case (ipv2 (GHC.Types.I# (GHC.Prim.*# ipv 8)))
                                         `cast`
                                       (GHC.Types.NTCo:IO[0]
                                            <GHC.ForeignPtr.ForeignPtr GHC.Word.Word8>_R)
                                         ipv1 of ds2 { (#,#) ipv3 ipv4 ->
                                  (# ipv3,
                                     ipv4
                                       `cast`
                                     (GHC.ForeignPtr.ForeignPtr
                                        (UnivCo opt_phantom phantom GHC.Word.Word8 GHC.Types.Double))_R #) } } } })
                                   `cast`
                                 (Sym (GHC.Types.NTCo:IO[0]
                                           <GHC.ForeignPtr.ForeignPtr GHC.Types.Double>_R)))
                                `cast`
                              (GHC.Types.NTCo:IO[0]
                                   <GHC.ForeignPtr.ForeignPtr GHC.Types.Double>_R)
                                s' of ds1 { (#,#) ipv1 ipv2 ->
                         case GHC.Prim.newByteArray#
                                @ GHC.Prim.RealWorld
                                0
                                ipv1 of ds { (#,#) ipv3 ipv4 ->
                         case GHC.Prim.newMutVar#
                                @ [GHC.Types.IO ()]
                                @ GHC.Prim.RealWorld
                                (GHC.Types.[] @ (GHC.Types.IO ()))
                                ipv3 of ds2 { (#,#) ipv5 ipv6 ->
                         case GHC.Prim.mkWeak#
                                @ (GHC.Prim.MutVar# GHC.Prim.RealWorld [GHC.Types.IO ()])
                                @ (GHC.IORef.IORef [GHC.Types.IO ()])
                                @ (GHC.Types.IO ())
                                ipv6
                                (GHC.STRef.STRef @ GHC.Prim.RealWorld @ [GHC.Types.IO ()] ipv6)
                                  `cast`
                                (Sym (GHC.IORef.NTCo:IORef[0]) <[GHC.Types.IO ()]>_N)
                                (\ w1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                                 Data.Array.Accelerate.Lifetime.$wa ipv6 w1)
                                  `cast`
                                (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                                ipv5 of ds3 { (#,#) ipv7 ipv8 ->
                         let {
                           lvl27 :: GHC.STRef.STRef GHC.Prim.RealWorld [GHC.Types.IO ()]
                           = GHC.STRef.STRef @ GHC.Prim.RealWorld @ [GHC.Types.IO ()] ipv6
                         } in
                         letrec {
                           $wa5 :: GHC.Prim.Int#
                                   -> [GHC.Types.Double]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                             {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0] -}
                           = \ ww1 :: GHC.Prim.Int#
                               w1 :: [GHC.Types.Double]
                               w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# ww1 ipv) of wild {
                               GHC.Types.False
                               -> case w1 of wild1 {
                                    []
                                    -> case MMultDivConq.toMatrix1
                                       ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                       of {}
                                    : v vs
                                    -> case ipv2 of wild2 { GHC.ForeignPtr.ForeignPtr fo ds4 ->
                                       case v of wild3 { GHC.Types.D# x ->
                                       case GHC.Prim.writeDoubleOffAddr#
                                              @ GHC.Prim.RealWorld
                                              fo
                                              ww1
                                              x
                                              w2 of s2 { DEFAULT ->
                                       case GHC.Prim.touch#
                                              @ GHC.ForeignPtr.ForeignPtrContents
                                              ds4
                                              s2 of s'1 { DEFAULT ->
                                       case GHC.Prim.touch#
                                              @ (GHC.IORef.IORef [GHC.Types.IO ()])
                                              lvl27
                                                `cast`
                                              (Sym (GHC.IORef.NTCo:IORef[0]) <[GHC.Types.IO ()]>_N)
                                              s'1 of s'2 { DEFAULT ->
                                       $wa5 (GHC.Prim.+# ww1 1) vs s'2 } } } } } }
                               GHC.Types.True -> (# w2, GHC.Tuple.() #) }
                         } in
                         case $wa5 0 w ipv7 of ds4 { (#,#) ipv9 ipv10 ->
                         (# ipv9,
                            ((Data.Array.Accelerate.Array.Data.AD_Double
                                @ Data.Array.Accelerate.Array.Unique.UniqueArray
                                (Data.Array.Accelerate.Array.Unique.UniqueArray
                                   @ GHC.Types.Double
                                   (GHC.Prim.addr2Int#
                                      ipv4
                                        `cast`
                                      (UnivCo mkUnsafeCo representational (GHC.Prim.MutableByteArray#
                                                                             GHC.Prim.RealWorld) GHC.Prim.Addr#))
                                   ipv4
                                   ipv6
                                   ipv8
                                   ipv2))
                               `cast`
                             (Trans
                                  (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                                 <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)))
                                  (Data.Array.Accelerate.Array.Data.GArrayData
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                                     (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0])))_R),
                             GHC.Err.undefined
                               @ (Data.Array.Accelerate.Array.Sugar.EltRepr
                                    GHC.Types.Double)) #) } } } } } })
                          `cast`
                        (Sym (GHC.Types.NTCo:IO[0]
                                  <(Data.Array.Accelerate.Array.Data.MutableArrayData
                                      (Data.Array.Accelerate.Array.Sugar.EltRepr GHC.Types.Double),
                                    Data.Array.Accelerate.Array.Sugar.EltRepr
                                      GHC.Types.Double)>_R)) of wild { (,) adata ds6 ->
                 case adata
                        `cast`
                      (Trans
                           (Data.Array.Accelerate.Array.Data.GArrayData
                              <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                              (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0]))_R
                           (Sub (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                     <Data.Array.Accelerate.Array.Unique.UniqueArray>_N))) of nt { Data.Array.Accelerate.Array.Data.AD_Double ipv1 ->
                 let {
                   wild3 :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 Data.Array.Accelerate.Array.Sugar.Array
                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   ((GHC.Tuple.()
                       `cast`
                     (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprZ[0]))),
                     wild3
                       `cast`
                     (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                      `cast`
                    (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                   <Data.Array.Accelerate.Array.Sugar.Z>_N <GHC.Types.Int>_N))),
                    wild3
                      `cast`
                    (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprInt[0]))))
                     `cast`
                   (Sub (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltRepr:.[0]
                                  <Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  <GHC.Types.Int>_N)))
                   nt
                     `cast`
                   (Trans
                        (Sub (Sym (Data.Array.Accelerate.Array.Data.TFCo:R:GArrayDatabaDouble[0]
                                       <Data.Array.Accelerate.Array.Unique.UniqueArray>_N)))
                        (Data.Array.Accelerate.Array.Data.GArrayData
                           <Data.Array.Accelerate.Array.Unique.UniqueArray>_N
                           (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:EltReprDouble[0])))_R) } }) -}
84751664ebb71cedd8fb1a7d96647c57
  type Matrix a =
    Data.Array.Accelerate.Array.Sugar.Array
      Data.Array.Accelerate.Array.Sugar.DIM2 a
e4ed339084672821a2cbb0f98d61467d
  add ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.add1
                  `cast`
                (<Data.Array.Accelerate.Smart.Acc
                    (Data.Array.Accelerate.Array.Sugar.Array
                       Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)>_R
                 ->_R <Data.Array.Accelerate.Smart.Acc
                         (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                       Data.Array.Accelerate.Array.Sugar.DIM2
                                                                       GHC.Types.Double>_N) -}
b9ca7ba98c9589c0312af436b797dc8d
  add1 ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.PreAcc
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Data.Array.Accelerate.Smart.Acc
                             (Data.Array.Accelerate.Array.Sugar.Array
                                Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                   eta2 :: Data.Array.Accelerate.Smart.Acc
                             (Data.Array.Accelerate.Array.Sugar.Array
                                Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.ZipWith
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                   @ Data.Array.Accelerate.Array.Sugar.DIM2
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_$c+
                   eta1
                   eta2) -}
83d65df65d7ab9fb7b341d10ddc77179
  concatFour ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ a20 :: Data.Array.Accelerate.Smart.Acc
                            (MMultDivConq.Matrix GHC.Types.Double)
                   b :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double)
                   c :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double)
                   d :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 MMultDivConq.concatVert
                   (MMultDivConq.concatHoriz a20 c)
                   (MMultDivConq.concatHoriz b d)) -}
515aaa780ff2ea1b0479a6e116d105da
  concatHoriz ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ a20 :: Data.Array.Accelerate.Smart.Acc
                            (MMultDivConq.Matrix GHC.Types.Double)
                   b :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 let {
                   a21 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            Data.Array.Accelerate.Array.Sugar.DIM2
                   = Data.Array.Accelerate.Smart.Shape
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ Data.Array.Accelerate.Array.Sugar.DIM2
                       @ GHC.Types.Double
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                       Data.Array.Accelerate.Array.Sugar.$fEltDouble
                       a20
                 } in
                 let {
                   a22 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            (Data.Array.Accelerate.Lift.Plain
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                       GHC.Types.Int))
                   = Data.Array.Accelerate.Smart.IndexTail
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Lift.Plain
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                    GHC.Types.Int))
                       @ GHC.Types.Int
                       Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Slice
                          (Trans
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                         <GHC.Types.Int>_N))))_R
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       a21
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                     <GHC.Types.Int>_N))
                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                 } in
                 let {
                   a23 :: Data.Array.Accelerate.Smart.PreExp
                            Data.Array.Accelerate.Smart.Acc
                            Data.Array.Accelerate.Smart.Seq
                            Data.Array.Accelerate.Smart.Exp
                            GHC.Types.Int
                   = Data.Array.Accelerate.Smart.IndexHead
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ GHC.Types.Int
                       @ (Data.Array.Accelerate.Lift.Plain
                            Data.Array.Accelerate.Array.Sugar.Z)
                       Data.Array.Accelerate.Array.Sugar.$fSliceZ
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Slice
                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       a22
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                           <GHC.Types.Int>_N))
                 } in
                 (Data.Array.Accelerate.Smart.Generate
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Seq
                    @ Data.Array.Accelerate.Smart.Exp
                    @ (Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                    @ Data.Array.Accelerate.Array.Sugar.DIM2
                    @ GHC.Types.Double
                    @~ <Data.Array.Accelerate.Array.Sugar.Array
                          Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                    Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                    Data.Array.Accelerate.Array.Sugar.$fEltDouble
                    (Data.Array.Accelerate.Smart.IndexCons
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Lift.Plain
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                    GHC.Types.Int)
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       @ (Data.Array.Accelerate.Lift.Plain
                            (Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                    GHC.Types.Int))
                       @ GHC.Types.Int
                       @~ <Data.Array.Accelerate.Lift.Plain
                             (Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                     GHC.Types.Int)
                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                         `cast`
                       (Data.Array.Accelerate.Array.Sugar.Slice
                          (Trans
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                               (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                         <GHC.Types.Int>_N))))_R
                       Data.Array.Accelerate.Array.Sugar.$fEltInt
                       (Data.Array.Accelerate.Smart.IndexCons
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Data.Array.Accelerate.Lift.Plain
                               Data.Array.Accelerate.Array.Sugar.Z
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                          @ (Data.Array.Accelerate.Lift.Plain
                               Data.Array.Accelerate.Array.Sugar.Z)
                          @ GHC.Types.Int
                          @~ <Data.Array.Accelerate.Lift.Plain
                                Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                          Data.Array.Accelerate.Array.Sugar.$fSliceZ
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          (Data.Array.Accelerate.Smart.$WIndexNil
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                          (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c+
                             a23
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                             (Data.Array.Accelerate.Smart.IndexHead
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ GHC.Types.Int
                                @ (Data.Array.Accelerate.Lift.Plain
                                     Data.Array.Accelerate.Array.Sugar.Z)
                                Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.IndexTail
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        (Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                GHC.Types.Int))
                                   @ GHC.Types.Int
                                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.Shape
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Data.Array.Accelerate.Array.Sugar.DIM2
                                      @ GHC.Types.Double
                                      Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                      b)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                 <GHC.Types.Int>_N))
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                <GHC.Types.Int>_N)))
                       (Data.Array.Accelerate.Smart.IndexHead
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ GHC.Types.Int
                          @ (Data.Array.Accelerate.Lift.Plain
                               (Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                       GHC.Types.Int))
                          Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                            `cast`
                          (Data.Array.Accelerate.Array.Sugar.Slice
                             (Trans
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                  (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                            <Data.Array.Accelerate.Array.Sugar.Z>_N
                                            <GHC.Types.Int>_N))))_R
                          Data.Array.Accelerate.Array.Sugar.$fEltInt
                          a21
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N))
                                                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                        (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                             <GHC.Types.Int>_N)
                                                                        (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                    (\ i :: Data.Array.Accelerate.Smart.Exp
                              Data.Array.Accelerate.Array.Sugar.DIM2 ->
                     let {
                       a24 :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Seq
                                Data.Array.Accelerate.Smart.Exp
                                (Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int))
                       = Data.Array.Accelerate.Smart.IndexTail
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ (Data.Array.Accelerate.Lift.Plain
                                (Data.Array.Accelerate.Array.Sugar.Z
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                        GHC.Types.Int))
                           @ GHC.Types.Int
                           Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           i `cast`
                           (Data.Array.Accelerate.Smart.Exp
                              (Trans
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                   (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                             <Data.Array.Accelerate.Array.Sugar.Z>_N
                                             <GHC.Types.Int>_N))
                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R
                     } in
                     let {
                       a25 :: Data.Array.Accelerate.Smart.PreExp
                                Data.Array.Accelerate.Smart.Acc
                                Data.Array.Accelerate.Smart.Seq
                                Data.Array.Accelerate.Smart.Exp
                                GHC.Types.Int
                       = Data.Array.Accelerate.Smart.IndexHead
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ GHC.Types.Int
                           @ (Data.Array.Accelerate.Lift.Plain
                                Data.Array.Accelerate.Array.Sugar.Z)
                           Data.Array.Accelerate.Array.Sugar.$fSliceZ
                             `cast`
                           (Data.Array.Accelerate.Array.Sugar.Slice
                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                           Data.Array.Accelerate.Array.Sugar.$fEltInt
                           a24
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                               <GHC.Types.Int>_N))
                     } in
                     (Data.Array.Accelerate.Smart.Cond
                        @ Data.Array.Accelerate.Smart.Acc
                        @ Data.Array.Accelerate.Smart.Seq
                        @ Data.Array.Accelerate.Smart.Exp
                        @ GHC.Types.Double
                        Data.Array.Accelerate.Array.Sugar.$fEltDouble
                        (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c<*
                           a25
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                           a23
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                        (Data.Array.Accelerate.Smart.Index
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ GHC.Types.Double
                           @ Data.Array.Accelerate.Array.Sugar.DIM2
                           Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                           Data.Array.Accelerate.Array.Sugar.$fEltDouble
                           a20
                           i)
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N)
                        (Data.Array.Accelerate.Smart.Index
                           @ Data.Array.Accelerate.Smart.Acc
                           @ Data.Array.Accelerate.Smart.Seq
                           @ Data.Array.Accelerate.Smart.Exp
                           @ GHC.Types.Double
                           @ Data.Array.Accelerate.Array.Sugar.DIM2
                           Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                           Data.Array.Accelerate.Array.Sugar.$fEltDouble
                           b
                           (Data.Array.Accelerate.Smart.IndexCons
                              @ Data.Array.Accelerate.Smart.Acc
                              @ Data.Array.Accelerate.Smart.Seq
                              @ Data.Array.Accelerate.Smart.Exp
                              @ (Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              @ (Data.Array.Accelerate.Lift.Plain
                                   (Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int))
                              @ GHC.Types.Int
                              @~ <Data.Array.Accelerate.Lift.Plain
                                    (Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                            GHC.Types.Int)
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                              Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                `cast`
                              (Data.Array.Accelerate.Array.Sugar.Slice
                                 (Trans
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                <GHC.Types.Int>_N))))_R
                              Data.Array.Accelerate.Array.Sugar.$fEltInt
                              (Data.Array.Accelerate.Smart.IndexCons
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      Data.Array.Accelerate.Array.Sugar.Z)
                                 @ GHC.Types.Int
                                 @~ <Data.Array.Accelerate.Lift.Plain
                                       Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                 Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 (Data.Array.Accelerate.Smart.$WIndexNil
                                    @ Data.Array.Accelerate.Smart.Acc
                                    @ Data.Array.Accelerate.Smart.Seq
                                    @ Data.Array.Accelerate.Smart.Exp)
                                   `cast`
                                 (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                 (Data.Array.Accelerate.Classes.Num.$fNumExp20_$c-
                                    a25
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                                    a23
                                      `cast`
                                    (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)))
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                       <GHC.Types.Int>_N)))
                              (Data.Array.Accelerate.Smart.IndexHead
                                 @ Data.Array.Accelerate.Smart.Acc
                                 @ Data.Array.Accelerate.Smart.Seq
                                 @ Data.Array.Accelerate.Smart.Exp
                                 @ GHC.Types.Int
                                 @ (Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                              GHC.Types.Int))
                                 Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                   `cast`
                                 (Data.Array.Accelerate.Array.Sugar.Slice
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <GHC.Types.Int>_N))))_R
                                 Data.Array.Accelerate.Array.Sugar.$fEltInt
                                 i `cast`
                                 (Data.Array.Accelerate.Smart.Exp
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <GHC.Types.Int>_N))
                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)_R)
                                `cast`
                              (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                             `cast`
                           (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                               (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                    <GHC.Types.Int>_N)
                                                                               (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                          `cast`
                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N))
                       `cast`
                     (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N)))
                   `cast`
                 (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                   Data.Array.Accelerate.Array.Sugar.DIM2
                                                                   GHC.Types.Double>_N)) -}
55d44bbed703a96603e06f735b5bc7b2
  concatVert ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
  {- Unfolding: (Data.Array.Accelerate.Prelude.++
                   @ Data.Array.Accelerate.Array.Sugar.DIM1
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                   Data.Array.Accelerate.Array.Lifted.$fArraysVector'_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble) -}
69aa711e58615fb8edb48a0fd064a661
  divconq ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U> -}
30c239c80cf0e25390fa346d98d51586
  max' ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.max'1
                  `cast`
                (<Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R <Data.Array.Accelerate.Smart.Exp GHC.Types.Int>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N) -}
6cc1392a46f5a0959a6f108d69d44917
  max'1 ::
    Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.Exp GHC.Types.Int
    -> Data.Array.Accelerate.Smart.PreExp
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         GHC.Types.Int
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ a20 :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   b :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int
                   c :: Data.Array.Accelerate.Smart.Exp GHC.Types.Int ->
                 Data.Array.Accelerate.Smart.Cond
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>* a20 b)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Seq
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>* a20 c)
                      a20
                      c)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)
                   (Data.Array.Accelerate.Smart.Cond
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Seq
                      @ Data.Array.Accelerate.Smart.Exp
                      @ GHC.Types.Int
                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                      (Data.Array.Accelerate.Classes.Ord.$fOrdInt_$c>* b c)
                      b
                      c)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N)) -}
36ce6d898ae70a294f60e42f62b24312
  mmult ::
    Data.Array.Accelerate.Classes.Num.Num e =>
    Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)
    -> Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)
    -> Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)
  {- Arity: 1, Strictness: <L,U(1*U,1*U)>,
     Unfolding: (\ @ e tup :: Data.Array.Accelerate.Classes.Num.Num e ->
                 let {
                   $dElt :: Data.Array.Accelerate.Array.Sugar.Elt e
                   = case tup of wild { (,) tpl tpl1 -> tpl }
                 } in
                 let {
                   $dNum :: GHC.Num.Num (Data.Array.Accelerate.Smart.Exp e)
                   = case tup of wild { (,) tpl tpl1 -> tpl1 }
                 } in
                 let {
                   eta :: Data.Array.Accelerate.Smart.Exp e
                          -> Data.Array.Accelerate.Smart.Exp e
                          -> Data.Array.Accelerate.Smart.Exp e
                   = GHC.Num.+ @ (Data.Array.Accelerate.Smart.Exp e) $dNum
                 } in
                 let {
                   eta1 :: Data.Array.Accelerate.Smart.Exp e
                   = GHC.Num.fromInteger
                       @ (Data.Array.Accelerate.Smart.Exp e)
                       $dNum
                       MMultDivConq.mmult6
                 } in
                 let {
                   lvl27 :: Data.Array.Accelerate.Smart.Exp e
                            -> Data.Array.Accelerate.Smart.Exp e
                            -> Data.Array.Accelerate.Smart.Exp e
                   = GHC.Num.* @ (Data.Array.Accelerate.Smart.Exp e) $dNum
                 } in
                 (\ arr :: Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)
                    brr :: Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e) ->
                  Data.Array.Accelerate.Smart.Fold
                    @ Data.Array.Accelerate.Smart.Acc
                    @ Data.Array.Accelerate.Smart.Seq
                    @ Data.Array.Accelerate.Smart.Exp
                    @ (Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM2 e)
                    @ Data.Array.Accelerate.Array.Sugar.DIM2
                    @ e
                    @~ <Data.Array.Accelerate.Array.Sugar.Array
                          Data.Array.Accelerate.Array.Sugar.DIM2 e>_N
                    Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                    $dElt
                    eta
                    eta1
                    (Data.Array.Accelerate.Smart.ZipWith
                       @ Data.Array.Accelerate.Smart.Acc
                       @ Data.Array.Accelerate.Smart.Seq
                       @ Data.Array.Accelerate.Smart.Exp
                       @ (Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.DIM2
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            e)
                       @ (Data.Array.Accelerate.Array.Sugar.DIM2
                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                       @ e
                       @ e
                       @ e
                       @~ <Data.Array.Accelerate.Array.Sugar.Array
                             (Data.Array.Accelerate.Array.Sugar.DIM2
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             e>_N
                       Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                       $dElt
                       $dElt
                       $dElt
                       lvl27
                       (Data.Array.Accelerate.Smart.Replicate
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Data.Array.Accelerate.Array.Sugar.Array
                               (Data.Array.Accelerate.Array.Sugar.FullShape
                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                               e)
                          @ (((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          @ e
                          @~ <Data.Array.Accelerate.Array.Sugar.Array
                                (Data.Array.Accelerate.Array.Sugar.FullShape
                                   (((Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                e>_N
                          MMultDivConq.$s$fSlice:.0
                          $dElt
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int))
                             @ Data.Array.Accelerate.Array.Sugar.All
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                             MMultDivConq.$s$fSlice:.
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Trans
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                           Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                               <GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltAll
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                MMultDivConq.$s$fSlice:._$s$fSlice:.0
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                MMultDivConq.mmult3
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N)))
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        (Data.Array.Accelerate.Array.Sugar.Z
                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                GHC.Types.Int))
                                   Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Trans
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                            Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                           (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                     <GHC.Types.Int>_N))))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.Shape
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ Data.Array.Accelerate.Array.Sugar.DIM2
                                      @ e
                                      Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                      $dElt
                                      brr)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                 <GHC.Types.Int>_N))
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                                                                      <GHC.Types.Int>_N)))
                             MMultDivConq.mmult2
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                                                                   <GHC.Types.Int>_N)
                                                                              (Trans
                                                                                   (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                   (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N)
                          arr
                            `cast`
                          (Data.Array.Accelerate.Smart.Acc
                             (Data.Array.Accelerate.Array.Sugar.Array
                                (Trans
                                     (Trans
                                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                          (Trans
                                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                               (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                         <Data.Array.Accelerate.Array.Sugar.Z
                                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                     (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                               <(Data.Array.Accelerate.Array.Sugar.Z
                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))
                                <e>_N)_N)_R)
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                         (Trans
                                                                              (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                   <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)
                                                                              (Trans
                                                                                   (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)
                                                                                   (Trans
                                                                                        (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                             <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                        (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0]
                                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                                                                         <e>_N)_N)
                       (Data.Array.Accelerate.Smart.Replicate
                          @ Data.Array.Accelerate.Smart.Acc
                          @ Data.Array.Accelerate.Smart.Seq
                          @ Data.Array.Accelerate.Smart.Exp
                          @ (Data.Array.Accelerate.Array.Sugar.Array
                               (Data.Array.Accelerate.Array.Sugar.FullShape
                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                               e)
                          @ (((Data.Array.Accelerate.Array.Sugar.Z
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                          @ e
                          @~ <Data.Array.Accelerate.Array.Sugar.Array
                                (Data.Array.Accelerate.Array.Sugar.FullShape
                                   (((Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                e>_N
                          Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fSlice:.1
                          $dElt
                          (Data.Array.Accelerate.Smart.IndexCons
                             @ Data.Array.Accelerate.Smart.Acc
                             @ Data.Array.Accelerate.Smart.Seq
                             @ Data.Array.Accelerate.Smart.Exp
                             @ (Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             @ (Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                             @ Data.Array.Accelerate.Array.Sugar.All
                             @~ <Data.Array.Accelerate.Lift.Plain
                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                            GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                             Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fSlice:.0
                               `cast`
                             (Data.Array.Accelerate.Array.Sugar.Slice
                                (Trans
                                     (Trans
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                    <GHC.Types.Int>_N))
                                      Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                       GHC.Types.Int>_N))))_R
                             Data.Array.Accelerate.Array.Sugar.$fEltAll
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int))
                                @ Data.Array.Accelerate.Array.Sugar.All
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                              GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltAll
                                (Data.Array.Accelerate.Smart.IndexCons
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z)
                                   @ GHC.Types.Int
                                   @~ <Data.Array.Accelerate.Lift.Plain
                                         Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.$WIndexNil
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                   (Data.Array.Accelerate.Smart.IndexHead
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           Data.Array.Accelerate.Array.Sugar.Z)
                                      Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      (Data.Array.Accelerate.Smart.IndexTail
                                         @ Data.Array.Accelerate.Smart.Acc
                                         @ Data.Array.Accelerate.Smart.Seq
                                         @ Data.Array.Accelerate.Smart.Exp
                                         @ (Data.Array.Accelerate.Lift.Plain
                                              (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                      GHC.Types.Int))
                                         @ GHC.Types.Int
                                         Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                           `cast`
                                         (Data.Array.Accelerate.Array.Sugar.Slice
                                            (Trans
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                 (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                           <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                           <GHC.Types.Int>_N))))_R
                                         Data.Array.Accelerate.Array.Sugar.$fEltInt
                                         (Data.Array.Accelerate.Smart.Shape
                                            @ Data.Array.Accelerate.Smart.Acc
                                            @ Data.Array.Accelerate.Smart.Seq
                                            @ Data.Array.Accelerate.Smart.Exp
                                            @ Data.Array.Accelerate.Array.Sugar.DIM2
                                            @ e
                                            Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                            $dElt
                                            arr)
                                           `cast`
                                         (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                             (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                             (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                       <GHC.Types.Int>_N))
                                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                          <GHC.Types.Int>_N)))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                         <GHC.Types.Int>_N)))
                                MMultDivConq.mmult2
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                                                              GHC.Types.Int>_N)))
                             MMultDivConq.mmult2
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                              (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                   <Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                                                           GHC.Types.Int>_N)
                                                                              (Trans
                                                                                   (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N)
                                                                                   (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                               Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                                                          Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N)
                          (Data.Array.Accelerate.Prelude.transpose1 @ e $dElt brr)
                            `cast`
                          (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                            (Trans
                                                                                 (Trans
                                                                                      (Trans
                                                                                           (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0]))
                                                                                           (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                                                                     <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                      (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                                                                <Data.Array.Accelerate.Array.Sugar.Z
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                 (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                                                           <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                                                                            <e>_N)_N))
                         `cast`
                       (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                         (Trans
                                                                              (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                   <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)
                                                                              (Trans
                                                                                   (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)
                                                                                   (Trans
                                                                                        (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                                                                             <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                        (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0]
                                                                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                    Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                                                                         <e>_N)_N))
                      `cast`
                    (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                      (Data.Array.Accelerate.Array.Sugar.DIM2
                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                      e>_N))
                   `cast`
                 (<Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)>_R
                  ->_R <Data.Array.Accelerate.Smart.Acc (MMultDivConq.Matrix e)>_R
                  ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                        Data.Array.Accelerate.Array.Sugar.DIM2
                                                                        e>_N)) -}
32e15e52316b49e516ed3c1b56ec666f
  mmult1 ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.PreAcc
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ arr :: Data.Array.Accelerate.Smart.Acc
                            (MMultDivConq.Matrix GHC.Types.Double)
                   brr :: Data.Array.Accelerate.Smart.Acc
                            (MMultDivConq.Matrix GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.Fold
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                   @ Data.Array.Accelerate.Array.Sugar.DIM2
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_$c+
                   MMultDivConq.mmult4
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Double>_N)
                   (Data.Array.Accelerate.Smart.ZipWith
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Seq
                      @ Data.Array.Accelerate.Smart.Exp
                      @ (Data.Array.Accelerate.Array.Sugar.Array
                           (Data.Array.Accelerate.Array.Sugar.DIM2
                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                           GHC.Types.Double)
                      @ (Data.Array.Accelerate.Array.Sugar.DIM2
                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                      @ GHC.Types.Double
                      @ GHC.Types.Double
                      @ GHC.Types.Double
                      @~ <Data.Array.Accelerate.Array.Sugar.Array
                            (Data.Array.Accelerate.Array.Sugar.DIM2
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            GHC.Types.Double>_N
                      Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.1
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Array.Sugar.$fEltDouble
                      Data.Array.Accelerate.Classes.Num.$fNumExp1_$c*
                      (Data.Array.Accelerate.Smart.Replicate
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Seq
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Data.Array.Accelerate.Array.Sugar.Array
                              (Data.Array.Accelerate.Array.Sugar.FullShape
                                 (((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                              GHC.Types.Double)
                         @ (((Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                         @ GHC.Types.Double
                         @~ <Data.Array.Accelerate.Array.Sugar.Array
                               (Data.Array.Accelerate.Array.Sugar.FullShape
                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                               GHC.Types.Double>_N
                         MMultDivConq.$s$fSlice:.0
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Smart.IndexCons
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Seq
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Data.Array.Accelerate.Lift.Plain
                                 ((Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                            @ (Data.Array.Accelerate.Lift.Plain
                                 ((Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                         GHC.Types.Int))
                            @ Data.Array.Accelerate.Array.Sugar.All
                            @~ <Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                            MMultDivConq.$s$fSlice:.
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Slice
                               (Trans
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                              <GHC.Types.Int>_N))))_R
                            Data.Array.Accelerate.Array.Sugar.$fEltAll
                            (Data.Array.Accelerate.Smart.IndexCons
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Seq
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (Data.Array.Accelerate.Lift.Plain
                                    (Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                               @ (Data.Array.Accelerate.Lift.Plain
                                    (Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                               @ GHC.Types.Int
                               @~ <Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                               MMultDivConq.$s$fSlice:._$s$fSlice:.0
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Slice
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                        Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N))))_R
                               Data.Array.Accelerate.Array.Sugar.$fEltInt
                               MMultDivConq.mmult3
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N)))
                               (Data.Array.Accelerate.Smart.IndexHead
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Seq
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ GHC.Types.Int
                                  @ (Data.Array.Accelerate.Lift.Plain
                                       (Data.Array.Accelerate.Array.Sugar.Z
                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                               GHC.Types.Int))
                                  Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Slice
                                     (Trans
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                    <GHC.Types.Int>_N))))_R
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  (Data.Array.Accelerate.Smart.Shape
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Seq
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ Data.Array.Accelerate.Array.Sugar.DIM2
                                     @ GHC.Types.Double
                                     Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                     Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                     brr)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                       Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                <GHC.Types.Int>_N))
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                     <Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                                                                     <GHC.Types.Int>_N)))
                            MMultDivConq.mmult2
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                             (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                  <Data.Array.Accelerate.Array.Sugar.Z
                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                                                                                  <GHC.Types.Int>_N)
                                                                             (Trans
                                                                                  (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                  (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                         Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N)
                         arr
                           `cast`
                         (Data.Array.Accelerate.Smart.Acc
                            (Data.Array.Accelerate.Array.Sugar.Array
                               (Trans
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                              (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z
                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                                     Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                    (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                              <(Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)))
                               <GHC.Types.Double>_N)_N)_R)
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                        (Trans
                                                                             (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                  <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)
                                                                             (Trans
                                                                                  (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z
                                                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)
                                                                                  (Trans
                                                                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                            <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0]
                                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                                                                        <GHC.Types.Double>_N)_N)
                      (Data.Array.Accelerate.Smart.Replicate
                         @ Data.Array.Accelerate.Smart.Acc
                         @ Data.Array.Accelerate.Smart.Seq
                         @ Data.Array.Accelerate.Smart.Exp
                         @ (Data.Array.Accelerate.Array.Sugar.Array
                              (Data.Array.Accelerate.Array.Sugar.FullShape
                                 (((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                              GHC.Types.Double)
                         @ (((Data.Array.Accelerate.Array.Sugar.Z
                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                         @ GHC.Types.Double
                         @~ <Data.Array.Accelerate.Array.Sugar.Array
                               (Data.Array.Accelerate.Array.Sugar.FullShape
                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                               GHC.Types.Double>_N
                         Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fSlice:.1
                         Data.Array.Accelerate.Array.Sugar.$fEltDouble
                         (Data.Array.Accelerate.Smart.IndexCons
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Seq
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Data.Array.Accelerate.Lift.Plain
                                 ((Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                            @ (Data.Array.Accelerate.Lift.Plain
                                 ((Data.Array.Accelerate.Array.Sugar.Z
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                          GHC.Types.Int)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                            @ Data.Array.Accelerate.Array.Sugar.All
                            @~ <Data.Array.Accelerate.Lift.Plain
                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                           GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                            Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fSlice:.0
                              `cast`
                            (Data.Array.Accelerate.Array.Sugar.Slice
                               (Trans
                                    (Trans
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                          Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                         (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                   <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                   <GHC.Types.Int>_N))
                                     Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                    (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                              <Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                      GHC.Types.Int>_N))))_R
                            Data.Array.Accelerate.Array.Sugar.$fEltAll
                            (Data.Array.Accelerate.Smart.IndexCons
                               @ Data.Array.Accelerate.Smart.Acc
                               @ Data.Array.Accelerate.Smart.Seq
                               @ Data.Array.Accelerate.Smart.Exp
                               @ (Data.Array.Accelerate.Lift.Plain
                                    (Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                            GHC.Types.Int)
                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                               @ (Data.Array.Accelerate.Lift.Plain
                                    (Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                            GHC.Types.Int))
                               @ Data.Array.Accelerate.Array.Sugar.All
                               @~ <Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                               Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                 `cast`
                               (Data.Array.Accelerate.Array.Sugar.Slice
                                  (Trans
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                       (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                 <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                 <GHC.Types.Int>_N))))_R
                               Data.Array.Accelerate.Array.Sugar.$fEltAll
                               (Data.Array.Accelerate.Smart.IndexCons
                                  @ Data.Array.Accelerate.Smart.Acc
                                  @ Data.Array.Accelerate.Smart.Seq
                                  @ Data.Array.Accelerate.Smart.Exp
                                  @ (Data.Array.Accelerate.Lift.Plain
                                       Data.Array.Accelerate.Array.Sugar.Z
                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                  @ (Data.Array.Accelerate.Lift.Plain
                                       Data.Array.Accelerate.Array.Sugar.Z)
                                  @ GHC.Types.Int
                                  @~ <Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                  Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                    `cast`
                                  (Data.Array.Accelerate.Array.Sugar.Slice
                                     (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                  Data.Array.Accelerate.Array.Sugar.$fEltInt
                                  (Data.Array.Accelerate.Smart.$WIndexNil
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Seq
                                     @ Data.Array.Accelerate.Smart.Exp)
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                  (Data.Array.Accelerate.Smart.IndexHead
                                     @ Data.Array.Accelerate.Smart.Acc
                                     @ Data.Array.Accelerate.Smart.Seq
                                     @ Data.Array.Accelerate.Smart.Exp
                                     @ GHC.Types.Int
                                     @ (Data.Array.Accelerate.Lift.Plain
                                          Data.Array.Accelerate.Array.Sugar.Z)
                                     Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                       `cast`
                                     (Data.Array.Accelerate.Array.Sugar.Slice
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                     Data.Array.Accelerate.Array.Sugar.$fEltInt
                                     (Data.Array.Accelerate.Smart.IndexTail
                                        @ Data.Array.Accelerate.Smart.Acc
                                        @ Data.Array.Accelerate.Smart.Seq
                                        @ Data.Array.Accelerate.Smart.Exp
                                        @ (Data.Array.Accelerate.Lift.Plain
                                             (Data.Array.Accelerate.Array.Sugar.Z
                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                     GHC.Types.Int))
                                        @ GHC.Types.Int
                                        Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                          `cast`
                                        (Data.Array.Accelerate.Array.Sugar.Slice
                                           (Trans
                                                (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                 Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                          <GHC.Types.Int>_N))))_R
                                        Data.Array.Accelerate.Array.Sugar.$fEltInt
                                        (Data.Array.Accelerate.Smart.Shape
                                           @ Data.Array.Accelerate.Smart.Acc
                                           @ Data.Array.Accelerate.Smart.Seq
                                           @ Data.Array.Accelerate.Smart.Exp
                                           @ Data.Array.Accelerate.Array.Sugar.DIM2
                                           @ GHC.Types.Double
                                           Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                           Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                           arr)
                                          `cast`
                                        (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                            (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                      <GHC.Types.Int>_N))
                                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                       `cast`
                                     (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                         <GHC.Types.Int>_N)))
                                    `cast`
                                  (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                        <GHC.Types.Int>_N)))
                               MMultDivConq.mmult2
                                 `cast`
                               (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                     <Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                                                             GHC.Types.Int>_N)))
                            MMultDivConq.mmult2
                              `cast`
                            (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N))
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                             (Data.Array.Accelerate.Lift.TFCo:R:Plain:.0[0]
                                                                                  <Data.Array.Accelerate.Array.Sugar.Z
                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                                                          GHC.Types.Int>_N)
                                                                             (Trans
                                                                                  (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                       <GHC.Types.Int>_N)
                                                                                  (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N
                                                                         Data.Array.Accelerate.Array.Sugar.:. <Data.Array.Accelerate.Array.Sugar.All>_N)_N)
                         (Data.Array.Accelerate.Smart.Backpermute
                            @ Data.Array.Accelerate.Smart.Acc
                            @ Data.Array.Accelerate.Smart.Seq
                            @ Data.Array.Accelerate.Smart.Exp
                            @ (Data.Array.Accelerate.Array.Sugar.Array
                                 Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                            @ ((Data.Array.Accelerate.Array.Sugar.Z
                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                            @ Data.Array.Accelerate.Array.Sugar.DIM2
                            @ GHC.Types.Double
                            @~ <Data.Array.Accelerate.Array.Sugar.Array
                                  Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                            Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                            Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                            Data.Array.Accelerate.Array.Sugar.$fEltDouble
                            (let {
                               a54 :: Data.Array.Accelerate.Smart.PreExp
                                        Data.Array.Accelerate.Smart.Acc
                                        Data.Array.Accelerate.Smart.Seq
                                        Data.Array.Accelerate.Smart.Exp
                                        ((Data.Array.Accelerate.Array.Sugar.Z
                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                               = Data.Array.Accelerate.Smart.Shape
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ ((Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   @ GHC.Types.Double
                                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                                   brr
                             } in
                             (Data.Array.Accelerate.Smart.IndexCons
                                @ Data.Array.Accelerate.Smart.Acc
                                @ Data.Array.Accelerate.Smart.Seq
                                @ Data.Array.Accelerate.Smart.Exp
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int)
                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                @ (Data.Array.Accelerate.Lift.Plain
                                     (Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                             GHC.Types.Int))
                                @ GHC.Types.Int
                                @~ <Data.Array.Accelerate.Lift.Plain
                                      (Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                              GHC.Types.Int)
                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                  `cast`
                                (Data.Array.Accelerate.Array.Sugar.Slice
                                   (Trans
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                         Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                        (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                  <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                  <GHC.Types.Int>_N))))_R
                                Data.Array.Accelerate.Array.Sugar.$fEltInt
                                (Data.Array.Accelerate.Smart.IndexCons
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z
                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z)
                                   @ GHC.Types.Int
                                   @~ <Data.Array.Accelerate.Lift.Plain
                                         Data.Array.Accelerate.Array.Sugar.Z
                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N
                                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.$WIndexNil
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp)
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                                   (Data.Array.Accelerate.Smart.IndexHead
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ GHC.Types.Int
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           (Data.Array.Accelerate.Array.Sugar.Z
                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                   GHC.Types.Int))
                                      Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      a54
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                    <GHC.Types.Int>_N))
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                         <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                         <GHC.Types.Int>_N)))
                                (Data.Array.Accelerate.Smart.IndexHead
                                   @ Data.Array.Accelerate.Smart.Acc
                                   @ Data.Array.Accelerate.Smart.Seq
                                   @ Data.Array.Accelerate.Smart.Exp
                                   @ GHC.Types.Int
                                   @ (Data.Array.Accelerate.Lift.Plain
                                        Data.Array.Accelerate.Array.Sugar.Z)
                                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                                     `cast`
                                   (Data.Array.Accelerate.Array.Sugar.Slice
                                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                                   (Data.Array.Accelerate.Smart.IndexTail
                                      @ Data.Array.Accelerate.Smart.Acc
                                      @ Data.Array.Accelerate.Smart.Seq
                                      @ Data.Array.Accelerate.Smart.Exp
                                      @ (Data.Array.Accelerate.Lift.Plain
                                           (Data.Array.Accelerate.Array.Sugar.Z
                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                   GHC.Types.Int))
                                      @ GHC.Types.Int
                                      Data.Array.Accelerate.Prelude.$s$fDivision:._$s$fSlice:.
                                        `cast`
                                      (Data.Array.Accelerate.Array.Sugar.Slice
                                         (Trans
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                               Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                              (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                        <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                        <GHC.Types.Int>_N))))_R
                                      Data.Array.Accelerate.Array.Sugar.$fEltInt
                                      a54
                                        `cast`
                                      (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])
                                                                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                          (Sym (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                                    <GHC.Types.Int>_N))
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                                     `cast`
                                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                       <GHC.Types.Int>_N)))
                                  `cast`
                                (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <GHC.Types.Int>_N))
                               `cast`
                             (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                 (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                      <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                      <GHC.Types.Int>_N)
                                                                                 (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                  Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                             Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))
                            Data.Array.Accelerate.Prelude.transpose2
                              `cast`
                            ((Data.Array.Accelerate.Smart.Exp
                                (Trans
                                     (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                          <Data.Array.Accelerate.Array.Sugar.Z
                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Smart.Exp
                                                                                  GHC.Types.Int>_N
                                          <GHC.Types.Int>_N)
                                     (Trans
                                          (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                               <Data.Array.Accelerate.Array.Sugar.Z>_N
                                               <GHC.Types.Int>_N)
                                          (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                           Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N))_R
                             ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Trans
                                                                                     (Data.Array.Accelerate.Lift.TFCo:R:Plain:.[0]
                                                                                          <Data.Array.Accelerate.Array.Sugar.Z>_N
                                                                                          <GHC.Types.Int>_N)
                                                                                     (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0]
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                 Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                            brr)
                           `cast`
                         (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                           (Trans
                                                                                (Trans
                                                                                     (Trans
                                                                                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShapeZ[0]))
                                                                                          (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.[0]
                                                                                                    <Data.Array.Accelerate.Array.Sugar.Z>_N))
                                                                                      Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                     (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                                                               <Data.Array.Accelerate.Array.Sugar.Z
                                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N))
                                                                                 Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                (Sym (Data.Array.Accelerate.Array.Sugar.TFCo:R:SliceShape:.0[0]
                                                                                          <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)))
                                                                           <GHC.Types.Double>_N)_N))
                        `cast`
                      (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) (Data.Array.Accelerate.Array.Sugar.Array
                                                                        (Trans
                                                                             (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                  <(Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N)
                                                                             (Trans
                                                                                  (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.0[0]
                                                                                       <Data.Array.Accelerate.Array.Sugar.Z
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int>_N)
                                                                                  (Trans
                                                                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShape:.[0]
                                                                                            <Data.Array.Accelerate.Array.Sugar.Z>_N)
                                                                                       (Data.Array.Accelerate.Array.Sugar.TFCo:R:FullShapeZ[0]
                                                                                        Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                                   Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N
                                                                              Data.Array.Accelerate.Array.Sugar.:. <GHC.Types.Int>_N)_N)
                                                                        <GHC.Types.Double>_N)_N))
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                     (Data.Array.Accelerate.Array.Sugar.DIM2
                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                     GHC.Types.Double>_N)) -}
10e67459fe5a73c0e3eada61883911d3
  mmult2 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Seq
      Data.Array.Accelerate.Smart.Exp
      Data.Array.Accelerate.Array.Sugar.All
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ Data.Array.Accelerate.Array.Sugar.All
                   Data.Array.Accelerate.Array.Sugar.$fEltAll
                   Data.Array.Accelerate.Array.Sugar.All) -}
4685bde3fcfdffc5271c0788a55f4dc3
  mmult3 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Seq
      Data.Array.Accelerate.Smart.Exp
      (Data.Array.Accelerate.Lift.Plain
         Data.Array.Accelerate.Array.Sugar.Z
       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  {- Unfolding: (Data.Array.Accelerate.Smart.IndexCons
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Lift.Plain
                        Data.Array.Accelerate.Array.Sugar.Z
                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                   @ (Data.Array.Accelerate.Lift.Plain
                        Data.Array.Accelerate.Array.Sugar.Z)
                   @ Data.Array.Accelerate.Array.Sugar.All
                   @~ <Data.Array.Accelerate.Lift.Plain
                         Data.Array.Accelerate.Array.Sugar.Z
                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All>_N
                   Data.Array.Accelerate.Array.Sugar.$fSliceZ
                     `cast`
                   (Data.Array.Accelerate.Array.Sugar.Slice
                      (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))_R
                   Data.Array.Accelerate.Array.Sugar.$fEltAll
                   (Data.Array.Accelerate.Smart.$WIndexNil
                      @ Data.Array.Accelerate.Smart.Acc
                      @ Data.Array.Accelerate.Smart.Seq
                      @ Data.Array.Accelerate.Smart.Exp)
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) (Sym (Data.Array.Accelerate.Lift.TFCo:R:PlainZ[0])))
                   MMultDivConq.mmult2
                     `cast`
                   (Sym (Data.Array.Accelerate.Smart.NTCo:Exp[0]) <Data.Array.Accelerate.Array.Sugar.All>_N)) -}
63b5b1ae39291071e34080caa0d01e1d
  mmult4 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Seq
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Double
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Double
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   MMultDivConq.mmult5) -}
e59eb0010bfaef43350489ce8bf3d64d
  mmult5 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0) -}
3b611c6edb5de9f5cea5dbf85ef87bde
  mmult6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
8170b02deb90592cf30b75b0f11e8ce3
  splitFour ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double),
        Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double),
        Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double),
        Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double))
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 case MMultDivConq.$wsplitFour w of ww { (#,,,#) ww1 ww2 ww3 ww4 ->
                 (ww1, ww2, ww3, ww4) }) -}
f4c5186a8a6b2d0267175a57b3bfd2ad
  splitFour1 ::
    Data.Array.Accelerate.Smart.PreExp
      Data.Array.Accelerate.Smart.Acc
      Data.Array.Accelerate.Smart.Seq
      Data.Array.Accelerate.Smart.Exp
      GHC.Types.Int
  {- Unfolding: (Data.Array.Accelerate.Smart.Const
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ GHC.Types.Int
                   Data.Array.Accelerate.Array.Sugar.$fEltInt
                   MMultDivConq.splitFour2) -}
914deafe39c8847465b42b71b3e29eb5
  splitFour2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2) -}
6290b1250bb6b438e30a8a6a82113d89
  splitHoriz ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double),
        Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double))
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 case MMultDivConq.$wsplitHoriz w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
b093a9981f9fc9636048647873b9d8e9
  splitVert ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> (Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double),
        Data.Array.Accelerate.Smart.Acc
          (MMultDivConq.Matrix GHC.Types.Double))
  {- Arity: 1, Strictness: <L,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Data.Array.Accelerate.Smart.Acc
                          (MMultDivConq.Matrix GHC.Types.Double) ->
                 case MMultDivConq.$wsplitVert w of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
78b0011b3e01ed428114304fa53e1554
  strassen ::
    Data.Array.Accelerate.Smart.Acc
      (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (MMultDivConq.Matrix GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U> -}
d393a6aff8f2f433d26683df24a3cdaf
  sub ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                MMultDivConq.sub1
                  `cast`
                (<Data.Array.Accelerate.Smart.Acc
                    (Data.Array.Accelerate.Array.Sugar.Array
                       Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)>_R
                 ->_R <Data.Array.Accelerate.Smart.Acc
                         (Data.Array.Accelerate.Array.Sugar.Array
                            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)>_R
                 ->_R Sym (Data.Array.Accelerate.Smart.NTCo:Acc[0]) <Data.Array.Accelerate.Array.Sugar.Array
                                                                       Data.Array.Accelerate.Array.Sugar.DIM2
                                                                       GHC.Types.Double>_N) -}
bc57b994dcf052669118e9d31475368f
  sub1 ::
    Data.Array.Accelerate.Smart.Acc
      (Data.Array.Accelerate.Array.Sugar.Array
         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.Acc
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
    -> Data.Array.Accelerate.Smart.PreAcc
         Data.Array.Accelerate.Smart.Acc
         Data.Array.Accelerate.Smart.Seq
         Data.Array.Accelerate.Smart.Exp
         (Data.Array.Accelerate.Array.Sugar.Array
            Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Data.Array.Accelerate.Smart.Acc
                             (Data.Array.Accelerate.Array.Sugar.Array
                                Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                   eta2 :: Data.Array.Accelerate.Smart.Acc
                             (Data.Array.Accelerate.Array.Sugar.Array
                                Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double) ->
                 Data.Array.Accelerate.Smart.ZipWith
                   @ Data.Array.Accelerate.Smart.Acc
                   @ Data.Array.Accelerate.Smart.Seq
                   @ Data.Array.Accelerate.Smart.Exp
                   @ (Data.Array.Accelerate.Array.Sugar.Array
                        Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double)
                   @ Data.Array.Accelerate.Array.Sugar.DIM2
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   @~ <Data.Array.Accelerate.Array.Sugar.Array
                         Data.Array.Accelerate.Array.Sugar.DIM2 GHC.Types.Double>_N
                   Data.Array.Accelerate.Prelude.$s$fDivision:.0_$s$fShape:.
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Array.Sugar.$fEltDouble
                   Data.Array.Accelerate.Classes.Num.$fNumExp1_$c-
                   eta1
                   eta2) -}
31138797b209ee126461b07fafecf349
  toMatrix ::
    GHC.Types.Int
    -> [GHC.Types.Double] -> MMultDivConq.Matrix GHC.Types.Double
  {- Arity: 2, Strictness: <S,1*U(U)><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: [GHC.Types.Double] ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MMultDivConq.$wtoMatrix ww1 w1 }) -}
505178fed405c61045e86dcbc98266c2
  toMatrix1 :: GHC.Types.IO ()
  {- Strictness: b -}
"SPEC/MMultDivConq $fArrayElt(,) @ (((), ()), Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                         (((), ()),
                                                                                          GHC.Types.Int)
                                                                         $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                          ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,) @ (((), ()),
                                                    GHC.Types.Int)
                                                 @ ()
                                                 $dArrayElt
                                                 $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)2
"SPEC/MMultDivConq $fArrayElt(,) @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                   ((), ())
                                                                   $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                    GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,) @ ((), ())
                                                 @ GHC.Types.Int
                                                 $dArrayElt
                                                 $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)
"SPEC/MMultDivConq $fArrayElt(,)_$carrayElt @ (((), ()), Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                    (((),
                                                                                                      ()),
                                                                                                     GHC.Types.Int)
                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$carrayElt @ (((),
                                                                ()),
                                                               GHC.Types.Int)
                                                            @ ()
                                                            $dArrayElt
                                                            $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$carrayElt
"SPEC/MMultDivConq $fArrayElt(,)_$cnewArrayData @ (((), ()),
                                                  Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                          (((),
                                                                                                                                                            ()),
                                                                                                                                                           GHC.Types.Int)
                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cnewArrayData @ (((),
                                                                    ()),
                                                                   GHC.Types.Int)
                                                                @ ()
                                                                $dArrayElt
                                                                $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cnewArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                  ((),
                                                                                                   ())
                                                                                  $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cnewArrayData @ ((),
                                                                   ())
                                                                @ GHC.Types.Int
                                                                $dArrayElt
                                                                $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cnewArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfArrayData @ (((), ()),
                                                     Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                (((),
                                                                                                                                                                  ()),
                                                                                                                                                                 GHC.Types.Int)
                                                                                                                                                $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                 ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfArrayData @ (((),
                                                                       ()),
                                                                      GHC.Types.Int)
                                                                   @ ()
                                                                   $dArrayElt
                                                                   $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     ((),
                                                                                                      ())
                                                                                     $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                      GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfArrayData @ ((),
                                                                      ())
                                                                   @ GHC.Types.Int
                                                                   $dArrayElt
                                                                   $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfMutableArrayData @ (((),
                                                             ()),
                                                            Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                           (((),
                                                                                                                                                                                                                                             ()),
                                                                                                                                                                                                                                            GHC.Types.Int)
                                                                                                                                                                                                                           $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                            ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfMutableArrayData @ (((),
                                                                              ()),
                                                                             GHC.Types.Int)
                                                                          @ ()
                                                                          $dArrayElt
                                                                          $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cptrsOfMutableArrayData @ ((),
                                                            ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                        ((),
                                                                                                                                                                         ())
                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                         GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cptrsOfMutableArrayData @ ((),
                                                                             ())
                                                                          @ GHC.Types.Int
                                                                          $dArrayElt
                                                                          $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cptrsOfMutableArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$ctouchArrayData @ (((), ()),
                                                    Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                              (((),
                                                                                                                                                                ()),
                                                                                                                                                               GHC.Types.Int)
                                                                                                                                              $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                               ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$ctouchArrayData @ (((),
                                                                      ()),
                                                                     GHC.Types.Int)
                                                                  @ ()
                                                                  $dArrayElt
                                                                  $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$ctouchArrayData @ ((), ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                    ((),
                                                                                                     ())
                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$ctouchArrayData @ ((),
                                                                     ())
                                                                  @ GHC.Types.Int
                                                                  $dArrayElt
                                                                  $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$ctouchArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeFreezeArrayData @ (((),
                                                            ()),
                                                           Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                        (((),
                                                                                                                                                                                                                                          ()),
                                                                                                                                                                                                                                         GHC.Types.Int)
                                                                                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                                                                                         ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeFreezeArrayData @ (((),
                                                                             ()),
                                                                            GHC.Types.Int)
                                                                         @ ()
                                                                         $dArrayElt
                                                                         $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeFreezeArrayData @ ((),
                                                           ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                      ((),
                                                                                                                                                                       ())
                                                                                                                                                      $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                       GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeFreezeArrayData @ ((),
                                                                            ())
                                                                         @ GHC.Types.Int
                                                                         $dArrayElt
                                                                         $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeFreezeArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeIndexArrayData @ (((), ()),
                                                          Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                          (((),
                                                                                                                                                                            ()),
                                                                                                                                                                           GHC.Types.Int)
                                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeIndexArrayData @ (((),
                                                                            ()),
                                                                           GHC.Types.Int)
                                                                        @ ()
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeIndexArrayData @ ((),
                                                          ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                    ((),
                                                                                                                                                                     ())
                                                                                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeIndexArrayData @ ((),
                                                                           ())
                                                                        @ GHC.Types.Int
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeIndexArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeReadArrayData @ (((), ()),
                                                         Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                        (((),
                                                                                                                                                                          ()),
                                                                                                                                                                         GHC.Types.Int)
                                                                                                                                                        $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                         ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeReadArrayData @ (((),
                                                                           ()),
                                                                          GHC.Types.Int)
                                                                       @ ()
                                                                       $dArrayElt
                                                                       $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeReadArrayData @ ((),
                                                         ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                  ((),
                                                                                                                                                                   ())
                                                                                                                                                  $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeReadArrayData @ ((),
                                                                          ())
                                                                       @ GHC.Types.Int
                                                                       $dArrayElt
                                                                       $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeReadArrayData
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeWriteArrayData @ (((), ()),
                                                          Int) @ ()" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                          (((),
                                                                                                                                                                            ()),
                                                                                                                                                                           GHC.Types.Int)
                                                                                                                                                          $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                           ()
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeWriteArrayData @ (((),
                                                                            ()),
                                                                           GHC.Types.Int)
                                                                        @ ()
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData1
"SPEC/MMultDivConq $fArrayElt(,)_$cunsafeWriteArrayData @ ((),
                                                          ()) @ Int" [ALWAYS] forall $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                    ((),
                                                                                                                                                                     ())
                                                                                                                                                    $dArrayElt1 :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Data.$fArrayElt(,)_$cunsafeWriteArrayData @ ((),
                                                                           ())
                                                                        @ GHC.Types.Int
                                                                        $dArrayElt
                                                                        $dArrayElt1
  = MMultDivConq.$s$fArrayElt(,)_$s$fArrayElt(,)_$cunsafeWriteArrayData
"SPEC/MMultDivConq $fArraysArray @ (DIM1 :. Int) @ Double" [ALWAYS] forall $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                           (Data.Array.Accelerate.Array.Sugar.Array
                                                                                              (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                              GHC.Types.Double)
                                                                           $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                            (Data.Array.Accelerate.Array.Sugar.ArrRepr
                                                                                               (Data.Array.Accelerate.Array.Sugar.Array
                                                                                                  (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                  GHC.Types.Double))
                                                                           $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                         (Data.Array.Accelerate.Array.Sugar.DIM1
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                           $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                       GHC.Types.Double
  Data.Array.Accelerate.Array.Sugar.$fArraysArray @ (Data.Array.Accelerate.Array.Sugar.DIM1
                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                  @ GHC.Types.Double
                                                  $dTypeable
                                                  $dTypeable1
                                                  $dShape1
                                                  $dElt2
  = MMultDivConq.$s$fArraysArray
"SPEC/MMultDivConq $fElt:. @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                    (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                        (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                            (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                        $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                        (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                           (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                        $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                    ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                        $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                    Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                            @ Data.Array.Accelerate.Array.Sugar.All
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.29
"SPEC/MMultDivConq $fElt:. @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                           ((Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dTypeable :: Data.Typeable.Internal.Typeable
                                                                               ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                               $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                               (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                               $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           (Data.Array.Accelerate.Array.Sugar.Z
                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                               $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                           GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                            @ GHC.Types.Int
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.16
"SPEC/MMultDivConq $fElt:. @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                  (Data.Array.Accelerate.Array.Sugar.Z
                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      $dTypeable :: Data.Typeable.Internal.Typeable
                                                                      (Data.Array.Accelerate.Array.Sugar.Z
                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                          (Data.Array.Accelerate.Array.Sugar.Z
                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                      $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                      (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                         (Data.Array.Accelerate.Array.Sugar.Z
                                                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                      $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                  Data.Array.Accelerate.Array.Sugar.Z
                                                      $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                  Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:. @ Data.Array.Accelerate.Array.Sugar.Z
                                            @ Data.Array.Accelerate.Array.Sugar.All
                                            $dShow
                                            $dTypeable
                                            $dTypeable1
                                            $dArrayElt
                                            $dElt2
                                            $dElt3
  = MMultDivConq.$s$fElt:.
"SPEC/MMultDivConq $fElt:._$cfromElt @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                              (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                  $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                                  (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                  $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                                   (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                  $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                  (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                     (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                  $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                              ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                               Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                  $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                              Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:._$cfromElt @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                          Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                         Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                      @ Data.Array.Accelerate.Array.Sugar.All
                                                      $dShow
                                                      $dTypeable
                                                      $dTypeable1
                                                      $dArrayElt
                                                      $dElt2
                                                      $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt1
"SPEC/MMultDivConq $fElt:._$cfromElt @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                     ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                         ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                          Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                          (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                             ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                         $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                         (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                         $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                     (Data.Array.Accelerate.Array.Sugar.Z
                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                         $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                     GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:._$cfromElt @ (Data.Array.Accelerate.Array.Sugar.Z
                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                      @ GHC.Types.Int
                                                      $dShow
                                                      $dTypeable
                                                      $dTypeable1
                                                      $dArrayElt
                                                      $dElt2
                                                      $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$cfromElt
"SPEC/MMultDivConq $fElt:._$ctoElt @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                            (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                               Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                              Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                                (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                                 (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                    (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                                (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                                   (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                      Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                     Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                                $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                            Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fElt:._$ctoElt @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                       Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                    @ Data.Array.Accelerate.Array.Sugar.All
                                                    $dShow
                                                    $dTypeable
                                                    $dTypeable1
                                                    $dArrayElt
                                                    $dElt2
                                                    $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt1
"SPEC/MMultDivConq $fElt:._$ctoElt @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                   ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                    Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       $dTypeable :: Data.Typeable.Internal.Typeable
                                                                                       ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                       $dTypeable1 :: Data.Typeable.Internal.Typeable
                                                                                        (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                           ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                            Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                       $dArrayElt :: Data.Array.Accelerate.Array.Data.ArrayElt
                                                                                       (Data.Array.Accelerate.Array.Sugar.EltRepr
                                                                                          ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                                       $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                   (Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                       $dElt3 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                   GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fElt:._$ctoElt @ (Data.Array.Accelerate.Array.Sugar.Z
                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                    @ GHC.Types.Int
                                                    $dShow
                                                    $dTypeable
                                                    $dTypeable1
                                                    $dArrayElt
                                                    $dElt2
                                                    $dElt3
  = MMultDivConq.$s$fElt:._$s$fElt:._$ctoElt
"SPEC/MMultDivConq $fShow:. @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                     ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                      Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                         $dShow1 :: GHC.Show.Show
                                                                                      Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                             @ Data.Array.Accelerate.Array.Sugar.All
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.2
"SPEC/MMultDivConq $fShow:. @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                            (Data.Array.Accelerate.Array.Sugar.Z
                                                                             Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                $dShow1 :: GHC.Show.Show
                                                                             GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                             @ GHC.Types.Int
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.1
"SPEC/MMultDivConq $fShow:. @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                   Data.Array.Accelerate.Array.Sugar.Z
                                                       $dShow1 :: GHC.Show.Show
                                                                    Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:. @ Data.Array.Accelerate.Array.Sugar.Z
                                             @ Data.Array.Accelerate.Array.Sugar.All
                                             $dShow
                                             $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:.
"SPEC/MMultDivConq $fShow:._$cshowList @ ((Z :. All) :. Int) @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                                 Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                    $dShow1 :: GHC.Show.Show
                                                                                                 Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                            Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                           Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                        @ Data.Array.Accelerate.Array.Sugar.All
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList2
"SPEC/MMultDivConq $fShow:._$cshowList @ (Z :. All) @ Int" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                       (Data.Array.Accelerate.Array.Sugar.Z
                                                                                        Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                           $dShow1 :: GHC.Show.Show
                                                                                        GHC.Types.Int
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ (Data.Array.Accelerate.Array.Sugar.Z
                                                           Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                        @ GHC.Types.Int
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList1
"SPEC/MMultDivConq $fShow:._$cshowList @ Z @ All" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                              Data.Array.Accelerate.Array.Sugar.Z
                                                                  $dShow1 :: GHC.Show.Show
                                                                               Data.Array.Accelerate.Array.Sugar.All
  Data.Array.Accelerate.Array.Sugar.$fShow:._$cshowList @ Data.Array.Accelerate.Array.Sugar.Z
                                                        @ Data.Array.Accelerate.Array.Sugar.All
                                                        $dShow
                                                        $dShow1
  = MMultDivConq.$s$fElt:._$s$fShow:._$cshowList
"SPEC/MMultDivConq $fSlice:. @ (Z :. All)" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                       ((Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                           $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                         (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                            ((Data.Array.Accelerate.Array.Sugar.Z
                                                                              Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                             Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int))
                                                           $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                        (Data.Array.Accelerate.Array.Sugar.Z
                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
  Data.Array.Accelerate.Array.Sugar.$fSlice:. @ (Data.Array.Accelerate.Array.Sugar.Z
                                                 Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                              $dElt2
                                              $dShape1
                                              $dShape2
                                              $dShape3
                                              $dSlice
  = MMultDivConq.$s$fSlice:.
"SPEC/MMultDivConq $fSlice:.0 @ ((Z :. All) :. Int)" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                                                 (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                  Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                     $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                                   (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                                      (((Data.Array.Accelerate.Array.Sugar.Z
                                                                                         Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                        Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                                                                       Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                                     $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                                  ((Data.Array.Accelerate.Array.Sugar.Z
                                                                                    Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                                                   Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
  Data.Array.Accelerate.Array.Sugar.$fSlice:.0 @ ((Data.Array.Accelerate.Array.Sugar.Z
                                                   Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                  Data.Array.Accelerate.Array.Sugar.:. GHC.Types.Int)
                                               $dElt2
                                               $dShape1
                                               $dShape2
                                               $dShape3
                                               $dSlice
  = MMultDivConq.$s$fSlice:.0
"SPEC/MMultDivConq $fSlice:.0 @ Z" [ALWAYS] forall $dElt2 :: Data.Array.Accelerate.Array.Sugar.Elt
                                                               (Data.Array.Accelerate.Array.Sugar.Z
                                                                Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All)
                                                   $dShape1 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.SliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dShape2 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.CoSliceShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dShape3 :: Data.Array.Accelerate.Array.Sugar.Shape
                                                                 (Data.Array.Accelerate.Array.Sugar.FullShape
                                                                    (Data.Array.Accelerate.Array.Sugar.Z
                                                                     Data.Array.Accelerate.Array.Sugar.:. Data.Array.Accelerate.Array.Sugar.All))
                                                   $dSlice :: Data.Array.Accelerate.Array.Sugar.Slice
                                                                Data.Array.Accelerate.Array.Sugar.Z
  Data.Array.Accelerate.Array.Sugar.$fSlice:.0 @ Data.Array.Accelerate.Array.Sugar.Z
                                               $dElt2
                                               $dShape1
                                               $dShape2
                                               $dShape3
                                               $dSlice
  = MMultDivConq.$s$fSlice:._$s$fSlice:.0
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

